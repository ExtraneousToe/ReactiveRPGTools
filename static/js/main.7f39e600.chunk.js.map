{"version":3,"sources":["pages/DisplayList.js","components/HarvestedItemFilterBlock.js","utility/stringUtil.js","data/Monster.js","data/HarvestingTable.js","data/TrinketTable.js","data/CraftableItem.js","data/HarvestedItem.js","utility/StorageUtil.js","utility/harvestedItemUtil.js","pages/HarvestedItems.js","pages/Home.js","utility/saveFile.js","components/ChallengeRatingDisplay.js","utility/challengeRatingUtil.js","utility/statsUtil.js","utility/creatureTypeUtil.js","data/referenceCardSizes.js","utility/trinketTableUtil.js","utility/inputUtil.js","utility/descriptionUtil.js","utility/craftableItemUtil.js","utility/harvestingTableUtil.js","components/RenderBlocks.js","components/MonsterDisplay.js","components/MonsterFilterBlock.js","pages/Monsters.js","pages/CraftableItems.js","navigationConstants.js","LayoutControl/NavMenu.js","LayoutControl/Layout.js","App.js","serviceWorker.js","index.js"],"names":["DisplayColumn","colDisplay","listDisplayFunc","ascendingSortFunction","this","sortFunc","bind","sortAscending","sortDescending","isAscending","a","b","DisplayList","props","headers","items","useState","sortByIdx","setSortByIdx","setSortAscending","headerRowContents","i","push","Col","key","onClick","e","preventDefault","className","length","filterObject","filterKeys","Object","keys","filter","sort","contentsRows","itemLen","map","item","idx","DisplayListRow","idFunction","pathRoot","isSelected","selectedId","Row","history","useHistory","innerCols","desiredId","headerLen","h","headerObj","pathRoute","activeName","HarvestedItemFilterBlock","label","value","setter","nameField","setNameField","filterRows","type","style","width","onChange","target","onSubmit","obj","Name","toLowerCase","match","submitFilter","display","x","y","leadingCharacter","splitByTags","string","char","char2","tagDepth","out","curStr","isLastOpen","len","replace","splitTagByPipe","_splitByPipeBase","_stripTagLayer","str","includes","it","startsWith","firstIndex","indexOf","substr","splitFirstSpace","slice","tag","text","tagStr","tagGroups","split","trim","seen","Set","last","has","add","tags","join","attackTagToFull","rollText","displayText","n","Number","isNaN","Error","asNum","compactText","flags","parts","newText","oldText","stripTags","nxtStr","err","console","error","Monster","name","referenceCardSize","source","otherSources","creatureSize","creatureType","stats","armorClass","challengeRating","health","passivePerc","languages","speed","saves","skills","senses","alignment","resistances","immunities","conditionImmunities","traits","spellcasting","actions","reactions","environments","legendaryHeader","legendaryActions","harvestingTable","trinketTableType","cardSize","size","fiveEState","feType","CreatureType","log","feCR","cr","ChallengeRating","lair","coven","feACLines","ac","line","acObj","parseInt","from","condition","ArmorClass","StatsBlock","HealthBlock","hp","passive","SpeedBlock","walk","fly","swim","climb","burrow","canHover","save","skill","resist","immune","conditionImmune","trait","action","reaction","environment","legendary","oldState","dex","con","int","wis","cha","HarvestingTable","TrinketTableType","strOut","matches","exec","average","formula","SPEED_KEYS","undefined","SpeedEntry","ft","forEach","val","simpleDisplay","inObj","number","rows","HarvestingTableRow","dc","DifficultyClass","itemNameRef","ItemNameRef","qty","Quantity","notes","Notes","r","oldMonster","Rows","row","difficultyClass","itemNameReference","quantity","TrinketTable","TrinketTableRow","d8Roll","D8Roll","descriptionLine","DescriptionLine","ValueGP","weight","WeightLB","CraftableItem","crafter","rarity","requiresAttunement","description","materials","materialGrouping","attunementNote","oldItem","Crafter","Rarity","RequiresAttunement","Description","Materials","matRow","componentId","ComponentId","Type","MaterialGrouping","AttunementNote","HarvestedItem","craftingUsage","useText","requiredToolNames","CraftingUsage","UseText","RequiredToolNames","$","window","ajaxJson","fileName","Promise","resolve","reject","getJSON","data","Load5eMonsterFile","localKey","Storage","processedKeys","processingKeys","_meta","meta","dependencies","monster","jdx","depKey","mon","_copy","from5eSource","monsterDict","id","_init","subStateMonsterDict","harvestingTableDict","harvestableItemDict","trinketTableDict","craftableItemDict","Init","Index","Data","monsters","SubStateMonster","harvestingTables","harvestedItems","harvestedItem","trinketTables","trinketTable","craftableItems","craftableItem","storage","harvestingTableGroup","getItemReference","simplePassthrough","joinArray","splitArray","HarvestedItemDisplay","hItem","para","React","Component","HarvestedItems","filterObj","setFilterObj","matchPath","location","pathname","path","params","sortStrAsc","harvestedOutput","xs","md","values","Home","filename","fileContent","link","document","createElement","download","href","encodeURIComponent","body","appendChild","click","removeChild","fileSaveAs","JSON","stringify","height","CRList","crOut","getChallengeRatingDisplayString","StatBlock","statBlock","Container","getModifierDisplayString","stat","mod","Math","floor","getModifier","SWARM_REGEX","CreatureTypeList","getCreatureTypeDisplayString","cType","toString","CARD_SIZES","TrinketTableDisplay","rowsOut","ArrayInput","redraw","setRedraw","propObj","object","propKey","objKey","defaultInsert","insertLine","tarIndex","splice","arrayLines","subType","index","hideLabel","SelectInput","options","opt","RadioButtonInput","onChangeFunc","checked","for","StringInput","propIdx","disabled","CheckboxInput","ModularDescription","desc","SimpleDescription","ListDescription","lines","ItemDescription","UnhandledDescription","entry","output","styleObj","listStyle","getIdFromItemName","getIdFromItem","CraftableItemDisplay","materialOutput","mat","matItem","finalMaterialOutput","MaterialInput","HarvestingTableDisplay","nameOut","descriptionOut","valueOut","weightOut","craftingOut","j","k","NavLink","Link","to","apprasialTarget","DynamicRender","toRender","entries","ent","ListRender","list","ItemRender","SpellcastingBlock","headerEntries","spells","will","daily","dailyKeys","num","each","lead","spellKeys","spellsBlock","slots","numCount","spellLevel","MonsterDisplay","tabKey","setTabKey","tablesTabKey","setTablesTabKey","typeOut","traitsAndSpellcastingOut","actionsOut","reactionsOut","subMonster","hasHarvestingTable","hasTrinketTable","hasTables","oSrc","Tabs","activeKey","onSelect","Tab","eventKey","title","ACHPSpeed","SkillsAndSavesBlock","topBlock","acOut","hpOut","speedOut","keyValueFunction","inKey","simpleJoinFunction","skillsSavesEtcOut","header","disp","pair","BlockRow_Text","MonsterFilterBlock","selectOpts","optLabels","typeField","setTypeField","cardSizeField","setCardSizeField","CardSize","ReferenceCardSize","Monsters","outVal","sortCreatureTypeAsc","InLair","InCoven","sortCRAsc","subMon","subMonA","subMonB","CraftableItems","displayOutput","MENU","linkName","linkTarget","routePaths","exact","renderFunction","NavMenu","navOutput","linkDeets","NavItem","Navbar","NavbarBrand","navbar","Layout","fluid","children","App","routeOpts","render","Boolean","hostname","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","then","ReactDOM","StrictMode","basename","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7f39e600.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport \"./DisplayList.css\";\r\n\r\nexport class DisplayColumn {\r\n  constructor(colDisplay, listDisplayFunc, ascendingSortFunction) {\r\n    this.colDisplay = colDisplay;\r\n    this.listDisplayFunc = listDisplayFunc;\r\n    this.ascendingSortFunction = ascendingSortFunction;\r\n\r\n    this.sortFunc = this.sortFunc.bind(this);\r\n    this.sortAscending = this.sortAscending.bind(this);\r\n    this.sortDescending = this.sortDescending.bind(this);\r\n  }\r\n\r\n  sortFunc(isAscending) {\r\n    return isAscending ? this.sortAscending : this.sortDescending;\r\n  }\r\n\r\n  sortAscending(a, b) {\r\n    return this.ascendingSortFunction(a, b);\r\n  }\r\n\r\n  sortDescending(a, b) {\r\n    return -this.ascendingSortFunction(a, b);\r\n  }\r\n}\r\n\r\nexport function DisplayList(props) {\r\n  // headers should be a collection of DisplayColumn instances\r\n  let headers = props.headers;\r\n  let items = props.items;\r\n\r\n  let [sortByIdx, setSortByIdx] = useState(0);\r\n  let [sortAscending, setSortAscending] = useState(true);\r\n\r\n  let headerRowContents = [];\r\n  for (let i = 0; i < headers.length; ++i) {\r\n    headerRowContents.push(\r\n      <Col\r\n        key={`dl-h-col-${i}`}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n\r\n          if (i === sortByIdx) {\r\n            setSortAscending(!sortAscending);\r\n          } else {\r\n            setSortByIdx(i);\r\n            setSortAscending(true);\r\n          }\r\n        }}\r\n        className={`list-header ${i === sortByIdx && \"active\"}`}\r\n      >\r\n        {headers[i].colDisplay}{\" \"}\r\n        {i === sortByIdx && <>{sortAscending ? \"^\" : \"v\"}</>}\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  let filterObject = props.filterObject;\r\n  let filterKeys = Object.keys(filterObject);\r\n\r\n  for (let i = 0; i < filterKeys.length; ++i) {\r\n    items = items.filter(filterObject[filterKeys[i]]);\r\n  }\r\n\r\n  items.sort(headers[sortByIdx].sortFunc(sortAscending));\r\n\r\n  let contentsRows = [];\r\n  let itemLen = items.length;\r\n  for (let i = 0; i < itemLen; ++i) {\r\n    contentsRows.push();\r\n  }\r\n\r\n  contentsRows = items.map((item, idx) => {\r\n    return (\r\n      <DisplayListRow\r\n        key={`row-${props.idFunction(item)}`}\r\n        headers={headers}\r\n        item={item}\r\n        idFunction={props.idFunction}\r\n        pathRoot={props.pathRoot}\r\n        isSelected={props.idFunction(item) === props.selectedId}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* <span>{items.length}</span> */}\r\n      <Row className=\"mx-0\">{headerRowContents}</Row>\r\n      <ul className=\"element-list\">{contentsRows}</ul>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction DisplayListRow(props) {\r\n  let history = useHistory();\r\n\r\n  let { headers, item, idFunction, pathRoot, isSelected } = props;\r\n\r\n  let innerCols = [];\r\n\r\n  let desiredId = idFunction(item);\r\n\r\n  let headerLen = headers.length;\r\n  for (let h = 0; h < headerLen; ++h) {\r\n    let headerObj = headers[h];\r\n\r\n    innerCols.push(\r\n      <Col key={`${desiredId}-${h}`}>{headerObj.listDisplayFunc(item)}</Col>\r\n    );\r\n  }\r\n\r\n  let pathRoute = `${pathRoot}/${desiredId}`;\r\n\r\n  let activeName = isSelected ? \"active\" : \"\";\r\n\r\n  return (\r\n    <li\r\n      onClick={(e) => {\r\n        history.push(pathRoute);\r\n        e.preventDefault();\r\n      }}\r\n      className={activeName}\r\n    >\r\n      <Row>{innerCols}</Row>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nfunction BlockRow_Text(key, label, value, setter) {\r\n    return (\r\n        <Row key={key}>\r\n            <Col className=\"col-3\">{label}:</Col>\r\n            <Col>\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    style={{\r\n                        width: \"inherit\",\r\n                    }}\r\n                    onChange={(e) => {\r\n                        e.preventDefault();\r\n                        setter(e.target.value);\r\n                    }}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport function HarvestedItemFilterBlock(props) {\r\n    let [nameField, setNameField] = useState(\"\");\r\n\r\n    let filterRows = [];\r\n\r\n    filterRows.push(\r\n        BlockRow_Text(filterRows.length, \"Name\", nameField, setNameField)\r\n    );\r\n\r\n    return (\r\n        <form\r\n            className=\"border\"\r\n            onSubmit={(e) => {\r\n                let obj = {};\r\n                if (nameField !== \"\") {\r\n                    obj.Name = (obj) => {\r\n                        return obj.Name.toLowerCase().match(\r\n                            nameField.toLowerCase()\r\n                        );\r\n                    };\r\n                }\r\n\r\n                props.submitFilter(obj);\r\n                e.preventDefault();\r\n            }}\r\n        >\r\n            {filterRows}\r\n            <button type=\"submit\" style={{ display: \"none\" }}>\r\n                Apply Filter\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n","export function sortAscending(a, b) {\r\n  let x = a.toLowerCase();\r\n  let y = b.toLowerCase();\r\n\r\n  if (y < x) {\r\n    return 1;\r\n  }\r\n  if (x < y) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nconst splitFirstSpace = function (string) {\r\n  const firstIndex = string.indexOf(\" \");\r\n  return firstIndex === -1\r\n    ? [string, \"\"]\r\n    : [string.substr(0, firstIndex), string.substr(firstIndex + 1)];\r\n};\r\n\r\nfunction _splitByTagsBase(leadingCharacter) {\r\n  return function (string) {\r\n    let tagDepth = 0;\r\n    let char, char2;\r\n    const out = [];\r\n    let curStr = \"\";\r\n    let isLastOpen = false;\r\n\r\n    const len = string.length;\r\n    for (let i = 0; i < len; ++i) {\r\n      char = string[i];\r\n      char2 = string[i + 1];\r\n\r\n      switch (char) {\r\n        case \"{\":\r\n          isLastOpen = true;\r\n          if (char2 === leadingCharacter) {\r\n            if (tagDepth++ > 0) {\r\n              curStr += \"{\";\r\n            } else {\r\n              out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n              curStr = `{${leadingCharacter}`;\r\n              ++i;\r\n            }\r\n          } else curStr += \"{\";\r\n          break;\r\n\r\n        case \"}\":\r\n          isLastOpen = false;\r\n          curStr += \"}\";\r\n          if (tagDepth !== 0 && --tagDepth === 0) {\r\n            out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n            curStr = \"\";\r\n          }\r\n          break;\r\n\r\n        case leadingCharacter: {\r\n          if (!isLastOpen) curStr += \"<VE_LEAD>\";\r\n          else curStr += leadingCharacter;\r\n          break;\r\n        }\r\n\r\n        default:\r\n          isLastOpen = false;\r\n          curStr += char;\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (curStr) out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n\r\n    return out;\r\n  };\r\n}\r\n\r\nconst splitByTags = _splitByTagsBase(\"@\");\r\n\r\nconst attackTagToFull = function (tagStr) {\r\n  function renderTag(tags) {\r\n    return `${\r\n      tags.includes(\"m\")\r\n        ? \"Melee \"\r\n        : tags.includes(\"r\")\r\n        ? \"Ranged \"\r\n        : tags.includes(\"g\")\r\n        ? \"Magical \"\r\n        : tags.includes(\"a\")\r\n        ? \"Area \"\r\n        : \"\"\r\n    }${tags.includes(\"w\") ? \"Weapon \" : tags.includes(\"s\") ? \"Spell \" : \"\"}`;\r\n  }\r\n\r\n  const tagGroups = tagStr\r\n    .toLowerCase()\r\n    .split(\",\")\r\n    .map((it) => it.trim())\r\n    .filter((it) => it)\r\n    .map((it) => it.split(\"\"));\r\n  if (tagGroups.length > 1) {\r\n    const seen = new Set(tagGroups.last());\r\n    for (let i = tagGroups.length - 2; i >= 0; --i) {\r\n      tagGroups[i] = tagGroups[i].filter((it) => {\r\n        const out = !seen.has(it);\r\n        seen.add(it);\r\n        return out;\r\n      });\r\n    }\r\n  }\r\n  return `${tagGroups.map((it) => renderTag(it)).join(\" or \")}Attack:`;\r\n};\r\n\r\nconst _splitByPipeBase = function (leadingCharacter) {\r\n  return function (string) {\r\n    let tagDepth = 0;\r\n    let char, char2;\r\n    const out = [];\r\n    let curStr = \"\";\r\n\r\n    const len = string.length;\r\n    for (let i = 0; i < len; ++i) {\r\n      char = string[i];\r\n      char2 = string[i + 1];\r\n\r\n      switch (char) {\r\n        case \"{\":\r\n          if (char2 === leadingCharacter) tagDepth++;\r\n          curStr += \"{\";\r\n\r\n          break;\r\n\r\n        case \"}\":\r\n          if (tagDepth) tagDepth--;\r\n          curStr += \"}\";\r\n\r\n          break;\r\n\r\n        case \"|\": {\r\n          if (tagDepth) curStr += \"|\";\r\n          else {\r\n            out.push(curStr);\r\n            curStr = \"\";\r\n          }\r\n          break;\r\n        }\r\n\r\n        default: {\r\n          curStr += char;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (curStr) out.push(curStr);\r\n    return out;\r\n  };\r\n};\r\n\r\nconst splitTagByPipe = _splitByPipeBase(\"@\");\r\n\r\nconst _stripTagLayer = function (str) {\r\n  if (str.includes(\"{@\")) {\r\n    const tagSplit = splitByTags(str);\r\n    return tagSplit\r\n      .filter((it) => it)\r\n      .map((it) => {\r\n        if (it.startsWith(\"{@\")) {\r\n          let [tag, text] = splitFirstSpace(it.slice(1, -1));\r\n          text = text.replace(/<\\$([^$]+)\\$>/gi, \"\"); // remove any variable tags\r\n          switch (tag) {\r\n            case \"@b\":\r\n            case \"@bold\":\r\n            case \"@i\":\r\n            case \"@italic\":\r\n            case \"@s\":\r\n            case \"@strike\":\r\n            case \"@u\":\r\n            case \"@underline\":\r\n              return text;\r\n\r\n            case \"@h\":\r\n              return \"Hit: \";\r\n\r\n            case \"@dc\":\r\n              return `DC ${text}`;\r\n\r\n            case \"@atk\":\r\n              return attackTagToFull(text);\r\n\r\n            case \"@chance\":\r\n            case \"@d20\":\r\n            case \"@damage\":\r\n            case \"@dice\":\r\n            case \"@hit\":\r\n            case \"@recharge\": {\r\n              const [rollText, displayText] = splitTagByPipe(text);\r\n              switch (tag) {\r\n                case \"@damage\":\r\n                case \"@dice\": {\r\n                  return displayText || rollText.replace(/;/g, \"/\");\r\n                }\r\n                case \"@d20\":\r\n                case \"@hit\": {\r\n                  return (\r\n                    displayText ||\r\n                    (() => {\r\n                      const n = Number(rollText);\r\n                      if (isNaN(n)) {\r\n                        throw new Error(\r\n                          `Could not parse \"${rollText}\" as a number!`\r\n                        );\r\n                      }\r\n                      return `${n >= 0 ? \"+\" : \"\"}${n}`;\r\n                    })()\r\n                  );\r\n                }\r\n                case \"@recharge\": {\r\n                  const asNum = Number(rollText || 6);\r\n                  if (isNaN(asNum)) {\r\n                    throw new Error(\r\n                      `Could not parse \"${rollText}\" as a number!`\r\n                    );\r\n                  }\r\n                  return `(Recharge ${asNum}${asNum < 6 ? `\\u20136` : \"\"})`;\r\n                }\r\n                case \"@chance\": {\r\n                  return displayText || `${rollText} percent`;\r\n                }\r\n                default:\r\n                  throw new Error(`Unhandled tag: ${tag}`);\r\n              }\r\n            }\r\n\r\n            case \"@comic\":\r\n            case \"@comicH1\":\r\n            case \"@comicH2\":\r\n            case \"@comicH3\":\r\n            case \"@comicH4\":\r\n            case \"@comicNote\":\r\n            case \"@note\":\r\n            case \"@sense\":\r\n            case \"@skill\": {\r\n              return text;\r\n            }\r\n\r\n            case \"@5etools\":\r\n            case \"@adventure\":\r\n            case \"@book\":\r\n            case \"@filter\":\r\n            case \"@footnote\":\r\n            case \"@link\":\r\n            case \"@scaledice\":\r\n            case \"@scaledamage\":\r\n            case \"@loader\":\r\n            case \"@color\":\r\n            case \"@highlight\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts[0];\r\n            }\r\n\r\n            case \"@area\": {\r\n              const [\r\n                compactText,\r\n                /*areaId,*/ flags,\r\n                ...others\r\n              ] = splitTagByPipe(text);\r\n\r\n              return flags && flags.includes(\"x\")\r\n                ? compactText\r\n                : `${\r\n                    flags && flags.includes(\"u\") ? \"A\" : \"a\"\r\n                  }rea ${compactText}`;\r\n            }\r\n\r\n            case \"@action\":\r\n            case \"@background\":\r\n            case \"@boon\":\r\n            case \"@class\":\r\n            case \"@condition\":\r\n            case \"@creature\":\r\n            case \"@cult\":\r\n            case \"@disease\":\r\n            case \"@feat\":\r\n            case \"@hazard\":\r\n            case \"@item\":\r\n            case \"@language\":\r\n            case \"@object\":\r\n            case \"@optfeature\":\r\n            case \"@psionic\":\r\n            case \"@race\":\r\n            case \"@reward\":\r\n            case \"@vehicle\":\r\n            case \"@spell\":\r\n            case \"@status\":\r\n            case \"@table\":\r\n            case \"@trap\":\r\n            case \"@variantrule\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 3 ? parts[2] : parts[0];\r\n            }\r\n\r\n            case \"@deity\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 4 ? parts[3] : parts[0];\r\n            }\r\n\r\n            case \"@classFeature\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 6 ? parts[5] : parts[0];\r\n            }\r\n\r\n            case \"@subclassFeature\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 8 ? parts[7] : parts[0];\r\n            }\r\n\r\n            case \"@homebrew\": {\r\n              const [newText, oldText] = splitTagByPipe(text);\r\n              if (newText && oldText) {\r\n                return `${newText} [this is a homebrew addition, replacing the following: \"${oldText}\"]`;\r\n              } else if (newText) {\r\n                return `${newText} [this is a homebrew addition]`;\r\n              } else if (oldText) {\r\n                return `[the following text has been removed due to homebrew: ${oldText}]`;\r\n              } else\r\n                throw new Error(`Homebrew tag had neither old nor new text!`);\r\n            }\r\n\r\n            default:\r\n              throw new Error(`Unhandled tag: \"${tag}\"`);\r\n          }\r\n        } else return it;\r\n      })\r\n      .join(\"\");\r\n  }\r\n  return str;\r\n};\r\n\r\nexport function stripTags(str) {\r\n  try {\r\n    if (!str) return str;\r\n    let nxtStr = _stripTagLayer(str);\r\n    while (nxtStr.length !== str.length) {\r\n      str = nxtStr;\r\n      nxtStr = _stripTagLayer(str);\r\n    }\r\n    return nxtStr;\r\n  } catch (err) {\r\n    console.error(`On [${str}]: ${err}`);\r\n    return str;\r\n  }\r\n}\r\n","export class Monster {\r\n  static from5eSource(fiveEState) {\r\n    let feType = null;\r\n\r\n    switch (typeof fiveEState.type) {\r\n      case \"string\":\r\n        feType = new CreatureType({ type: fiveEState.type });\r\n        break;\r\n      case \"object\":\r\n        feType = new CreatureType({\r\n          type: fiveEState.type.type,\r\n          tags: fiveEState.type.tags,\r\n        });\r\n        break;\r\n      default:\r\n        console.log(\r\n          `Unhandled creatureType type: ${typeof fiveEState.type} => ${\r\n            fiveEState.type\r\n          } of ${fiveEState.name}`\r\n        );\r\n        break;\r\n    }\r\n\r\n    let feCR = null;\r\n\r\n    switch (typeof fiveEState.cr) {\r\n      case \"string\":\r\n        feCR = new ChallengeRating({ cr: fiveEState.cr });\r\n        break;\r\n      case \"object\":\r\n        feCR = new ChallengeRating({\r\n          cr: fiveEState.cr.cr,\r\n          lair: fiveEState.cr.lair,\r\n          coven: fiveEState.cr.coven,\r\n        });\r\n        break;\r\n      case \"undefined\":\r\n        feCR = new ChallengeRating({});\r\n        break;\r\n      default:\r\n        console.log(\r\n          `Unhandled CR type: ${typeof fiveEState.cr} => ${fiveEState.cr} of ${\r\n            fiveEState.name\r\n          }`\r\n        );\r\n        break;\r\n    }\r\n\r\n    let feACLines = [];\r\n    for (let i = 0; i < fiveEState.ac.length; ++i) {\r\n      let line = fiveEState.ac[i];\r\n      let acObj = {};\r\n\r\n      switch (typeof line) {\r\n        case \"number\":\r\n          acObj.ac = line;\r\n          break;\r\n        case \"string\":\r\n          acObj.ac = Number.parseInt(line);\r\n          break;\r\n        case \"object\":\r\n          acObj.ac = Number.parseInt(line.ac);\r\n          acObj.from = line.from;\r\n          acObj.condition = line.condition;\r\n          break;\r\n        default:\r\n          console.log(\r\n            `Unhandled AC type: ${typeof fiveEState.ac} => ${\r\n              fiveEState.ac\r\n            } of ${fiveEState.name}`\r\n          );\r\n          break;\r\n      }\r\n\r\n      feACLines.push(new ArmorClass(acObj));\r\n    }\r\n\r\n    return new Monster({\r\n      name: fiveEState.name, //   name,\r\n      referenceCardSize: 0, // referenceCardSize,\r\n      source: fiveEState.source, // source,\r\n      otherSources: fiveEState.otherSources, // otherSources,\r\n      size: fiveEState.size, // creatureSize,\r\n      creatureType: feType, // creatureType,\r\n      stats: new StatsBlock(\r\n        fiveEState\r\n        // fiveEState.str,\r\n        // fiveEState.dex,\r\n        // fiveEState.con,\r\n        // fiveEState.int,\r\n        // fiveEState.wis,\r\n        // fiveEState.cha\r\n      ), // stats,\r\n      armorClass: feACLines, // armorClass,\r\n      challengeRating: feCR, // challengeRating,\r\n      health: new HealthBlock(fiveEState.hp), // health,\r\n      passivePerc: fiveEState.passive, // passivePerc,\r\n      languages: fiveEState.languages, // languages,\r\n      speed: new SpeedBlock({\r\n        walk: fiveEState.speed.walk,\r\n        fly: fiveEState.speed.fly,\r\n        swim: fiveEState.speed.swim,\r\n        climb: fiveEState.speed.climb,\r\n        burrow: fiveEState.speed.burrow,\r\n        canHover: fiveEState.speed.canHover,\r\n      }), // speed,\r\n      saves: fiveEState.save, // saves,\r\n      skills: fiveEState.skill, // skills,\r\n      senses: fiveEState.senses, // senses,\r\n      alignment: fiveEState.alignment, // alignment\r\n      resistances: fiveEState.resist, // resistances\r\n      immunities: fiveEState.immune, // immunity\r\n      conditionImmunities: fiveEState.conditionImmune, // conditionImmunities\r\n      traits: fiveEState.trait, //traits\r\n      spellcasting: fiveEState.spellcasting, //spellcasting\r\n      actions: fiveEState.action, //actions\r\n      reactions: fiveEState.reaction, //reactions\r\n      environments: fiveEState.environment, //environments\r\n      legendaryHeader: fiveEState.legendaryHeader, //legendaryHeader\r\n      legendaryActions: fiveEState.legendary, //legendaryActions\r\n    });\r\n  }\r\n\r\n  static fromCombinedSources(oldState, fiveEState) {\r\n    let feType = null;\r\n\r\n    switch (typeof fiveEState.type) {\r\n      case \"string\":\r\n        feType = new CreatureType({ type: fiveEState.type });\r\n        break;\r\n      case \"object\":\r\n        feType = new CreatureType({\r\n          type: fiveEState.type.type,\r\n          tags: fiveEState.type.tags,\r\n        });\r\n        break;\r\n      default:\r\n        console.log(`Unhandled creatureType type: ${typeof fiveEState.type}`);\r\n        break;\r\n    }\r\n\r\n    let feCR = null;\r\n\r\n    switch (typeof fiveEState.cr) {\r\n      case \"string\":\r\n        feCR = new ChallengeRating({ cr: fiveEState.cr });\r\n        break;\r\n      case \"object\":\r\n        feCR = new ChallengeRating({\r\n          cr: fiveEState.cr.cr,\r\n          lair: fiveEState.cr.lair,\r\n          coven: fiveEState.cr.coven,\r\n        });\r\n        break;\r\n      default:\r\n        console.log(`Unhandled CR type: ${typeof fiveEState.type}`);\r\n        break;\r\n    }\r\n\r\n    let feACLines = [];\r\n    for (let i = 0; i < fiveEState.ac.length; ++i) {\r\n      let line = fiveEState.ac[i];\r\n      let acObj = {};\r\n\r\n      switch (typeof fiveEState.cr) {\r\n        case \"number\":\r\n          acObj.ac = line;\r\n          break;\r\n        case \"string\":\r\n          acObj.ac = Number(line);\r\n          break;\r\n        case \"object\":\r\n          acObj.ac = line.ac;\r\n          acObj.from = line.from;\r\n          break;\r\n        default:\r\n          console.log(`Unhandled AC type: ${typeof fiveEState.type}`);\r\n          break;\r\n      }\r\n\r\n      feACLines.push(new ArmorClass(acObj));\r\n    }\r\n\r\n    return new Monster(\r\n      fiveEState.name, //   name,\r\n      oldState ? oldState.referenceCardSize : 0, // referenceCardSize,\r\n      fiveEState.source, // source,\r\n      fiveEState.otherSources, // otherSources,\r\n      fiveEState.size, // creatureSize,\r\n      feType, // creatureType,\r\n      new StatsBlock(\r\n        fiveEState.str,\r\n        fiveEState.dex,\r\n        fiveEState.con,\r\n        fiveEState.int,\r\n        fiveEState.wis,\r\n        fiveEState.cha\r\n      ), // stats,\r\n      feACLines, // armorClass,\r\n      feCR, // challengeRating,\r\n      new HealthBlock(fiveEState.hp), // health,\r\n      fiveEState.passive, // passivePerc,\r\n      fiveEState.languages, // languages,\r\n      new SpeedBlock(fiveEState.speed), // speed,\r\n      fiveEState.save, // saves,\r\n      fiveEState.skill, // skills,\r\n      fiveEState.senses, // senses,\r\n      fiveEState.alignment, // alignment\r\n      fiveEState.resist, // resistance\r\n      fiveEState.immune, // immunity\r\n      fiveEState.conditionImmune, // condition immunity\r\n      [], //traits, //traits\r\n      [], //spellcasting, //spellcasting\r\n      [], //actions, //actions\r\n      [], //reactions, //reactions\r\n      [], //environments, //environments\r\n      [], //legendaryHeader, //legendaryHeader\r\n      [], //legendaryActions, //legendaryActions\r\n      oldState ? new HarvestingTable(oldState.HarvestingTable) : null, // harvestingTable\r\n      oldState ? oldState.TrinketTableType : null // trinketTableType\r\n    );\r\n  }\r\n\r\n  constructor({\r\n    name,\r\n    referenceCardSize,\r\n    source,\r\n    otherSources,\r\n    creatureSize,\r\n    creatureType,\r\n    stats,\r\n    armorClass,\r\n    challengeRating,\r\n    health,\r\n    passivePerc,\r\n    languages,\r\n    speed,\r\n    saves,\r\n    skills,\r\n    senses,\r\n    alignment,\r\n    resistances,\r\n    immunities,\r\n    conditionImmunities,\r\n    traits,\r\n    spellcasting,\r\n    actions,\r\n    reactions,\r\n    environments,\r\n    legendaryHeader,\r\n    legendaryActions,\r\n    harvestingTable,\r\n    trinketTableType,\r\n  }) {\r\n    this.name = name;\r\n    this.cardSize = referenceCardSize;\r\n    this.source = source;\r\n    this.otherSources = otherSources || [];\r\n    this.size = creatureSize;\r\n    this.type = creatureType;\r\n    this.speed = speed;\r\n    this.stats = stats;\r\n    this.saves = saves || null;\r\n    this.skills = skills;\r\n    this.senses = senses;\r\n    this.armorClass = armorClass;\r\n    this.health = health;\r\n    this.passivePerc = passivePerc;\r\n    this.languages = languages;\r\n    this.challengeRating = challengeRating;\r\n    this.resistances = resistances || null;\r\n    this.immunities = immunities || null;\r\n    this.conditionImmunities = conditionImmunities || null;\r\n    this.alignment = alignment;\r\n    this.traits = traits || [];\r\n    this.spellcasting = spellcasting || [];\r\n    this.actions = actions || [];\r\n    this.reactions = reactions || [];\r\n    this.environments = environments || [];\r\n    this.legendaryHeader = legendaryHeader;\r\n    this.legendaryActions = legendaryActions || [];\r\n    this.harvestingTable = harvestingTable || null;\r\n    this.trinketTableType = trinketTableType || null;\r\n  }\r\n\r\n  get id() {\r\n    return (\r\n      this.name.replace(/[\\s'\\-()]/g, \"\") +\r\n      \"_\" +\r\n      this.source\r\n    ).toLowerCase();\r\n  }\r\n}\r\n\r\n// Monster Bits\r\nclass ArmorClass {\r\n  constructor({ ac, from, condition }) {\r\n    this.ac = ac;\r\n    this.from = from;\r\n    this.condition = condition;\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    //return JSON.stringify(this);\r\n    var strOut = this.ac;\r\n\r\n    if (this.from) {\r\n      strOut = `${this.ac} (${this.from.join(\", \")})`;\r\n    } else if (this.condition) {\r\n      strOut = `${this.ac} (${this.condition.join(\", \")})`;\r\n    }\r\n\r\n    return strOut;\r\n  }\r\n}\r\n\r\nclass CreatureType {\r\n  constructor({ type, tags }) {\r\n    this.type = type;\r\n    this.tags = tags || [];\r\n  }\r\n}\r\n\r\nclass ChallengeRating {\r\n  constructor({ cr, lair, coven }) {\r\n    this.cr = cr || null;\r\n    var matches = /\\d+\\/(\\d+)/g.exec(this.cr);\r\n    if (matches !== null && matches.length > 0) {\r\n      this.cr = 1 / Number.parseInt(matches[1]);\r\n    } else this.cr = Number.parseInt(this.cr);\r\n    this.lair = lair || null;\r\n    this.coven = coven || null;\r\n  }\r\n}\r\n\r\nclass HealthBlock {\r\n  constructor({ average, formula }) {\r\n    this.average = average;\r\n    this.formula = formula;\r\n  }\r\n}\r\n\r\nconst SPEED_KEYS = [\"fly\", \"climb\", \"swim\", \"burrow\"];\r\nclass SpeedBlock {\r\n  constructor({ walk, fly, climb, swim, burrow, canHover }) {\r\n    this.walk = walk !== undefined ? new SpeedEntry(walk) : null;\r\n    this.fly = fly !== undefined ? new SpeedEntry(fly) : null;\r\n    this.climb = climb !== undefined ? new SpeedEntry(climb) : null;\r\n    this.swim = swim !== undefined ? new SpeedEntry(swim) : null;\r\n    this.burrow = burrow !== undefined ? new SpeedEntry(burrow) : null;\r\n    this.canHover = canHover !== undefined ? canHover : false;\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    let strOut = `${this.walk.ft} ft.`;\r\n\r\n    SPEED_KEYS.forEach((val) => {\r\n      if (this[val]) {\r\n        strOut += `, ${val} ${this[val].simpleDisplay}`;\r\n      }\r\n    });\r\n\r\n    return strOut;\r\n  }\r\n}\r\n\r\nclass SpeedEntry {\r\n  constructor(inObj) {\r\n    if (typeof inObj === \"number\" || inObj === 0) {\r\n      this.ft = inObj;\r\n      this.condition = null;\r\n    } else {\r\n      this.ft = inObj.number;\r\n      this.condition = inObj.condition;\r\n    }\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    if (!this.condition) {\r\n      return `${this.ft} ft.`;\r\n    } else {\r\n      return `${this.ft} ft. ${this.condition}`;\r\n    }\r\n  }\r\n}\r\n\r\nclass StatsBlock {\r\n  constructor({ str, dex, con, int, wis, cha }) {\r\n    this.str = str;\r\n    this.dex = dex;\r\n    this.con = con;\r\n    this.int = int;\r\n    this.wis = wis;\r\n    this.cha = cha;\r\n  }\r\n}\r\n\r\n// HarvestingTables\r\nclass HarvestingTable {\r\n  constructor(inObj) {\r\n    this.rows = [];\r\n    for (let i = 0; i < inObj.rows; ++i) {\r\n      this.rows.push(new HarvestingTableRow(inObj.rows[i]));\r\n    }\r\n  }\r\n}\r\n\r\nclass HarvestingTableRow {\r\n  constructor(inObj) {\r\n    this.dc = inObj.DifficultyClass;\r\n    this.itemNameRef = inObj.ItemNameRef;\r\n    this.qty = inObj.Quantity;\r\n    this.notes = inObj.Notes;\r\n  }\r\n}\r\n","export class HarvestingTable {\r\n  static fromOld(oldMonster) {\r\n    if (!oldMonster.HarvestingTable.Rows) return null;\r\n\r\n    return new HarvestingTable({\r\n      name: oldMonster.Name,\r\n      rows: oldMonster.HarvestingTable.Rows.map(\r\n        (row) =>\r\n          new HarvestingTableRow({\r\n            difficultyClass: row.DifficultyClass,\r\n            itemNameReference: row.ItemNameRef,\r\n            quantity: row.Quantity,\r\n            notes: row.Notes,\r\n          })\r\n      ),\r\n    });\r\n  }\r\n\r\n  constructor({ name, rows }) {\r\n    this.name = name;\r\n    this.rows = rows.map((r) => new HarvestingTableRow(r));\r\n  }\r\n}\r\n\r\nclass HarvestingTableRow {\r\n  constructor({ difficultyClass, itemNameReference, quantity, notes }) {\r\n    this.difficultyClass = difficultyClass;\r\n    this.itemNameReference = itemNameReference;\r\n    this.quantity = quantity;\r\n    this.notes = notes;\r\n  }\r\n}\r\n","export class TrinketTable {\r\n  static fromOld({ TrinketTableType, Rows }) {\r\n    return new TrinketTable({\r\n      trinketTableType: TrinketTableType,\r\n      rows: Rows.map(\r\n        (row) =>\r\n          new TrinketTableRow({\r\n            d8Roll: row.D8Roll,\r\n            descriptionLine: row.DescriptionLine,\r\n            value: row.ValueGP,\r\n            weight: row.WeightLB,\r\n          })\r\n      ),\r\n    });\r\n  }\r\n\r\n  constructor({ trinketTableType, rows }) {\r\n    this.trinketTableType = trinketTableType;\r\n    this.rows = rows;\r\n  }\r\n}\r\n\r\nclass TrinketTableRow {\r\n  constructor({ d8Roll, descriptionLine, value, weight }) {\r\n    this.d8Roll = d8Roll;\r\n    this.descriptionLine = descriptionLine;\r\n    this.value = value;\r\n    this.weight = weight;\r\n  }\r\n}\r\n","export class CraftableItem {\r\n  static fromOld(oldItem) {\r\n    return new CraftableItem({\r\n      name: oldItem.Name,\r\n      crafter: oldItem.Crafter,\r\n      rarity: oldItem.Rarity,\r\n      requiresAttunement: oldItem.RequiresAttunement,\r\n      description: oldItem.Description,\r\n      materials: oldItem.Materials.map((matRow) => {\r\n        return { componentId: matRow.ComponentId, quantity: matRow.Quantity };\r\n      }),\r\n      type: oldItem.Type,\r\n      materialGrouping: oldItem.MaterialGrouping,\r\n      attunementNote: oldItem.AttunementNote,\r\n    });\r\n  }\r\n\r\n  constructor({\r\n    name,\r\n    crafter,\r\n    rarity,\r\n    requiresAttunement,\r\n    description,\r\n    materials,\r\n    type,\r\n    materialGrouping,\r\n    attunementNote,\r\n  }) {\r\n    this.name = name;\r\n    this.crafter = crafter;\r\n    this.rarity = rarity;\r\n    this.requiresAttunement = requiresAttunement;\r\n    this.description = description;\r\n    this.materials = materials;\r\n    this.type = type;\r\n    this.materialGrouping = materialGrouping;\r\n    this.attunementNote = attunementNote;\r\n  }\r\n\r\n  get id() {\r\n    return this.name.toLowerCase().replace(/\\s+/g, \"_\");\r\n  }\r\n}\r\n","export class HarvestedItem {\r\n  static fromOld(oldItem) {\r\n    return new HarvestedItem({\r\n      name: oldItem.Name,\r\n      value: oldItem.ValueGP,\r\n      weight: oldItem.WeightLB,\r\n      craftingUsage: oldItem.CraftingUsage,\r\n      description: oldItem.Description,\r\n      useText: oldItem.UseText,\r\n      requiredToolNames: oldItem.RequiredToolNames,\r\n    });\r\n  }\r\n\r\n  constructor({\r\n    name,\r\n    value,\r\n    weight,\r\n    craftingUsage,\r\n    description,\r\n    useText,\r\n    requiredToolNames,\r\n  }) {\r\n    this.name = name;\r\n    this.value = value;\r\n    this.weight = weight;\r\n    this.craftingUsage = craftingUsage;\r\n    this.description = description;\r\n    this.useText = useText;\r\n    this.requiredToolNames = requiredToolNames;\r\n  }\r\n\r\n  get id() {\r\n    return this.name.replace(/\\s+/gi, \"_\").replace(/\\//gi, \"-\").toLowerCase();\r\n  }\r\n}\r\n","import Data from \"../data/system-state.json\";\r\nimport Index from \"../data/bestiary/index.json\";\r\nimport { Monster } from \"../data/Monster\";\r\nimport { HarvestingTable } from \"../data/HarvestingTable\";\r\nimport { TrinketTable } from \"../data/TrinketTable\";\r\nimport { CraftableItem } from \"../data/CraftableItem\";\r\nimport { HarvestedItem } from \"../data/HarvestedItem\";\r\n\r\nconst $ = window.$;\r\n\r\nasync function ajaxJson(fileName) {\r\n  return new Promise((resolve, reject) => {\r\n    $.getJSON(`data/bestiary/${fileName}`, (data) => {\r\n      resolve(data);\r\n    });\r\n  });\r\n}\r\n\r\nasync function Load5eMonsterFile({ key, fileName }) {\r\n  let localKey = key;\r\n\r\n  // check if already processed or already being processed\r\n  if (Storage.processedKeys.includes(localKey.toLowerCase())) {\r\n    console.log(`[${localKey}] already done.`);\r\n    return;\r\n  } else if (Storage.processingKeys.includes(localKey.toLowerCase())) {\r\n    console.log(`[${localKey}] being processed.`);\r\n    return;\r\n  }\r\n\r\n  Storage.processingKeys.push(localKey.toLowerCase());\r\n\r\n  console.log(`Starting on key[${localKey.toLowerCase()}]`);\r\n\r\n  var data = await ajaxJson(fileName);\r\n  if (data._meta) {\r\n    var meta = data._meta;\r\n    // await for any dependencies to be loaded in\r\n    if (meta.dependencies && meta.dependencies.monster) {\r\n      for (let jdx = 0; jdx < meta.dependencies.monster.length; ++jdx) {\r\n        var depKey = meta.dependencies.monster[jdx];\r\n        console.log(\r\n          `Starting on key[${depKey.toLowerCase()}] required as a dependency of [${localKey.toLowerCase()}]`\r\n        );\r\n        await Load5eMonsterFile({\r\n          key: depKey,\r\n          fileName: `bestiary-${depKey.toLowerCase()}.json`,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let idx = 0; idx < data.monster.length; ++idx) {\r\n    let mon = data.monster[idx];\r\n\r\n    if (mon._copy) {\r\n      // console.log(\r\n      //   `For now, skipping _copy prop monsters ... on ${mon.name}`\r\n      // );\r\n      continue;\r\n    }\r\n\r\n    try {\r\n      mon = Monster.from5eSource(mon);\r\n\r\n      if (!Storage.monsterDict[mon.id]) {\r\n        Storage.monsterDict[mon.id] = mon;\r\n      }\r\n    } catch (err) {\r\n      console.error(\r\n        `Loading on monster: ${mon.name} in file: ${fileName} failed.`\r\n      );\r\n    }\r\n  }\r\n\r\n  console.log(`${localKey} processed.`);\r\n  Storage.processedKeys.push(localKey.toLowerCase());\r\n}\r\n\r\n// let initialised = false;\r\nconst Storage = {\r\n  _init: false,\r\n\r\n  // dictionaries\r\n  monsterDict: {},\r\n  subStateMonsterDict: {},\r\n  harvestingTableDict: {},\r\n  harvestableItemDict: {},\r\n  trinketTableDict: {},\r\n  craftableItemDict: {},\r\n\r\n  processingKeys: [],\r\n  processedKeys: [],\r\n\r\n  Init: async () => {\r\n    if (Storage._init) {\r\n      console.log(\"Storage already initialised\");\r\n      return;\r\n    }\r\n\r\n    for (let key in Index) {\r\n      console.log(`${key} :: ${Index[key]}`);\r\n\r\n      await Load5eMonsterFile({ key: key, fileName: Index[key] });\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.monsters.length; ++idx) {\r\n      let monster = new SubStateMonster(Data.monsters[idx]);\r\n      Storage.subStateMonsterDict[monster.id] = monster;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.harvestingTables.length; ++idx) {\r\n      let harvestingTable = new HarvestingTable(Data.harvestingTables[idx]);\r\n      Storage.harvestingTableDict[harvestingTable.name] = harvestingTable;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.harvestedItems.length; ++idx) {\r\n      let harvestedItem = new HarvestedItem(Data.harvestedItems[idx]);\r\n      Storage.harvestableItemDict[harvestedItem.id] = harvestedItem;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.trinketTables.length; ++idx) {\r\n      let trinketTable = new TrinketTable(Data.trinketTables[idx]);\r\n      Storage.trinketTableDict[trinketTable.trinketTableType] = trinketTable;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.craftableItems.length; ++idx) {\r\n      let craftableItem = new CraftableItem(Data.craftableItems[idx]);\r\n      Storage.craftableItemDict[craftableItem.id] = craftableItem;\r\n    }\r\n\r\n    Storage._init = true;\r\n  },\r\n};\r\n\r\nwindow.storage = Storage;\r\nexport default Storage;\r\n\r\nclass SubStateMonster {\r\n  constructor({\r\n    name,\r\n    cardSize,\r\n    source,\r\n    trinketTableType,\r\n    harvestingTableGroup,\r\n  }) {\r\n    this.name = name;\r\n    this.cardSize = cardSize;\r\n    this.source = source;\r\n    this.trinketTableType = trinketTableType;\r\n    this.harvestingTableGroup = harvestingTableGroup;\r\n  }\r\n\r\n  get id() {\r\n    return (\r\n      this.name.replace(/[\\s'\\-()]/g, \"\") +\r\n      \"_\" +\r\n      this.source\r\n    ).toLowerCase();\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Col, Row, Form } from \"react-bootstrap\";\r\n\r\nexport function getItemReferenceFromName(name) {\r\n  return name.replace(/\\s+/gi, \"_\").replace(/\\//gi, \"-\").toLowerCase();\r\n}\r\n\r\nexport function getItemReference(harvestedItem) {\r\n  return harvestedItem.id;\r\n}\r\n\r\nfunction simplePassthrough(val) {\r\n  return val;\r\n}\r\n\r\nconst ARRAY_CONC = \";;\";\r\nfunction joinArray(val) {\r\n  return val.join(ARRAY_CONC);\r\n}\r\nfunction splitArray(val) {\r\n  return val.split(ARRAY_CONC);\r\n}\r\n\r\nexport function HarvestedItemDisplay(props) {\r\n  let hItem = props.harvestedItem;\r\n\r\n  return (\r\n    <>\r\n      {/* {JSON.stringify(hItem)} */}\r\n      {/* <Row>\r\n                <Col className=\"col-3 font-weight-bold\">ReferenceId:</Col>\r\n                <Col>{hItem.ReferenceId}</Col>\r\n            </Row> */}\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Name:</Col>\r\n        <Col>{hItem.name}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Value:</Col>\r\n        <Col>{hItem.value}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Weight:</Col>\r\n        <Col>{hItem.weight}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Required Tools:</Col>\r\n        <Col>\r\n          {hItem.requiredToolNames.length === 0\r\n            ? \"-\"\r\n            : hItem.requiredToolNames.join(\" and \")}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">CraftingUsage:</Col>\r\n        <Col>\r\n          {hItem.craftingUsage.length === 0\r\n            ? \"-\"\r\n            : hItem.craftingUsage.join(\" and \")}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Description:</Col>\r\n        <Col>\r\n          {hItem.description.map((para, idx) => {\r\n            return <p key={idx}>{para}</p>;\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      {hItem.useText.length !== 0 && (\r\n        <Row>\r\n          <Col className=\"col-3 font-weight-bold\">UseText:</Col>\r\n          <Col>\r\n            {hItem.useText.map((para, idx) => {\r\n              return <p key={idx}>{para}</p>;\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport class EditingHarvestedItemDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.stringKeys = [\r\n      {\r\n        key: \"id\",\r\n        type: \"text\",\r\n        retrieve: simplePassthrough,\r\n        store: simplePassthrough,\r\n      },\r\n      {\r\n        key: \"name\",\r\n        type: \"text\",\r\n        retrieve: simplePassthrough,\r\n        store: simplePassthrough,\r\n      },\r\n      {\r\n        key: \"value\",\r\n        type: \"text\",\r\n        retrieve: simplePassthrough,\r\n        store: simplePassthrough,\r\n      },\r\n      {\r\n        key: \"weight\",\r\n        type: \"text\",\r\n        retrieve: simplePassthrough,\r\n        store: simplePassthrough,\r\n      },\r\n      {\r\n        key: \"craftingUsage\",\r\n        type: \"text\",\r\n        retrieve: joinArray,\r\n        store: splitArray,\r\n      },\r\n      {\r\n        key: \"requiredToolNames\",\r\n        type: \"text\",\r\n        retrieve: joinArray,\r\n        store: splitArray,\r\n      },\r\n      {\r\n        key: \"description\",\r\n        type: \"text\",\r\n        retrieve: joinArray,\r\n        store: splitArray,\r\n      },\r\n      {\r\n        key: \"useText\",\r\n        type: \"text\",\r\n        retrieve: joinArray,\r\n        store: splitArray,\r\n      },\r\n    ];\r\n\r\n    this.state = this.generateStateObject(this.props.harvestedItem);\r\n\r\n    this.applyStateToItem = this.applyStateToItem.bind(this);\r\n  }\r\n\r\n  generateStateObject(harvestedItem) {\r\n    let obj = {};\r\n    for (let i = 0; i < this.stringKeys.length; ++i) {\r\n      let targetValue = harvestedItem[this.stringKeys[i].key];\r\n\r\n      obj[this.stringKeys[i].key] = this.stringKeys[i].retrieve(targetValue);\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  handleInput(event, key) {\r\n    event.preventDefault();\r\n\r\n    console.log(`${key}: ${event.target.value}`);\r\n\r\n    let partialObject = {};\r\n    partialObject[key] = event.target.value;\r\n    this.setState(partialObject);\r\n  }\r\n\r\n  applyStateToItem(event) {\r\n    event.preventDefault();\r\n    console.log(\"applyStateToItem\");\r\n\r\n    for (let i = 0; i < this.stringKeys.length; ++i) {\r\n      let targetValue = this.state[this.stringKeys[i].key];\r\n\r\n      this.props.harvestedItem[this.stringKeys[i].key] = this.stringKeys[\r\n        i\r\n      ].store(targetValue);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.harvestedItem.ReferenceId !==\r\n      prevProps.harvestedItem.ReferenceId\r\n    ) {\r\n      this.setState(this.generateStateObject(this.props.harvestedItem));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let partialObject = {};\r\n    for (let i = 0; i < this.stringKeys.length; ++i) {\r\n      partialObject[this.stringKeys[i]] = \"\";\r\n    }\r\n    this.setState(partialObject);\r\n  }\r\n\r\n  render() {\r\n    let output = [];\r\n\r\n    for (let i = 0; i < this.stringKeys.length; ++i) {\r\n      let key = this.stringKeys[i];\r\n      output.push(\r\n        <Row key={output.length}>\r\n          <Col className=\"col-3 font-weight-bold\">{key.key}: </Col>\r\n          <Col className=\"border\">\r\n            <input\r\n              type={key.type}\r\n              value={this.state[key.key]}\r\n              style={{ width: \"inherit\" }}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.handleInput(e, key.key);\r\n              }}\r\n              disabled={key.key === \"ReferenceId\"}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Form onSubmit={this.applyStateToItem}>\r\n          {output}\r\n          <input type=\"submit\" value=\"Apply Changes\" />\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { DisplayList, DisplayColumn } from \"./DisplayList\";\r\nimport { HarvestedItemFilterBlock } from \"../components/HarvestedItemFilterBlock\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport {\r\n  EditingHarvestedItemDisplay,\r\n  HarvestedItemDisplay,\r\n  getItemReference,\r\n} from \"../utility/harvestedItemUtil\";\r\n\r\nexport function HarvestedItems(props) {\r\n  let [filterObj, setFilterObj] = useState({});\r\n\r\n  const pathWithId = \"/harvesteditems/:id\";\r\n  let harvestedItem = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (Storage.harvestableItemDict[selectedId] !== undefined) {\r\n      harvestedItem = Storage.harvestableItemDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    new DisplayColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let harvestedOutput = [\"Select an item from the list\"];\r\n\r\n  if (harvestedItem !== null) {\r\n    if (false && process.env.NODE_ENV === \"development\") {\r\n      harvestedOutput = [\r\n        <EditingHarvestedItemDisplay harvestedItem={harvestedItem} />,\r\n      ];\r\n    } else {\r\n      harvestedOutput = [\r\n        <HarvestedItemDisplay harvestedItem={harvestedItem} />,\r\n      ];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          <HarvestedItemFilterBlock submitFilter={setFilterObj} />\r\n          <DisplayList\r\n            headers={headers}\r\n            items={Object.values(Storage.harvestableItemDict)}\r\n            filterObject={filterObj}\r\n            pathRoot={props.match.path}\r\n            idFunction={getItemReference}\r\n            selectedId={selectedId}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">{harvestedOutput}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { fileSaveAs } from \"../utility/saveFile\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport { sortAscending } from \"../utility/stringUtil\";\r\n\r\nexport function Home(props) {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n      <div>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n\r\n            let monsters = Object.values(Storage.subStateMonsterDict);\r\n            monsters.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            let harvestedItems = Object.values(Storage.harvestableItemDict);\r\n            harvestedItems.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            let harvestingTables = Object.values(Storage.harvestingTableDict);\r\n            harvestingTables.sort((a, b) => sortAscending(a.name, b.name));\r\n\r\n            let trinketTables = Object.values(Storage.trinketTableDict);\r\n            trinketTables.sort((a, b) =>\r\n              sortAscending(a.trinketTableType, b.trinketTableType)\r\n            );\r\n\r\n            let craftableItems = Object.values(Storage.craftableItemDict);\r\n            craftableItems.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            fileSaveAs(\r\n              \"system-state.json\",\r\n              JSON.stringify({\r\n                monsters: monsters,\r\n                harvestingTables: harvestingTables,\r\n                harvestedItems: harvestedItems,\r\n                trinketTables: trinketTables,\r\n                craftableItems: craftableItems,\r\n              })\r\n            );\r\n          }}\r\n        >\r\n          Save State\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <input type=\"text\" style={{ width: \"100%\", height: \"4em\" }} />\r\n      </div>\r\n      {/* <div>{JSON.stringify(props)}</div> */}\r\n      {/* <div>{JSON.stringify(process.env)}</div> */}\r\n    </div>\r\n  );\r\n}\r\n","export function fileSaveAs(filename, fileContent) {\r\n    var link = document.createElement(\"a\");\r\n    link.download = filename;\r\n    link.href =\r\n        \"data:text/plain;charset=utf-8,\" + encodeURIComponent(fileContent);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n","import React from \"react\";\r\n\r\nexport function CRList(props) {\r\n  let cr = props.cr;\r\n\r\n  if (!cr) {\r\n    return <>-</>;\r\n  } else {\r\n    let crOut = cr.cr;\r\n\r\n    if (typeof crOut === \"number\" && crOut < 1 && crOut !== 0) {\r\n      crOut = `1/${1 / crOut}`;\r\n    }\r\n\r\n    if (cr.coven !== null) {\r\n      crOut += ` (${cr.coven} in coven)`;\r\n    }\r\n\r\n    if (cr.lair !== null) {\r\n      crOut += ` (${cr.lair} in lair)`;\r\n    }\r\n\r\n    return <>{crOut}</>;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport function CRList(props) {\r\n  return <>{getChallengeRatingDisplayString(props.cr)}</>;\r\n}\r\n\r\nexport function getChallengeRatingDisplayString(challengeRating) {\r\n  let cr = challengeRating;\r\n\r\n  if (!cr) {\r\n    return \"-\";\r\n  } else {\r\n    let crOut = cr.cr;\r\n\r\n    if (typeof crOut === \"number\" && crOut < 1 && crOut !== 0) {\r\n      crOut = `1/${1 / crOut}`;\r\n    }\r\n\r\n    if (cr.coven !== null) {\r\n      crOut += ` (${cr.coven} in coven)`;\r\n    }\r\n\r\n    if (cr.lair !== null) {\r\n      crOut += ` (${cr.lair} in lair)`;\r\n    }\r\n\r\n    return crOut;\r\n  }\r\n}\r\n\r\nexport function sortAscending(a, b) {\r\n  if (a === null) return -1;\r\n  if (b === null) return 1;\r\n\r\n  let out = a.cr - b.cr;\r\n\r\n  if (out !== 0) {\r\n    return out;\r\n  }\r\n\r\n  out = a.InLair - b.InLair;\r\n\r\n  if (out !== 0) {\r\n    return out;\r\n  }\r\n\r\n  out = a.InCoven - b.InCoven;\r\n\r\n  return out;\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport function StatBlock(props) {\r\n  let statBlock = props.statBlock;\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"text-center\">\r\n        <Row key=\"head\" className=\"font-weight-bold\">\r\n          <Col>STR</Col>\r\n          <Col>DEX</Col>\r\n          <Col>CON</Col>\r\n          <Col>INT</Col>\r\n          <Col>WIS</Col>\r\n          <Col>CHA</Col>\r\n        </Row>\r\n        <Row key=\"statVals\">\r\n          <Col key=\"str\">\r\n            {statBlock.str} ({getModifierDisplayString(statBlock.str)})\r\n          </Col>\r\n          <Col key=\"dex\">\r\n            {statBlock.dex} ({getModifierDisplayString(statBlock.dex)})\r\n          </Col>\r\n          <Col key=\"con\">\r\n            {statBlock.con} ({getModifierDisplayString(statBlock.con)})\r\n          </Col>\r\n          <Col key=\"int\">\r\n            {statBlock.int} ({getModifierDisplayString(statBlock.int)})\r\n          </Col>\r\n          <Col key=\"wis\">\r\n            {statBlock.wis} ({getModifierDisplayString(statBlock.wis)})\r\n          </Col>\r\n          <Col key=\"cha\">\r\n            {statBlock.cha} ({getModifierDisplayString(statBlock.cha)})\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function getModifierDisplayString(stat) {\r\n  let mod = getModifier(stat);\r\n\r\n  if (mod > 0) mod = `+${mod}`;\r\n\r\n  return mod;\r\n}\r\n\r\nexport function getModifier(stat) {\r\n  return Math.floor((stat - 10) / 2);\r\n}\r\n","import React from \"react\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\n\r\nconst SWARM_REGEX = /swarm:(\\w)/i;\r\n\r\nexport function CreatureTypeList(props) {\r\n  return <>{getCreatureTypeDisplayString(props.creatureType)}</>;\r\n}\r\n\r\nexport function getCreatureTypeDisplayString(creatureType) {\r\n  let cType = creatureType;\r\n\r\n  if (!cType) {\r\n    return \"-\";\r\n  } else {\r\n    let crOut = \"\";\r\n\r\n    let matches = SWARM_REGEX.exec(cType.tags.toString());\r\n    if (matches !== null && matches.length > 0) {\r\n      let size = \"\";\r\n      switch (matches[1]) {\r\n        case \"T\":\r\n          size = \"tiny\";\r\n          break;\r\n        case \"M\":\r\n          size = \"medium\";\r\n          break;\r\n        default:\r\n          size = \"[unknown size]\";\r\n          break;\r\n      }\r\n      crOut = `swarm of ${size} ${cType.type}s`;\r\n    } else {\r\n      crOut = cType.type;\r\n\r\n      if (cType.tags.length !== 0) {\r\n        crOut += ` (${cType.tags.join(\", \")})`;\r\n      }\r\n    }\r\n\r\n    return crOut;\r\n  }\r\n}\r\n\r\nexport function sortCreatureTypeAsc(a, b) {\r\n  let outVal = sortStrAsc(a.type, b.type);\r\n\r\n  if (outVal !== 0) {\r\n    return outVal;\r\n  }\r\n\r\n  outVal = a.tags.length - b.tags.length;\r\n\r\n  if (outVal !== 0) {\r\n    return outVal;\r\n  }\r\n\r\n  for (let i = 0; i < a.tags.length; ++i) {\r\n    outVal = sortStrAsc(a.tags[i], b.tags[i]);\r\n\r\n    if (outVal !== 0) {\r\n      return outVal;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n","export const CARD_SIZES = [\"None\", \"Small\", \"Medium\", \"Large\"];\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./hamundsTables.css\";\r\n\r\nexport function TrinketTableDisplay(props) {\r\n  let trinketTable = props.trinketTable;\r\n\r\n  if (trinketTable === null || trinketTable === undefined) {\r\n    return <></>;\r\n  }\r\n\r\n  let rowsOut = [];\r\n\r\n  rowsOut.push(\r\n    <Row className=\"text-center font-weight-bold\" key={\"trinketTableHeader\"}>\r\n      <Col className=\"col-1\">D8</Col>\r\n      <Col className=\"text-left\">Description</Col>\r\n      <Col className=\"col-1\">Value</Col>\r\n      <Col className=\"col-1\">Weight</Col>\r\n    </Row>\r\n  );\r\n\r\n  for (let i = 0; i < trinketTable.rows.length; ++i) {\r\n    let row = trinketTable.rows[i];\r\n    rowsOut.push(\r\n      <Row key={`tt-r${i}`}>\r\n        <Col className=\"col-1 text-center\">{row.d8Roll}</Col>\r\n        <Col>{row.descriptionLine}</Col>\r\n        <Col className=\"col-1\">{row.value}</Col>\r\n        <Col className=\"col-1\">{row.weight}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return <Container className=\"hamund-table\">{rowsOut}</Container>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nexport function ArrayInput(props) {\r\n  let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n  let defaultInsert = props.defaultInsert;\r\n  if (defaultInsert === undefined) defaultInsert = \"\";\r\n\r\n  const addLine = (e) => {\r\n    propObj[propKey].push(defaultInsert);\r\n    setRedraw(!redraw);\r\n  };\r\n  const insertLine = (e, tarIndex) => {\r\n    propObj[propKey].splice(tarIndex, 0, defaultInsert);\r\n    setRedraw(!redraw);\r\n  };\r\n\r\n  const removeLine = (e, idx) => {\r\n    propObj[propKey].splice(idx, 1);\r\n    setRedraw(!redraw);\r\n  };\r\n\r\n  let arrayLines = [];\r\n  for (let i = 0; i < propObj[propKey].length; ++i) {\r\n    arrayLines.push(\r\n      <Row key={i}>\r\n        <Col className=\"col-2 border\">\r\n          <button\r\n            onClick={(e) => {\r\n              insertLine(e, i);\r\n            }}\r\n            // disabled={i === 0}\r\n          >\r\n            ^\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              removeLine(e, i);\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              insertLine(e, i + 1);\r\n            }}\r\n            // disabled={i === propObj[propKey].length - 1}\r\n          >\r\n            v\r\n          </button>\r\n        </Col>\r\n        <Col>\r\n          <props.subType\r\n            object={propObj}\r\n            objKey={propKey}\r\n            index={i}\r\n            hideLabel={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"col-3\">\r\n          {propKey}: <button onClick={addLine}>+</button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {arrayLines}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function SelectInput(props) {\r\n  let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n\r\n  const onChangeFunc = (e) => {\r\n    propObj[propKey] = e.target.value;\r\n    setRedraw(!redraw);\r\n  };\r\n\r\n  let options = props.options.map((opt, idx) => {\r\n    return (\r\n      <option value={opt} key={idx}>\r\n        {opt}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"col-3\">{propKey}: </Col>{\" \"}\r\n        <Col>\r\n          <select\r\n            style={{ width: \"inherit\" }}\r\n            value={propObj[propKey]}\r\n            onChange={onChangeFunc}\r\n          >\r\n            {options}\r\n          </select>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function RadioButtonInput(props) {\r\n  let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n\r\n  const onChangeFunc = (e) => {\r\n    if (e.target.checked) {\r\n      propObj[propKey] = e.target.value;\r\n      setRedraw(!redraw);\r\n    }\r\n  };\r\n\r\n  let options = props.options.map((opt, idx) => {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"radio\"\r\n          value={opt}\r\n          key={idx}\r\n          name={propKey}\r\n          id={opt}\r\n          checked={propObj[propKey] === opt}\r\n          onChange={onChangeFunc}\r\n        />{\" \"}\r\n        <label for={opt}>{opt}</label>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"border\">\r\n        <Col className=\"col-3\">{propKey}: </Col> <Col>{options}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function StringInput(props) {\r\n  let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n  let propIdx = props.index;\r\n\r\n  let {\r\n    disabled,\r\n    hideLabel, //, ...otherProps\r\n  } = props;\r\n\r\n  const onChangeFunc = (e) => {\r\n    if (propIdx !== undefined) {\r\n      propObj[propKey][propIdx] = e.target.value;\r\n    } else {\r\n      propObj[propKey] = e.target.value;\r\n    }\r\n    setRedraw(!redraw);\r\n  };\r\n\r\n  let value = propObj[propKey];\r\n  if (propIdx !== undefined) {\r\n    value = propObj[propKey][propIdx];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        {!hideLabel && <Col className=\"col-3\">{propKey}: </Col>}\r\n        <Col>\r\n          <input\r\n            type=\"text\"\r\n            style={{ width: \"inherit\" }}\r\n            value={value}\r\n            onChange={onChangeFunc}\r\n            disabled={disabled}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function CheckboxInput(props) {\r\n  let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n\r\n  const onChangeFunc = (e) => {\r\n    propObj[propKey] = e.target.checked;\r\n    setRedraw(!redraw);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"col-3\">{propKey}: </Col>{\" \"}\r\n        <Col>\r\n          <input\r\n            type=\"checkbox\"\r\n            style={{ width: \"inherit\" }}\r\n            onChange={onChangeFunc}\r\n            checked={propObj[propKey] ? \"checked\" : \"\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ModularDescription(props) {\r\n  let desc = props.description;\r\n\r\n  if (typeof desc === \"string\") {\r\n    return <SimpleDescription description={desc} />;\r\n  } else {\r\n    if (!desc.type) return <>ERROR on: {JSON.stringify(desc)}</>;\r\n    switch (desc.type) {\r\n      case \"list\":\r\n        let style = desc.style;\r\n        return (\r\n          <ListDescription items={desc.lines || desc.items} style={style} />\r\n        );\r\n      case \"item\":\r\n        return <ItemDescription description={desc} />;\r\n      default:\r\n        return <UnhandledDescription description={desc} />;\r\n    }\r\n  }\r\n}\r\n\r\nfunction SimpleDescription(props) {\r\n  return <p>{props.description}</p>;\r\n}\r\n\r\nfunction ItemDescription(props) {\r\n  return (\r\n    <p>\r\n      <b>{props.description.name}</b> {props.description.entry}\r\n    </p>\r\n  );\r\n}\r\n\r\nfunction UnhandledDescription(props) {\r\n  return <p>{JSON.stringify(props.description)}</p>;\r\n}\r\n\r\nfunction ListDescription(props) {\r\n  let output = [];\r\n\r\n  for (let i = 0; i < props.items.length; ++i) {\r\n    output.push(\r\n      <li key={i}>\r\n        <ModularDescription description={props.items[i]} />\r\n      </li>\r\n    );\r\n  }\r\n\r\n  let styleObj = {};\r\n  if (props.style) {\r\n    styleObj.listStyle = props.style;\r\n  }\r\n\r\n  return <ul style={styleObj}>{output}</ul>;\r\n}\r\n","import React from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  StringInput,\r\n  CheckboxInput,\r\n  SelectInput,\r\n  ArrayInput,\r\n  RadioButtonInput,\r\n} from \"./inputUtil\";\r\nimport Storage from \"./StorageUtil\";\r\nimport { ModularDescription } from \"./descriptionUtil\";\r\n\r\nexport function getIdFromItemName(name) {\r\n  return name.toLowerCase().replace(/\\s+/g, \"_\");\r\n}\r\n\r\nexport function getIdFromItem(item) {\r\n  if (item.id !== undefined) return item.id;\r\n  else return getIdFromItemName(item.name);\r\n}\r\n\r\nexport function CraftableItemDisplay(props) {\r\n  let craftableItem = props.craftableItem;\r\n\r\n  let materialOutput = craftableItem.materials.map((mat, idx) => {\r\n    let matItem = Storage.harvestableItemDict[mat.componentId];\r\n\r\n    return (\r\n      <span key={idx}>\r\n        {matItem ? matItem.name : mat.componentId} ({mat.quantity})\r\n      </span>\r\n    );\r\n  });\r\n  let finalMaterialOutput = [];\r\n  for (let i = 0; i < materialOutput.length; ++i) {\r\n    if (finalMaterialOutput.length !== 0) {\r\n      finalMaterialOutput.push(\" \" + craftableItem.materialGrouping + \" \");\r\n    }\r\n    finalMaterialOutput.push(materialOutput[i]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"font-weight-bold\">{craftableItem.name}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <i>\r\n            {craftableItem.type},{\" \"}\r\n            {(craftableItem.rarity !== null\r\n              ? craftableItem.rarity\r\n              : \"\"\r\n            ).toLowerCase()}{\" \"}\r\n            {craftableItem.requiresAttunement && \"(requires attunement)\"}\r\n          </i>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <i>\r\n            Crafted by: {finalMaterialOutput} ({craftableItem.crafter})\r\n          </i>\r\n        </Col>\r\n      </Row>\r\n      &nbsp;\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Description:</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {craftableItem.description.length > 0 &&\r\n            craftableItem.description.map((para, idx) => {\r\n              return <ModularDescription key={idx} description={para} />;\r\n            })}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport class EditingCraftableItemDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.generateStateObject(this.props.craftableItem);\r\n    this.applyStateToItem = this.applyStateToItem.bind(this);\r\n  }\r\n\r\n  generateStateObject(craftableItem) {\r\n    let obj = {};\r\n    return obj;\r\n  }\r\n\r\n  handleInput(event, key) {\r\n    event.preventDefault();\r\n\r\n    console.log(`${key}: ${event.target.value}`);\r\n\r\n    let partialObject = {};\r\n    partialObject[key] = event.target.value;\r\n    this.setState(partialObject);\r\n  }\r\n\r\n  applyStateToItem(event) {\r\n    event.preventDefault();\r\n\r\n    for (let i = 0; i < this.stringKeys.length; ++i) {\r\n      let targetValue = this.state[this.stringKeys[i].key];\r\n\r\n      this.props.craftableItem[this.stringKeys[i].key] = this.stringKeys[\r\n        i\r\n      ].store(targetValue);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.craftableItem.Id !== prevProps.craftableItem.Id) {\r\n      this.setState(this.generateStateObject(this.props.craftableItem));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let partialObject = {};\r\n    this.setState(partialObject);\r\n  }\r\n\r\n  render() {\r\n    let craftableItem = this.props.craftableItem;\r\n\r\n    return (\r\n      <Container fluid>\r\n        {/* <div>propObj :: {JSON.stringify(craftableItem)}</div> */}\r\n        <StringInput object={craftableItem} objKey=\"Id\" disabled />\r\n        <StringInput object={craftableItem} objKey=\"Name\" />\r\n        <StringInput object={craftableItem} objKey=\"Type\" />\r\n        <Row>\r\n          <Col>\r\n            <CheckboxInput object={craftableItem} objKey=\"RequiresAttunement\" />\r\n          </Col>\r\n          <Col>\r\n            <StringInput\r\n              object={craftableItem}\r\n              objKey=\"AttunementNote\"\r\n              hideLabel={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <RadioButtonInput // SelectInput\r\n              object={craftableItem}\r\n              objKey=\"Crafter\"\r\n              options={[\r\n                \"Alchemist\",\r\n                \"Artificer\",\r\n                \"Blacksmith\",\r\n                \"Leatherworker\",\r\n                \"Tinker\",\r\n                \"Thaumaturge\",\r\n              ]}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <RadioButtonInput //SelectInput\r\n              object={craftableItem}\r\n              objKey=\"Rarity\"\r\n              options={[\r\n                \"Mundane\",\r\n                \"Common\",\r\n                \"Uncommon\",\r\n                \"Rare\",\r\n                \"Very Rare\",\r\n                \"Legendary\",\r\n                \"Mixed\",\r\n              ]}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <ArrayInput\r\n          object={craftableItem}\r\n          objKey=\"Description\"\r\n          subType={StringInput}\r\n        />\r\n        <SelectInput\r\n          object={craftableItem}\r\n          objKey=\"MaterialGrouping\"\r\n          options={[\"OR\", \"AND\"]}\r\n        />\r\n        <ArrayInput\r\n          object={craftableItem}\r\n          objKey=\"Materials\"\r\n          subType={MaterialInput}\r\n          defaultInsert={{ ComponentId: \"\", Quantity: \"\" }}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction MaterialInput(props) {\r\n  //   let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n  let propIdx = props.index;\r\n\r\n  // const onChangeFunc = (e) => {\r\n  //     if (propIdx !== undefined) {\r\n  //         propObj[propKey][propIdx] = e.target.value;\r\n  //     } else {\r\n  //         propObj[propKey] = e.target.value;\r\n  //     }\r\n  //     setRedraw(!redraw);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <StringInput object={propObj[propKey][propIdx]} objKey=\"ComponentId\" />\r\n      <StringInput object={propObj[propKey][propIdx]} objKey=\"Quantity\" />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport { getIdFromItemName } from \"./craftableItemUtil\";\r\nimport \"./hamundsTables.css\";\r\nimport { NavLink } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function HarvestingTableDisplay(props) {\r\n  let challengeRating = props.challengeRating;\r\n  let creatureType = props.creatureType;\r\n  let harvestingTable = props.harvestingTable;\r\n\r\n  if (!harvestingTable) return <></>;\r\n\r\n  let rowsOut = [];\r\n\r\n  // rowsOut.push(<>{JSON.stringify(harvestingTable)}</>);\r\n\r\n  rowsOut.push(\r\n    <Row className=\"text-center hamund-header\" key={-1}>\r\n      <Col className=\"col-1\">DC</Col>\r\n      <Col className=\"col-2 text-left\">Item</Col>\r\n      <Col className=\"\">Description</Col>\r\n      <Col className=\"col-1\">Value</Col>\r\n      <Col className=\"col-1\">Weight</Col>\r\n      <Col className=\"col-2\">Crafting</Col>\r\n    </Row>\r\n  );\r\n\r\n  for (let i = 0; i < harvestingTable.rows.length; ++i) {\r\n    let row = harvestingTable.rows[i];\r\n\r\n    let item = Storage.harvestableItemDict[row.itemNameReference];\r\n\r\n    let nameOut = row.itemNameReference;\r\n    let descriptionOut = [];\r\n    let valueOut = \"\";\r\n    let weightOut = \"\";\r\n    let craftingOut = [];\r\n\r\n    if (item !== null && item !== undefined) {\r\n      nameOut = item.name;\r\n\r\n      let lines = 0;\r\n\r\n      for (let j = 0; j < item.description.length; ++j) {\r\n        descriptionOut.push(<p key={lines++}>{item.description[j]}</p>);\r\n      }\r\n\r\n      // output tools, if any\r\n      if (\r\n        item.requiredToolNames !== undefined &&\r\n        item.requiredToolNames.length > 0\r\n      ) {\r\n        descriptionOut.push(\r\n          <p key={lines++} className=\"font-weight-bold\">\r\n            Requires {item.requiredToolNames.join(\" and \").toLowerCase()}.\r\n          </p>\r\n        );\r\n      }\r\n\r\n      for (let j = 0; j < item.useText.length; ++j) {\r\n        descriptionOut.push(\r\n          <p key={lines++}>\r\n            {j === 0 && <b>Use: </b>} {item.useText[j]}\r\n          </p>\r\n        );\r\n      }\r\n\r\n      valueOut = item.value;\r\n      weightOut = item.weight;\r\n\r\n      // craftingOut = item.CraftingUsage.join(\" or \");\r\n      for (let k = 0; k < item.craftingUsage.length; ++k) {\r\n        if (craftingOut.length !== 0) {\r\n          craftingOut.push(<span key={\"or-\" + k}> or </span>);\r\n        }\r\n        craftingOut.push(\r\n          <NavLink\r\n            key={k}\r\n            tag={Link}\r\n            to={`/craftableitems/${getIdFromItemName(item.craftingUsage[k])}`}\r\n          >\r\n            {item.craftingUsage[k]}\r\n          </NavLink>\r\n        );\r\n      }\r\n    }\r\n\r\n    if (row.quantity !== \"\") {\r\n      nameOut += ` (${row.quantity})`;\r\n    }\r\n    if (row.notes !== \"\") {\r\n      nameOut += ` (${row.notes})`;\r\n    }\r\n\r\n    rowsOut.push(\r\n      <Row key={i} className=\"hamund-row\">\r\n        <Col className=\"col-1 text-center\">{row.difficultyClass}</Col>\r\n        <Col className=\"col-2\">{nameOut}</Col>\r\n        <Col className=\"\">{descriptionOut}</Col>\r\n        <Col className=\"col-1\">{valueOut}</Col>\r\n        <Col className=\"col-1\">{weightOut}</Col>\r\n        <Col className=\"col-2\">{craftingOut}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  let skill = \"\";\r\n\r\n  switch (creatureType.type) {\r\n    case \"aberration\":\r\n    case \"celestial\":\r\n    case \"elemental\":\r\n    case \"fey\":\r\n    case \"fiend\":\r\n    case \"undead\":\r\n      skill = \"Arcana\";\r\n      break;\r\n    case \"beast\":\r\n    case \"dragon\":\r\n    case \"monstrosity\":\r\n    case \"plant\":\r\n      skill = \"Nature\";\r\n      break;\r\n    case \"construct\":\r\n    case \"ooze\":\r\n      skill = \"Investigation\";\r\n      break;\r\n    case \"giant\":\r\n    case \"humanoid\":\r\n      skill = \"Medicine\";\r\n      break;\r\n    default:\r\n      skill = \"[\" + creatureType.type + \"]\";\r\n      break;\r\n  }\r\n\r\n  let apprasialTarget = \"unknown\";\r\n\r\n  if (challengeRating !== null) {\r\n    apprasialTarget = 8 + challengeRating.cr;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <b>Relevant skill:</b>&nbsp;{skill}\r\n      </Row>\r\n      <Row>\r\n        <b>Appraisal Target:</b>&nbsp;{apprasialTarget}\r\n      </Row>\r\n      <div className=\"border\" />\r\n      <Container className=\"hamund-table\">{rowsOut}</Container>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { stripTags } from \"../utility/stringUtil\";\r\n\r\nexport function DynamicRender(props) {\r\n  let toRender = props.toRender;\r\n  let { name, entries, type } = toRender;\r\n\r\n  if (typeof toRender === \"string\") {\r\n    return <>{stripTags(toRender)}</>;\r\n  }\r\n\r\n  if (type === undefined) {\r\n    return (\r\n      <div>\r\n        {entries.map((ent, idx) => {\r\n          return (\r\n            <div key={idx}>\r\n              {idx === 0 && (\r\n                <>\r\n                  <b>{stripTags(name)}.</b>{\" \"}\r\n                </>\r\n              )}\r\n              <DynamicRender toRender={ent} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    switch (type) {\r\n      case \"list\":\r\n        return <ListRender list={toRender} />;\r\n      case \"item\":\r\n        return <ItemRender item={toRender} />;\r\n      default:\r\n        return <>[UNH {type} UNH]</>;\r\n    }\r\n  }\r\n}\r\n\r\nfunction ListRender(props) {\r\n  let { type, style, items, ...others } = props.list;\r\n\r\n  return (\r\n    <ul>\r\n      {items.map((it, idx) => (\r\n        <DynamicRender toRender={it} key={idx} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction ItemRender(props) {\r\n  let { type, name, entry, ...others } = props.item;\r\n\r\n  return (\r\n    <li>\r\n      <b>{stripTags(name)}</b> {stripTags(entry)}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport function SpellcastingBlock(props) {\r\n  var entry = props.spellcasting;\r\n\r\n  var { name, headerEntries, spells, will, daily } = entry;\r\n\r\n  var output = [];\r\n  var idx = 0;\r\n  if (headerEntries && headerEntries.length > 0) {\r\n    for (idx = 0; idx < headerEntries.length; ++idx) {\r\n      if (idx === 0) {\r\n        output.push(\r\n          <div key={idx}>\r\n            <b>{stripTags(name)}.</b> {stripTags(headerEntries[idx])}\r\n          </div>\r\n        );\r\n      } else {\r\n        output.push(<div key={idx}>{stripTags(headerEntries[idx])}</div>);\r\n      }\r\n    }\r\n  } else {\r\n    output.push(\r\n      <div key={\"name\"}>\r\n        <b>{stripTags(name)}.</b>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (will && will.length > 0) {\r\n    output.push(\r\n      <div key={\"will\"}>\r\n        <i>At will:</i> {will.map(stripTags).join(\", \")}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (daily) {\r\n    let dailyKeys = Object.keys(daily);\r\n\r\n    for (idx = 0; idx < dailyKeys.length; ++idx) {\r\n      let [num, each] = dailyKeys[idx].split(\"\");\r\n      let lead = `${num}/day${each ? \" each\" : \"\"}`;\r\n\r\n      output.push(\r\n        <div key={\"will\"}>\r\n          <i>{lead}:</i> {daily[dailyKeys[idx]].map(stripTags).join(\", \")}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (spells) {\r\n    let spellKeys = Object.keys(spells);\r\n    let spellsBlock = spells;\r\n\r\n    for (idx = 0; idx < spellKeys.length; ++idx) {\r\n      let { slots, spells } = spellsBlock[spellKeys[idx]];\r\n\r\n      let numCount = \"\";\r\n      if (slots !== undefined) {\r\n        numCount = `${slots} slot${Number.parseInt(slots) > 1 ? \"s\" : \"\"}`;\r\n      } else {\r\n        numCount = \"at will\";\r\n      }\r\n\r\n      let spellLevel = Number.parseInt(spellKeys[idx]);\r\n      if (spellLevel === 0) {\r\n        spellLevel = \"Cantrips\";\r\n      } else if (spellLevel >= 4) {\r\n        spellLevel = `${spellLevel}th level`;\r\n      } else if (spellLevel === 1) {\r\n        spellLevel = `${spellLevel}st level`;\r\n      } else if (spellLevel === 2) {\r\n        spellLevel = `${spellLevel}nd level`;\r\n      } else if (spellLevel === 3) {\r\n        spellLevel = `${spellLevel}rd level`;\r\n      }\r\n\r\n      let lead = `${spellLevel} (${numCount}): `;\r\n\r\n      output.push(\r\n        <div key={\"will\"}>\r\n          <i>{lead}</i>\r\n          {spells.map(stripTags).join(\", \")}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return <>{output}</>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StatBlock } from \"../utility/statsUtil\";\r\nimport { getCreatureTypeDisplayString } from \"../utility/creatureTypeUtil\";\r\nimport { getChallengeRatingDisplayString } from \"../utility/challengeRatingUtil\";\r\nimport { Tabs, Tab, Row, Col } from \"react-bootstrap\";\r\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport { TrinketTableDisplay } from \"../utility/trinketTableUtil\";\r\nimport { HarvestingTableDisplay } from \"../utility/harvestingTableUtil\";\r\nimport { stripTags } from \"../utility/stringUtil\";\r\n// import { ModularDescription } from \"../utility/descriptionUtil\";\r\nimport { DynamicRender, SpellcastingBlock } from \"./RenderBlocks\";\r\n\r\nconst COMBAT_TAB_KEY = \"combat\";\r\nconst TABLES_TAB_KEY = \"tables\";\r\n\r\nconst HARVESTING_TAB_KEY = \"harvesting\";\r\nconst TRINKET_TAB_KEY = \"trinkets\";\r\n\r\nexport function MonsterDisplay(props) {\r\n  let [tabKey, setTabKey] = useState(COMBAT_TAB_KEY);\r\n  let [tablesTabKey, setTablesTabKey] = useState(HARVESTING_TAB_KEY);\r\n  let monster = props.monster;\r\n\r\n  if (monster === null) {\r\n    return (\r\n      <>\r\n        <div>Select an item from the list to see stats ...</div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  let nameOut = monster.name;\r\n  let typeOut = getCreatureTypeDisplayString(monster.type);\r\n  let cardSize = monster.cardSize;\r\n\r\n  let traitsAndSpellcastingOut = [];\r\n  monster.traits.forEach((entry, i) => {\r\n    traitsAndSpellcastingOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  monster.spellcasting.forEach((entry, i) => {\r\n    traitsAndSpellcastingOut.push(\r\n      <SpellcastingBlock spellcasting={entry} key={i} />\r\n    );\r\n  });\r\n  if (traitsAndSpellcastingOut.length > 0) {\r\n    traitsAndSpellcastingOut.push(\r\n      <div key=\"traitsBorder\" className=\"border\" />\r\n    );\r\n  }\r\n\r\n  let actionsOut = [];\r\n  monster.actions.forEach((entry, i) => {\r\n    actionsOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  if (actionsOut.length > 0) {\r\n    actionsOut.push(<div key=\"actionBorder\" className=\"border\" />);\r\n  }\r\n\r\n  let reactionsOut = [];\r\n  monster.reactions.forEach((entry, i) => {\r\n    reactionsOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  if (reactionsOut.length > 0) {\r\n    reactionsOut.push(<div key=\"reactionBorder\" className=\"border\" />);\r\n  }\r\n\r\n  let subMonster = Storage.subStateMonsterDict[monster.id];\r\n\r\n  let harvestingTable =\r\n    subMonster !== undefined && subMonster.harvestingTableGroup !== null\r\n      ? Storage.harvestingTableDict[subMonster.harvestingTableGroup]\r\n      : null;\r\n  let trinketTable =\r\n    subMonster !== undefined && subMonster.trinketTableType !== null\r\n      ? Storage.trinketTableDict[subMonster.trinketTableType]\r\n      : null;\r\n\r\n  let hasHarvestingTable = harvestingTable !== null;\r\n  let hasTrinketTable = trinketTable !== null;\r\n\r\n  let hasTables = hasHarvestingTable || hasTrinketTable;\r\n\r\n  if (!hasTables) {\r\n    if (tabKey === TABLES_TAB_KEY) {\r\n      tabKey = COMBAT_TAB_KEY;\r\n    }\r\n  } else {\r\n    if (!hasHarvestingTable && tablesTabKey === HARVESTING_TAB_KEY) {\r\n      tablesTabKey = TRINKET_TAB_KEY;\r\n    } else if (!hasTrinketTable && tablesTabKey === TRINKET_TAB_KEY) {\r\n      tablesTabKey = HARVESTING_TAB_KEY;\r\n    }\r\n  }\r\n  //tabKey = COMBAT_TAB_KEY;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h4>{nameOut}</h4>\r\n          <div>\r\n            <i>\r\n              {typeOut}, {\"<<\"}ALIGNMENT{\">>\"}\r\n            </i>\r\n          </div>\r\n          <div>\r\n            <b>Card Size: </b>\r\n            {CARD_SIZES[cardSize]}\r\n          </div>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <div>\r\n            <b>Source</b>\r\n            <div>{monster.source}</div>\r\n            {monster.otherSources.length > 0 && (\r\n              <i>\r\n                {monster.otherSources.map((oSrc) => oSrc.source).join(\", \")}\r\n              </i>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Tabs activeKey={tabKey} onSelect={(k) => setTabKey(k)}>\r\n        <Tab eventKey={COMBAT_TAB_KEY} title=\"Combat\">\r\n          <ACHPSpeed monster={monster} />\r\n          <StatBlock statBlock={monster.stats} />\r\n          <div className=\"border\" />\r\n          <SkillsAndSavesBlock monster={monster} />\r\n          {traitsAndSpellcastingOut}\r\n          {actionsOut}\r\n          {reactionsOut}\r\n        </Tab>\r\n        <Tab eventKey={TABLES_TAB_KEY} title=\"Tables\" disabled={!hasTables}>\r\n          <Tabs activeKey={tablesTabKey} onSelect={(k) => setTablesTabKey(k)}>\r\n            <Tab\r\n              eventKey={HARVESTING_TAB_KEY}\r\n              title=\"Harvesting\"\r\n              disabled={!hasHarvestingTable}\r\n            >\r\n              {\r\n                <HarvestingTableDisplay\r\n                  challengeRating={monster.challengeRating}\r\n                  creatureType={monster.type}\r\n                  harvestingTable={harvestingTable}\r\n                />\r\n              }\r\n              {/* {JSON.stringify(monster.HarvestingTable)} */}\r\n            </Tab>\r\n            <Tab\r\n              eventKey={TRINKET_TAB_KEY}\r\n              title=\"Trinkets\"\r\n              disabled={!hasTrinketTable}\r\n            >\r\n              <TrinketTableDisplay trinketTable={trinketTable} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Tab>\r\n      </Tabs>\r\n      {/* <div className=\"border\" /> */}\r\n      {/* {JSON.stringify(monster)} */}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ACHPSpeed(props) {\r\n  let monster = props.monster;\r\n  let topBlock = [];\r\n\r\n  let acOut = (\r\n    <>\r\n      {monster.armorClass\r\n        .map((ac) => {\r\n          if (ac.from) {\r\n            return ac.ac + \" (\" + stripTags(ac.from) + \")\";\r\n          } else if (ac.condition) {\r\n            return ac.ac + \" \" + stripTags(ac.condition);\r\n          } else return ac.ac;\r\n        })\r\n        .join(\", \")}\r\n    </>\r\n  );\r\n  topBlock.push(\r\n    <div key=\"ac\">\r\n      <b>AC:</b> {acOut}\r\n    </div>\r\n  );\r\n  let hpOut = (\r\n    <>\r\n      {monster.health.average} ({monster.health.formula})\r\n    </>\r\n  );\r\n  topBlock.push(\r\n    <div key=\"hp\">\r\n      <b>Health:</b> {hpOut}\r\n    </div>\r\n  );\r\n  let speedOut = <>{monster.speed.simpleDisplay}</>;\r\n  topBlock.push(\r\n    <div key=\"speed\">\r\n      <b>Speed:</b> {speedOut}\r\n    </div>\r\n  );\r\n  topBlock.push(<div key=\"borderTop\" className=\"border\" />);\r\n\r\n  return <>{topBlock}</>;\r\n}\r\n\r\nfunction SkillsAndSavesBlock(props) {\r\n  let monster = props.monster;\r\n\r\n  // let testFunction = function (mon) {\r\n  //   return JSON.stringify(mon[this.key]);\r\n  // };\r\n  let keyValueFunction = function (mon) {\r\n    return Object.keys(mon[this.key])\r\n      .map((inKey) => inKey + \" \" + mon[this.key][inKey])\r\n      .join(\", \");\r\n  };\r\n  let simpleJoinFunction = function (mon) {\r\n    return mon[this.key].join(\", \");\r\n  };\r\n  const SSE_PAIRS = [\r\n    {\r\n      key: \"saves\",\r\n      header: \"Saving Throws\",\r\n      disp: keyValueFunction,\r\n    },\r\n    {\r\n      key: \"skills\",\r\n      header: \"Skills\",\r\n      disp: keyValueFunction,\r\n    },\r\n    {\r\n      key: \"resistances\",\r\n      header: \"Resistances\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"immunity\",\r\n      header: \"Immunities\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"conditionImmunities\",\r\n      header: \"Condition Immunities\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"languages\",\r\n      header: \"Languages\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"senses\",\r\n      header: \"Senses\",\r\n      disp: function (mon) {\r\n        return (\r\n          mon[this.key].join(\", \") + \", passive Perception \" + mon.passivePerc\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  let skillsSavesEtcOut = [];\r\n  SSE_PAIRS.forEach((pair) => {\r\n    if (monster[pair.key]) {\r\n      skillsSavesEtcOut.push(\r\n        <div key={pair.key}>\r\n          <b>{pair.header}: </b>\r\n          {pair.disp(monster)}\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n  skillsSavesEtcOut.push(\r\n    <div key=\"cr\">\r\n      <b>Challenge Rating: </b>\r\n      {getChallengeRatingDisplayString(monster.challengeRating)}\r\n    </div>\r\n  );\r\n  if (skillsSavesEtcOut.length > 0) {\r\n    skillsSavesEtcOut.push(<div key=\"border\" className=\"border\" />);\r\n  }\r\n\r\n  return <>{skillsSavesEtcOut}</>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { getCreatureTypeDisplayString } from \"../utility/creatureTypeUtil\";\r\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\r\n\r\nfunction BlockRow_Text(key, label, value, setter) {\r\n  return (\r\n    <Row key={key}>\r\n      <Col className=\"col-3\">{label}:</Col>\r\n      <Col>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          style={{\r\n            width: \"inherit\",\r\n          }}\r\n          onChange={(e) => {\r\n            e.preventDefault();\r\n            setter(e.target.value);\r\n          }}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction BlockRow_Select(key, label, value, setter, selectOpts, optLabels) {\r\n  return (\r\n    <Row key={key}>\r\n      <Col className=\"col-3\">{label}:</Col>\r\n      <Col>\r\n        <select\r\n          value={value}\r\n          style={{\r\n            width: \"inherit\",\r\n          }}\r\n          onChange={(e) => {\r\n            e.preventDefault();\r\n            setter(e.target.value);\r\n          }}\r\n        >\r\n          <option value={null}>Ignore</option>\r\n          {selectOpts.map((opt, idx) => {\r\n            return (\r\n              <option key={idx} value={opt}>\r\n                {optLabels[opt]}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport function MonsterFilterBlock(props) {\r\n  let [nameField, setNameField] = useState(\"\");\r\n  let [typeField, setTypeField] = useState(\"\");\r\n  let [cardSizeField, setCardSizeField] = useState();\r\n\r\n  let filterRows = [];\r\n\r\n  filterRows.push(\r\n    BlockRow_Text(filterRows.length, \"Name\", nameField, setNameField)\r\n  );\r\n  filterRows.push(\r\n    BlockRow_Text(filterRows.length, \"Creature Type\", typeField, setTypeField)\r\n  );\r\n  filterRows.push(\r\n    BlockRow_Select(\r\n      filterRows.length,\r\n      \"Card Size\",\r\n      cardSizeField,\r\n      setCardSizeField,\r\n      [0, 1, 2, 3],\r\n      CARD_SIZES\r\n    )\r\n  );\r\n\r\n  // TODO: add option to filter by having (or not) harvesting/trinket tables\r\n\r\n  const submitFunc = (e) => {\r\n    let obj = {};\r\n    if (nameField !== \"\") {\r\n      obj.Name = (obj) => {\r\n        return obj.name.toLowerCase().match(nameField.toLowerCase());\r\n      };\r\n    }\r\n    if (typeField !== \"\") {\r\n      obj.Type = (obj) => {\r\n        let crString = getCreatureTypeDisplayString(obj.type);\r\n        return crString.toLowerCase().match(typeField.toLowerCase());\r\n      };\r\n    }\r\n    if (cardSizeField >= 0) {\r\n      obj.CardSize = (obj) => {\r\n        return obj.ReferenceCardSize === Number(cardSizeField);\r\n      };\r\n    }\r\n\r\n    props.submitFilter(obj);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form id=\"filter\" className=\"border\" onSubmit={submitFunc}>\r\n      {filterRows}\r\n      <button type=\"submit\">Apply Filter</button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { DisplayList, DisplayColumn } from \"./DisplayList\";\r\nimport { CRList } from \"../components/ChallengeRatingDisplay\";\r\nimport Storage from \"../utility/StorageUtil\";\r\n// import { getIdFromMonster } from \"../utility/monsterUtil\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport { sortAscending as sortCRAsc } from \"../utility/challengeRatingUtil\";\r\nimport { MonsterDisplay } from \"../components/MonsterDisplay\";\r\n\r\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\r\nimport {\r\n  CreatureTypeList,\r\n  sortCreatureTypeAsc,\r\n} from \"../utility/creatureTypeUtil\";\r\nimport { MonsterFilterBlock } from \"../components/MonsterFilterBlock\";\r\nimport \"./Columnable.css\";\r\nimport \"../LayoutControl/Layout.css\";\r\n\r\nexport function Monsters(props) {\r\n  let [filterObj, setFilterObj] = useState({});\r\n\r\n  const pathWithId = \"/monsters/:id\";\r\n  let monster = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (Storage.monsterDict[selectedId] !== undefined) {\r\n      monster = Storage.monsterDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    new DisplayColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n    new DisplayColumn(\r\n      \"Type\",\r\n      (item) => {\r\n        return <CreatureTypeList creatureType={item[\"type\"]} />;\r\n      },\r\n      (a, b) => {\r\n        return sortCreatureTypeAsc(a.creatureType, b.creatureType);\r\n      }\r\n    ),\r\n    new DisplayColumn(\r\n      \"CR\",\r\n      (item) => {\r\n        return <CRList cr={item[\"challengeRating\"]} />;\r\n      },\r\n      (a, b) => {\r\n        return sortCRAsc(a.challengeRating, b.challengeRating);\r\n      }\r\n    ),\r\n    new DisplayColumn(\r\n      \"Card Size\",\r\n      (item) => {\r\n        var subMon = Storage.subStateMonsterDict[item.id];\r\n        return <>{subMon ? CARD_SIZES[subMon.cardSize] : \"-\"}</>;\r\n      },\r\n      (a, b) => {\r\n        var subMonA = Storage.subStateMonsterDict[a.id];\r\n        var subMonB = Storage.subStateMonsterDict[b.id];\r\n\r\n        if (subMonA && subMonB) {\r\n          return subMonA.cardSize - subMonB.cardSize;\r\n        } else if (subMonA && !subMonB) {\r\n          return -1;\r\n        } else if (!subMonA && subMonB) {\r\n          return 1;\r\n        } else {\r\n          // TODO: Fix this\r\n          return -1;\r\n        }\r\n      }\r\n    ),\r\n    new DisplayColumn(\r\n      \"Source\",\r\n      (item) => {\r\n        return <>{item[\"source\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.source, b.source);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let list = Object.values(Storage.monsterDict);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          <MonsterFilterBlock submitFilter={setFilterObj} />\r\n          <DisplayList\r\n            headers={headers}\r\n            items={list}\r\n            filterObject={filterObj}\r\n            pathRoot={props.match.path}\r\n            idFunction={(mon) => mon.id}\r\n            selectedId={selectedId}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">\r\n          <MonsterDisplay monster={monster} selectedId={selectedId} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { DisplayList, DisplayColumn } from \"./DisplayList\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport {\r\n  getIdFromItem,\r\n  CraftableItemDisplay,\r\n  EditingCraftableItemDisplay,\r\n} from \"../utility/craftableItemUtil\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\n\r\nimport \"./Columnable.css\";\r\nimport \"../LayoutControl/Layout.css\";\r\n\r\nexport function CraftableItems(props) {\r\n  // let [filterObj, setFilterObj] = useState({});\r\n\r\n  const pathWithId = \"/craftableitems/:id\";\r\n  let craftableItem = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (Storage.craftableItemDict[selectedId] !== undefined) {\r\n      craftableItem = Storage.craftableItemDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    new DisplayColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let displayOutput = [\"Select an item from the list\"];\r\n\r\n  if (craftableItem !== null) {\r\n    if (false && process.env.NODE_ENV === \"development\") {\r\n      displayOutput = [\r\n        <EditingCraftableItemDisplay craftableItem={craftableItem} key={0} />,\r\n      ];\r\n    } else {\r\n      displayOutput = [\r\n        <CraftableItemDisplay craftableItem={craftableItem} key={0} />,\r\n      ];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          {/* <MonsterFilterBlock submitFilter={setFilterObj} /> */}\r\n          <DisplayList\r\n            headers={headers}\r\n            items={Object.values(Storage.craftableItemDict)}\r\n            filterObject={{}}\r\n            pathRoot={props.match.path}\r\n            idFunction={getIdFromItem}\r\n            selectedId={selectedId}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">{displayOutput}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HarvestedItems } from \"./pages/HarvestedItems\";\r\nimport { Home } from \"./pages/Home\";\r\nimport { Monsters } from \"./pages/Monsters\";\r\nimport { CraftableItems } from \"./pages/CraftableItems\";\r\n\r\nexport const MENU = [\r\n    {\r\n        className: \"text-dark\",\r\n        linkName: \"Home\",\r\n        linkTarget: \"/\",\r\n        routePaths: [\"/\"],\r\n        exact: true,\r\n        renderFunction: (props) => {\r\n            return <Home {...props} />;\r\n        },\r\n    },\r\n    {\r\n        className: \"text-dark\",\r\n        linkName: \"Monsters\",\r\n        linkTarget: \"/monsters\",\r\n        routePaths: [\"/monsters\"],\r\n        exact: false,\r\n        renderFunction: (props) => {\r\n            return <Monsters {...props} />;\r\n        },\r\n    },\r\n    {\r\n        className: \"text-dark\",\r\n        linkName: \"Harvested Items\",\r\n        linkTarget: \"/harvesteditems\",\r\n        routePaths: [\"/harvesteditems\"],\r\n        exact: false,\r\n        renderFunction: (props) => {\r\n            return <HarvestedItems {...props} />;\r\n        },\r\n    },\r\n    {\r\n        className: \"text-dark\",\r\n        linkName: \"Trinket Tables\",\r\n        linkTarget: \"/trinkettables\",\r\n        routePaths: [\"/trinkettables\"],\r\n        exact: false,\r\n        renderFunction: (props) => {\r\n            return <span>Trinket Tables</span>;\r\n        },\r\n    },\r\n    {\r\n        className: \"text-dark\",\r\n        linkName: \"Craftable Items\",\r\n        linkTarget: \"/craftableitems\",\r\n        routePaths: [\"/craftableitems\"],\r\n        exact: false,\r\n        renderFunction: (props) => {\r\n            return <CraftableItems {...props} />;\r\n        },\r\n    },\r\n];\r\n","import React from \"react\";\r\nimport { Container, Navbar } from \"react-bootstrap\";\r\nimport { NavbarBrand, NavItem, NavLink } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { MENU } from \"../navigationConstants\";\r\n\r\nexport function NavMenu(props) {\r\n    let navOutput = [];\r\n    for (let i = 0; i < MENU.length; ++i) {\r\n        let linkDeets = MENU[i];\r\n        navOutput.push(\r\n            <NavItem key={i}>\r\n                <NavLink\r\n                    tag={Link}\r\n                    className={linkDeets.className}\r\n                    to={linkDeets.linkTarget}\r\n                >\r\n                    {linkDeets.linkName}\r\n                </NavLink>\r\n            </NavItem>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar className=\"border-bottom p-0\">\r\n                <Container>\r\n                    <NavbarBrand tag={Link} to=\"/\">\r\n                        Reactive RPG\r\n                    </NavbarBrand>\r\n                    <Container\r\n                        className=\"d-sm-inline-flex flex-sm-row-reverse\"\r\n                        navbar=\"true\"\r\n                    >\r\n                        <ul className=\"navbar-nav flex-grow\">{navOutput}</ul>\r\n                    </Container>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { NavMenu } from \"./NavMenu\";\r\nimport \"./Layout.css\";\r\n\r\nexport function Layout(props) {\r\n    return (\r\n        <div className=\"viewportWrapper\">\r\n            <NavMenu />\r\n            <Container fluid className=\"mainContentWrapper\">\r\n                {props.children}\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"./LayoutControl/Layout\";\r\nimport \"./App.css\";\r\n\r\nimport { MENU } from \"./navigationConstants\";\r\nfunction App() {\r\n    let routeOpts = [];\r\n    for (let i = 0; i < MENU.length; ++i) {\r\n        let linkDeets = MENU[i];\r\n        routeOpts.push(\r\n            <Route\r\n                key={i}\r\n                path={linkDeets.routePaths[0]}\r\n                render={(props) => linkDeets.renderFunction(props)}\r\n                exact={linkDeets.exact}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Switch>{routeOpts}</Switch>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Storage from \"./utility/StorageUtil\";\r\n\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nStorage.Init().then(() => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <Router basename={baseUrl}>\r\n        <App />\r\n      </Router>\r\n    </React.StrictMode>,\r\n    rootElement\r\n  );\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}