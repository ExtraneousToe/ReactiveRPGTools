{"version":3,"sources":["themeContext.js","utility/stringUtil.js","redux/selectors.js","pages/Home.js","utility/saveFile.js","data/referenceCardSizes.js","data/BaseDataItem.js","data/Monster.js","redux/actionTypes.js","components/ModularDisplayList.js","components/MonsterDisplayList.js","redux/actions.js","utility/statsUtil.js","components/RenderBlocks.js","components/TrinketTableDisplay.js","components/HarvestingTableDisplay.js","components/MonsterDisplay.js","utility/monsterUtil.js","pages/Monsters.js","components/HarvestedItemDisplay.js","pages/HarvestedItems.js","utility/descriptionUtil.js","components/CraftableItemDisplay.js","pages/CraftableItems.js","navigationConstants.js","LayoutControl/NavMenu.js","LayoutControl/Layout.js","App.js","serviceWorker.js","data/HarvestingTable.js","data/TrinketTable.js","data/CraftableItem.js","data/HarvestedItem.js","data/SubStateMonster.js","redux/reducers/monstersReducer.js","redux/reducers/tablesReducer.js","redux/reducers/itemReducers.js","redux/reducers/index.js","redux/store.js","utility/StorageUtil.js","index.js"],"names":["themes","Object","freeze","dark","styleName","navbarLightDark","light","navbarColour","navbarTextClass","AppTheme","React","createContext","theme","cycleTheme","currentState","sortAscending","a","b","x","toLowerCase","y","Array","prototype","last","arg","undefined","this","length","String","uppercaseFirst","str","toString","charAt","toUpperCase","slice","lowercaseFirst","toSentenceCase","m","out","re","exec","push","join","toSpellCase","replace","toTitleCase","toCamelCase","split","map","word","index","escapeQuotes","qq","unescapeQuotes","uq","encodeApos","distance","target","i","j","n","INF","score","sd","DB","i1","j1","Math","min","Infinity","isNumeric","isNaN","parseFloat","isFinite","escapeRegexp","toUrlified","encodeURIComponent","toChunks","size","numChunks","ceil","chunks","o","substr","joinConjunct","joiner","lastJoiner","nonOxford","outStr","trim","splitFirstSpace","string","firstIndex","indexOf","leadingCharacter","splitByTags","char","char2","tagDepth","curStr","isLastOpen","len","attackTagToFull","tagStr","tagGroups","it","filter","seen","Set","has","add","tags","includes","splitTagByPipe","_splitByPipeBase","_stripTagLayer","startsWith","tag","text","rollText","displayText","Number","Error","asNum","compactText","flags","parts","newText","oldText","stripTags","nxtStr","err","console","error","execDiceRegex","line","stringToken","cnt","type","RollableSpan","props","formula","useState","rolledResult","setRolledResult","appTheme","useContext","onClick","res","DiceRoll","total","className","rollableTokenisedLine","inputString","preString","postString","outputTokens","workingLine","matches","matchIndex","tokeniseByTags","tok","idx","key","execTokenRegex","convertToHTML","inStr","outputString","generateHTMLByTag","pipedText","toDisplay","color","diceForm","subType","toRoll","mod","successThresh","successMax","builtString","JSON","stringify","renderRollableSubType","name","$","window","rollElement","ele","$ele","data","roll","html","log","output","getMonsterDict","store","monsters","monsterDict","getSubMonsterDict","subMonsterDict","getSelectedMonsterId","selectedMonsterId","getHarvestingTableDict","tables","harvestingTableDict","getTrinketTableDict","trinketTableDict","getHarvestedItemDict","items","harvestedItemDict","getCraftableItemDict","craftableItemDict","connect","subStateMonsterDict","e","preventDefault","values","sort","id","harvestedItems","harvestingTables","trinketTables","trinketTableType","craftableItems","filename","fileContent","link","document","createElement","download","href","body","appendChild","click","removeChild","fileSaveAs","CARD_SIZES","BaseDataItem","source","filterString","convertToId","outString","Monster","referenceCardSize","otherSources","creatureSize","creatureType","stats","armorClass","challengeRating","health","passivePerc","languages","speed","saves","skills","senses","alignment","resistances","immunities","conditionImmunities","traits","spellcasting","actions","reactions","environments","legendaryHeader","legendaryActions","harvestingTable","cardSize","fiveEState","feType","CreatureType","inObj","swarmSize","tg","prefix","feCR","cr","ChallengeRating","feACLines","ac","acObj","parseInt","from","condition","ArmorClass","feAlignment","every","ent","Alignment","ali","StatsBlock","HealthBlock","hp","passive","SpeedBlock","walk","fly","swim","climb","burrow","canHover","save","skill","resist","immune","conditionImmune","trait","action","reaction","environment","legendary","displayString","chance","k","strOut","stringFromSize","tagOut","outVal","sortStrAsc","lair","coven","crOut","average","SPEED_KEYS","SpeedEntry","val","simpleDisplay","spd","ft","number","dex","con","int","wis","cha","TYPES","ADD_MONSTER","ADD_MONSTERS","ADD_SUB_MONSTER","ADD_SUB_MONSTERS","SELECT_MONSTER","ADD_HARVESTING_TABLE","ADD_HARVESTING_TABLES","ADD_TRINKET_TABLE","ADD_TRINKET_TABLES","ADD_HARVESTED_ITEM","ADD_HARVESTED_ITEMS","SELECT_HARVESTED_ITEM","ADD_CRAFTABLE_ITEM","ADD_CRAFTABLE_ITEMS","SELECT_CRAFTABLE_ITEM","MDColumn","colDisplay","listDisplayFunc","ascendingSortFunction","sortFunc","bind","sortDescending","isAscending","DefaultModularRow","style","headers","pathRoot","selectedId","history","item","innerCols","desiredId","isSelected","headerLen","h","headerObj","pathRoute","activeName","ModularDisplayList","ListItemSlot","CustomFilterSlot","height","itemSize","useHistory","simpleFilter","setSimpleFilter","sortByIdx","setSortByIdx","setSortAscending","doSimpleFilter","placeholder","value","width","onInput","onChange","itemCount","itemData","overflowX","subMon","subMonA","subMonB","title","Sources","headerRowContents","Col","ListRow","DisplayListRow","disp","selectMonster","monId","monsterId","payload","stateProps","dispatchProps","ownProps","pure","areMergedPropsEqual","next","prev","itemChanged","selectedChanged","Row","PureComponent","StatBlock","statBlock","Container","getModifierDisplayString","stat","floor","getModifier","DynamicRender","toRender","entries","dangerouslySetInnerHTML","__html","ListRender","list","ItemRender","entry","SpellcastingBlock","headerEntries","spells","will","daily","footerEntries","head","dailyKeys","keys","num","each","lead","spellKeys","spellsBlock","slots","numCount","spellLevel","foot","withRouter","location","rolledArray","setRolledArray","trinketTable","useEffect","rowsOut","rows","row","d8Roll","descriptionLine","weight","fluid","rolled","arrayCopy","unshift","result","overflowY","itemNameReference","nameOut","descriptionOut","valueOut","weightOut","craftingOut","lines","description","requiredToolNames","useText","craftingUsage","NavLink","Link","to","quantity","notes","difficultyClass","apprasialTarget","ACHPSpeed","monster","topBlock","acOut","hpOut","speedOut","SkillsAndSavesBlock","keyValueFunction","mon","inKey","simpleJoinFunction","resistImmuneFunction","note","SSE_PAIRS","header","skillsSavesEtcOut","forEach","pair","state","tabKey","setTabKey","tablesTabKey","setTablesTabKey","queryTokens","match","search","substring","typeOut","subMonster","traitsAndSpellcastingOut","actionsOut","reactionsOut","harvestingTableGroup","hasHarvestingTable","hasTrinketTable","hasTables","tab","otherSourcesOut","oSrc","sm","convertedString","Tabs","activeKey","onSelect","pathname","Tab","eventKey","disabled","HarvestingTableDisplay","TrinketTableDisplay","matchPath","path","params","xs","md","MonsterDisplayList","hItem","harvestedItem","cu","para","harvestedOutput","HarvestedItemDisplay","ModularDescription","desc","SimpleDescription","ListDescription","ItemDescription","UnhandledDescription","styleObj","listStyle","craftableItem","materialOutput","materials","mat","matItem","componentId","finalMaterialOutput","materialGrouping","rarity","requiresAttunement","crafter","displayOutput","CraftableItemDisplay","MENU","linkName","linkTarget","routePaths","exact","renderFunction","Home","Monsters","HarvestedItems","CraftableItems","NavMenu","navOutput","linkDeets","NavItem","nav","Navbar","expand","NavbarBrand","Nav","navbar","Layout","context","toggleTheme","children","App","themeState","setThemeState","newTheme","routeOpts","render","Provider","Boolean","hostname","HarvestingTable","r","HarvestingTableRow","TrinketTable","TrinketTableRow","roller","CraftableItem","attunementNote","HarvestedItem","SubStateMonster","initialState","selectedHarvestedItemId","selectedCraftableItemId","combineReducers","noChange","hTable","tTable","cItem","createStore","rootReducer","ajaxJson","fileName","Promise","resolve","reject","getJSON","Load5eMonsterFile","localKey","Storage","processedKeys","processingKeys","_meta","meta","dependencies","jdx","depKey","_copy","from5eSource","process","_init","delayedMonsters","Init","Data","dispatch","Index","subMonsters","storage","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","StrictMode","basename","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d331f99c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const themes = Object.freeze({\r\n  dark: {\r\n    styleName: \"night\",\r\n    navbarLightDark: { light: false, dark: true },\r\n    navbarColour: \"dark\",\r\n    navbarTextClass: \"text-light\",\r\n  },\r\n  light: {\r\n    styleName: \"\",\r\n    navbarLightDark: { light: true, dark: false },\r\n    navbarColour: \"light\",\r\n    navbarTextClass: \"text-dark\",\r\n  },\r\n});\r\n\r\nexport const AppTheme = React.createContext({\r\n  theme: themes.dark,\r\n  cycleTheme: (currentState) => {},\r\n});\r\n\r\nexport default AppTheme;\r\n","import \"../css/App.css\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { DiceRoll } from \"rpg-dice-roller\";\r\nimport AppTheme from \"../themeContext\";\r\n\r\n// eslint-disable-next-line\r\nArray.prototype.last =\r\n  Array.prototype.last ||\r\n  function (arg) {\r\n    if (arg !== undefined) this[this.length - 1] = arg;\r\n    else return this[this.length - 1];\r\n  };\r\n// STRING ==============================================================================================================\r\nString.prototype.uppercaseFirst =\r\n  String.prototype.uppercaseFirst ||\r\n  function () {\r\n    const str = this.toString();\r\n    if (str.length === 0) return str;\r\n    if (str.length === 1) return str.charAt(0).toUpperCase();\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\nString.prototype.lowercaseFirst =\r\n  String.prototype.lowercaseFirst ||\r\n  function () {\r\n    const str = this.toString();\r\n    if (str.length === 0) return str;\r\n    if (str.length === 1) return str.charAt(0).toLowerCase();\r\n    return str.charAt(0).toLowerCase() + str.slice(1);\r\n  };\r\n\r\n// String.prototype.toTitleCase =\r\n//   String.prototype.toTitleCase ||\r\n//   function () {\r\n//     let str = this.replace(\r\n//       /([^\\W_]+[^\\s-/]*) */g,\r\n//       (m0) => m0.charAt(0).toUpperCase() + m0.substr(1).toLowerCase()\r\n//     );\r\n\r\n//     // Require space surrounded, as title-case requires a full word on either side\r\n//     StrUtil._TITLE_LOWER_WORDS_RE = StrUtil._TITLE_LOWER_WORDS_RE = StrUtil.TITLE_LOWER_WORDS.map(\r\n//       (it) => new RegExp(`\\\\s${it}\\\\s`, \"gi\")\r\n//     );\r\n//     StrUtil._TITLE_UPPER_WORDS_RE = StrUtil._TITLE_UPPER_WORDS_RE = StrUtil.TITLE_UPPER_WORDS.map(\r\n//       (it) => new RegExp(`\\\\b${it}\\\\b`, \"g\")\r\n//     );\r\n\r\n//     const len = StrUtil.TITLE_LOWER_WORDS.length;\r\n//     for (let i = 0; i < len; i++) {\r\n//       str = str.replace(StrUtil._TITLE_LOWER_WORDS_RE[i], (txt) =>\r\n//         txt.toLowerCase()\r\n//       );\r\n//     }\r\n\r\n//     const len1 = StrUtil.TITLE_UPPER_WORDS.length;\r\n//     for (let i = 0; i < len1; i++) {\r\n//       str = str.replace(\r\n//         StrUtil._TITLE_UPPER_WORDS_RE[i],\r\n//         StrUtil.TITLE_UPPER_WORDS[i].toUpperCase()\r\n//       );\r\n//     }\r\n\r\n//     return str;\r\n//   };\r\n\r\nString.prototype.toSentenceCase =\r\n  String.prototype.toSentenceCase ||\r\n  function () {\r\n    const out = [];\r\n    const re = /([^.!?]+)([.!?]\\s*|$)/gi;\r\n    let m;\r\n    do {\r\n      m = re.exec(this);\r\n      if (m) {\r\n        out.push(m[0].toLowerCase().uppercaseFirst());\r\n      }\r\n    } while (m);\r\n    return out.join(\"\");\r\n  };\r\n\r\nString.prototype.toSpellCase =\r\n  String.prototype.toSpellCase ||\r\n  function () {\r\n    return this.toLowerCase().replace(\r\n      /(^|of )(bigby|otiluke|mordenkainen|evard|hadar|agathys|abi-dalzim|aganazzar|drawmij|leomund|maximilian|melf|nystul|otto|rary|snilloc|tasha|tenser|jim)('s|$| )/g,\r\n      (...m) => `${m[1]}${m[2].toTitleCase()}${m[3]}`\r\n    );\r\n  };\r\n\r\nString.prototype.toCamelCase =\r\n  String.prototype.toCamelCase ||\r\n  function () {\r\n    return this.split(\" \")\r\n      .map((word, index) => {\r\n        if (index === 0) return word.toLowerCase();\r\n        return `${word.charAt(0).toUpperCase()}${word.slice(1).toLowerCase()}`;\r\n      })\r\n      .join(\"\");\r\n  };\r\n\r\nString.prototype.escapeQuotes =\r\n  String.prototype.escapeQuotes ||\r\n  function () {\r\n    return this.replace(/'/g, `&apos;`).replace(/\"/g, `&quot;`);\r\n  };\r\n\r\nString.prototype.qq =\r\n  String.prototype.qq ||\r\n  function () {\r\n    return this.escapeQuotes();\r\n  };\r\n\r\nString.prototype.unescapeQuotes =\r\n  String.prototype.unescapeQuotes ||\r\n  function () {\r\n    return this.replace(/&apos;/g, `'`).replace(/&quot;/g, `\"`);\r\n  };\r\n\r\nString.prototype.uq =\r\n  String.prototype.uq ||\r\n  function () {\r\n    return this.unescapeQuotes();\r\n  };\r\n\r\nString.prototype.encodeApos =\r\n  String.prototype.encodeApos ||\r\n  function () {\r\n    return this.replace(/'/g, `%27`);\r\n  };\r\n\r\n/**\r\n * Calculates the Damerau-Levenshtein distance between two strings.\r\n * https://gist.github.com/IceCreamYou/8396172\r\n */\r\nString.prototype.distance =\r\n  String.prototype.distance ||\r\n  function (target) {\r\n    let source = this;\r\n    let i;\r\n    let j;\r\n    if (!source) return target ? target.length : 0;\r\n    else if (!target) return source.length;\r\n\r\n    const m = source.length;\r\n    const n = target.length;\r\n    const INF = m + n;\r\n    const score = new Array(m + 2);\r\n    const sd = {};\r\n    for (i = 0; i < m + 2; i++) score[i] = new Array(n + 2);\r\n    score[0][0] = INF;\r\n    for (i = 0; i <= m; i++) {\r\n      score[i + 1][1] = i;\r\n      score[i + 1][0] = INF;\r\n      sd[source[i]] = 0;\r\n    }\r\n    for (j = 0; j <= n; j++) {\r\n      score[1][j + 1] = j;\r\n      score[0][j + 1] = INF;\r\n      sd[target[j]] = 0;\r\n    }\r\n\r\n    for (i = 1; i <= m; i++) {\r\n      let DB = 0;\r\n      for (j = 1; j <= n; j++) {\r\n        const i1 = sd[target[j - 1]];\r\n        const j1 = DB;\r\n        if (source[i - 1] === target[j - 1]) {\r\n          score[i + 1][j + 1] = score[i][j];\r\n          DB = j;\r\n        } else {\r\n          score[i + 1][j + 1] =\r\n            Math.min(score[i][j], Math.min(score[i + 1][j], score[i][j + 1])) +\r\n            1;\r\n        }\r\n        score[i + 1][j + 1] = Math.min(\r\n          score[i + 1][j + 1],\r\n          score[i1] ? score[i1][j1] + (i - i1 - 1) + 1 + (j - j1 - 1) : Infinity\r\n        );\r\n      }\r\n      sd[source[i - 1]] = i;\r\n    }\r\n    return score[m + 1][n + 1];\r\n  };\r\n\r\nString.prototype.isNumeric =\r\n  String.prototype.isNumeric ||\r\n  function () {\r\n    return !isNaN(parseFloat(this)) && isFinite(this);\r\n  };\r\n\r\nString.prototype.last =\r\n  String.prototype.last ||\r\n  function () {\r\n    return this[this.length - 1];\r\n  };\r\n\r\nString.prototype.escapeRegexp =\r\n  String.prototype.escapeRegexp ||\r\n  function () {\r\n    return this.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\r\n  };\r\n\r\nString.prototype.toUrlified =\r\n  String.prototype.toUrlified ||\r\n  function () {\r\n    return encodeURIComponent(this.toLowerCase()).toLowerCase();\r\n  };\r\n\r\nString.prototype.toChunks =\r\n  String.prototype.toChunks ||\r\n  function (size) {\r\n    // https://stackoverflow.com/a/29202760/5987433\r\n    const numChunks = Math.ceil(this.length / size);\r\n    const chunks = new Array(numChunks);\r\n    for (let i = 0, o = 0; i < numChunks; ++i, o += size)\r\n      chunks[i] = this.substr(o, size);\r\n    return chunks;\r\n  };\r\n\r\nArray.prototype.joinConjunct =\r\n  Array.prototype.joinConjunct ||\r\n  function (joiner, lastJoiner, nonOxford) {\r\n    if (this.length === 0) return \"\";\r\n    if (this.length === 1) return this[0];\r\n    if (this.length === 2) return this.join(lastJoiner);\r\n    else {\r\n      let outStr = \"\";\r\n      for (let i = 0; i < this.length; ++i) {\r\n        outStr += this[i];\r\n        if (i < this.length - 2) outStr += joiner;\r\n        else if (i === this.length - 2)\r\n          outStr += `${\r\n            !nonOxford && this.length > 2 ? joiner.trim() : \"\"\r\n          }${lastJoiner}`;\r\n      }\r\n      return outStr;\r\n    }\r\n  };\r\n\r\nexport function sortAscending(a, b) {\r\n  let x = a.toLowerCase();\r\n  let y = b.toLowerCase();\r\n\r\n  if (y < x) {\r\n    return 1;\r\n  }\r\n  if (x < y) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nconst splitFirstSpace = function (string) {\r\n  const firstIndex = string.indexOf(\" \");\r\n  return firstIndex === -1\r\n    ? [string, \"\"]\r\n    : [string.substr(0, firstIndex), string.substr(firstIndex + 1)];\r\n};\r\n\r\nfunction _splitByTagsBase(leadingCharacter) {\r\n  return function (string) {\r\n    let tagDepth = 0;\r\n    let char, char2;\r\n    const out = [];\r\n    let curStr = \"\";\r\n    let isLastOpen = false;\r\n\r\n    const len = string.length;\r\n    for (let i = 0; i < len; ++i) {\r\n      char = string[i];\r\n      char2 = string[i + 1];\r\n\r\n      switch (char) {\r\n        case \"{\":\r\n          isLastOpen = true;\r\n          if (char2 === leadingCharacter) {\r\n            if (tagDepth++ > 0) {\r\n              curStr += \"{\";\r\n            } else {\r\n              out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n              curStr = `{${leadingCharacter}`;\r\n              ++i;\r\n            }\r\n          } else curStr += \"{\";\r\n          break;\r\n\r\n        case \"}\":\r\n          isLastOpen = false;\r\n          curStr += \"}\";\r\n          if (tagDepth !== 0 && --tagDepth === 0) {\r\n            out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n            curStr = \"\";\r\n          }\r\n          break;\r\n\r\n        case leadingCharacter: {\r\n          if (!isLastOpen) curStr += \"<VE_LEAD>\";\r\n          else curStr += leadingCharacter;\r\n          break;\r\n        }\r\n\r\n        default:\r\n          isLastOpen = false;\r\n          curStr += char;\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (curStr) out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n\r\n    return out;\r\n  };\r\n}\r\n\r\nconst splitByTags = _splitByTagsBase(\"@\");\r\n\r\nconst attackTagToFull = function (tagStr) {\r\n  function renderTag(tags) {\r\n    return `${\r\n      tags.includes(\"m\")\r\n        ? \"Melee \"\r\n        : tags.includes(\"r\")\r\n        ? \"Ranged \"\r\n        : tags.includes(\"g\")\r\n        ? \"Magical \"\r\n        : tags.includes(\"a\")\r\n        ? \"Area \"\r\n        : \"\"\r\n    }${tags.includes(\"w\") ? \"Weapon \" : tags.includes(\"s\") ? \"Spell \" : \"\"}`;\r\n  }\r\n\r\n  const tagGroups = tagStr\r\n    .toLowerCase()\r\n    .split(\",\")\r\n    .map((it) => it.trim())\r\n    .filter((it) => it)\r\n    .map((it) => it.split(\"\"));\r\n  if (tagGroups.length > 1) {\r\n    const seen = new Set(tagGroups.last());\r\n    for (let i = tagGroups.length - 2; i >= 0; --i) {\r\n      tagGroups[i] = tagGroups[i].filter((it) => {\r\n        const out = !seen.has(it);\r\n        seen.add(it);\r\n        return out;\r\n      });\r\n    }\r\n  }\r\n  return `${tagGroups.map((it) => renderTag(it)).join(\" or \")}Attack:`;\r\n};\r\n\r\nconst _splitByPipeBase = function (leadingCharacter) {\r\n  return function (string) {\r\n    let tagDepth = 0;\r\n    let char, char2;\r\n    const out = [];\r\n    let curStr = \"\";\r\n\r\n    const len = string.length;\r\n    for (let i = 0; i < len; ++i) {\r\n      char = string[i];\r\n      char2 = string[i + 1];\r\n\r\n      switch (char) {\r\n        case \"{\":\r\n          if (char2 === leadingCharacter) tagDepth++;\r\n          curStr += \"{\";\r\n\r\n          break;\r\n\r\n        case \"}\":\r\n          if (tagDepth) tagDepth--;\r\n          curStr += \"}\";\r\n\r\n          break;\r\n\r\n        case \"|\": {\r\n          if (tagDepth) curStr += \"|\";\r\n          else {\r\n            out.push(curStr);\r\n            curStr = \"\";\r\n          }\r\n          break;\r\n        }\r\n\r\n        default: {\r\n          curStr += char;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (curStr) out.push(curStr);\r\n    return out;\r\n  };\r\n};\r\n\r\nconst splitTagByPipe = _splitByPipeBase(\"@\");\r\n\r\nconst _stripTagLayer = function (str) {\r\n  if (str.includes(\"{@\")) {\r\n    const tagSplit = splitByTags(str);\r\n    return tagSplit\r\n      .filter((it) => it)\r\n      .map((it) => {\r\n        if (it.startsWith(\"{@\")) {\r\n          let [tag, text] = splitFirstSpace(it.slice(1, -1));\r\n          text = text.replace(/<\\$([^$]+)\\$>/gi, \"\"); // remove any variable tags\r\n          switch (tag) {\r\n            case \"@b\":\r\n            case \"@bold\":\r\n            case \"@i\":\r\n            case \"@italic\":\r\n            case \"@s\":\r\n            case \"@strike\":\r\n            case \"@u\":\r\n            case \"@underline\":\r\n              return text;\r\n\r\n            case \"@h\":\r\n              return \"Hit: \";\r\n\r\n            case \"@dc\":\r\n              return `DC ${text}`;\r\n\r\n            case \"@atk\":\r\n              return attackTagToFull(text);\r\n\r\n            case \"@chance\":\r\n            case \"@d20\":\r\n            case \"@damage\":\r\n            case \"@dice\":\r\n            case \"@hit\":\r\n            case \"@recharge\": {\r\n              const [rollText, displayText] = splitTagByPipe(text);\r\n              switch (tag) {\r\n                case \"@damage\":\r\n                case \"@dice\": {\r\n                  return displayText || rollText.replace(/;/g, \"/\");\r\n                }\r\n                case \"@d20\":\r\n                case \"@hit\": {\r\n                  return (\r\n                    displayText ||\r\n                    (() => {\r\n                      const n = Number(rollText);\r\n                      if (isNaN(n)) {\r\n                        throw new Error(\r\n                          `Could not parse \"${rollText}\" as a number!`\r\n                        );\r\n                      }\r\n                      return `${n >= 0 ? \"+\" : \"\"}${n}`;\r\n                    })()\r\n                  );\r\n                }\r\n                case \"@recharge\": {\r\n                  const asNum = Number(rollText || 6);\r\n                  if (isNaN(asNum)) {\r\n                    throw new Error(\r\n                      `Could not parse \"${rollText}\" as a number!`\r\n                    );\r\n                  }\r\n                  return `(Recharge ${asNum}${asNum < 6 ? `\\u20136` : \"\"})`;\r\n                }\r\n                case \"@chance\": {\r\n                  return displayText || `${rollText} percent`;\r\n                }\r\n                default:\r\n                  throw new Error(`Unhandled tag: ${tag}`);\r\n              }\r\n            }\r\n\r\n            case \"@comic\":\r\n            case \"@comicH1\":\r\n            case \"@comicH2\":\r\n            case \"@comicH3\":\r\n            case \"@comicH4\":\r\n            case \"@comicNote\":\r\n            case \"@note\":\r\n            case \"@sense\":\r\n            case \"@skill\": {\r\n              return text;\r\n            }\r\n\r\n            case \"@5etools\":\r\n            case \"@adventure\":\r\n            case \"@book\":\r\n            case \"@filter\":\r\n            case \"@footnote\":\r\n            case \"@link\":\r\n            case \"@scaledice\":\r\n            case \"@scaledamage\":\r\n            case \"@loader\":\r\n            case \"@color\":\r\n            case \"@highlight\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts[0];\r\n            }\r\n\r\n            case \"@area\": {\r\n              const [\r\n                compactText,\r\n                /*areaId,*/ flags,\r\n                //...others\r\n              ] = splitTagByPipe(text);\r\n\r\n              return flags && flags.includes(\"x\")\r\n                ? compactText\r\n                : `${\r\n                    flags && flags.includes(\"u\") ? \"A\" : \"a\"\r\n                  }rea ${compactText}`;\r\n            }\r\n\r\n            case \"@action\":\r\n            case \"@background\":\r\n            case \"@boon\":\r\n            case \"@class\":\r\n            case \"@condition\":\r\n            case \"@creature\":\r\n            case \"@cult\":\r\n            case \"@disease\":\r\n            case \"@feat\":\r\n            case \"@hazard\":\r\n            case \"@item\":\r\n            case \"@language\":\r\n            case \"@object\":\r\n            case \"@optfeature\":\r\n            case \"@psionic\":\r\n            case \"@race\":\r\n            case \"@reward\":\r\n            case \"@vehicle\":\r\n            case \"@spell\":\r\n            case \"@status\":\r\n            case \"@table\":\r\n            case \"@trap\":\r\n            case \"@variantrule\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 3 ? parts[2] : parts[0];\r\n            }\r\n\r\n            case \"@deity\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 4 ? parts[3] : parts[0];\r\n            }\r\n\r\n            case \"@classFeature\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 6 ? parts[5] : parts[0];\r\n            }\r\n\r\n            case \"@subclassFeature\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 8 ? parts[7] : parts[0];\r\n            }\r\n\r\n            case \"@homebrew\": {\r\n              const [newText, oldText] = splitTagByPipe(text);\r\n              if (newText && oldText) {\r\n                return `${newText} [this is a homebrew addition, replacing the following: \"${oldText}\"]`;\r\n              } else if (newText) {\r\n                return `${newText} [this is a homebrew addition]`;\r\n              } else if (oldText) {\r\n                return `[the following text has been removed due to homebrew: ${oldText}]`;\r\n              } else\r\n                throw new Error(`Homebrew tag had neither old nor new text!`);\r\n            }\r\n\r\n            default:\r\n              throw new Error(`Unhandled tag: \"${tag}\"`);\r\n          }\r\n        } else return it;\r\n      })\r\n      .join(\"\");\r\n  }\r\n  return str;\r\n};\r\n\r\nexport function stripTags(str) {\r\n  try {\r\n    if (!str) return str;\r\n    let nxtStr = _stripTagLayer(str);\r\n    while (nxtStr.length !== str.length) {\r\n      str = nxtStr;\r\n      nxtStr = _stripTagLayer(str);\r\n    }\r\n    return nxtStr;\r\n  } catch (err) {\r\n    console.error(`On [${str}]: ${err}`);\r\n    return str;\r\n  }\r\n}\r\n\r\nfunction execDiceRegex(line) {\r\n  return /\\{@dice (.*?)\\}/gi.exec(line);\r\n}\r\n\r\nfunction stringToken(cnt) {\r\n  return {\r\n    type: \"string\",\r\n    cnt,\r\n  };\r\n}\r\nfunction rollableToken(cnt) {\r\n  return {\r\n    type: \"rollable\",\r\n    cnt,\r\n  };\r\n}\r\n\r\nexport function tokeniseByTags(inputString) {\r\n  const outputTokens = [];\r\n  let workingLine = inputString;\r\n\r\n  let matches = execDiceRegex(workingLine);\r\n  let matchIndex = -1;\r\n  let preString, postString;\r\n\r\n  if (matches === null) {\r\n    outputTokens.push(stringToken(workingLine));\r\n    return outputTokens;\r\n  }\r\n\r\n  while (matches !== null) {\r\n    // index of the match\r\n    matchIndex = workingLine.indexOf(matches[0]);\r\n    // split up the string\r\n    preString = workingLine.substr(0, matchIndex);\r\n    const formula = matches[1];\r\n    postString = workingLine.substr(matchIndex + matches[0].length);\r\n\r\n    outputTokens.push(stringToken(preString));\r\n    outputTokens.push(rollableToken(formula));\r\n\r\n    workingLine = postString;\r\n    matches = execDiceRegex(workingLine);\r\n  }\r\n\r\n  outputTokens.push(stringToken(workingLine));\r\n\r\n  return outputTokens;\r\n}\r\n\r\nexport function RollableSpan(props) {\r\n  const { formula } = props;\r\n  let [rolledResult, setRolledResult] = useState(\"\");\r\n  const appTheme = useContext(AppTheme);\r\n\r\n  return (\r\n    <span\r\n      onClick={() => {\r\n        const res = new DiceRoll(formula).total;\r\n        setRolledResult(res);\r\n      }}\r\n      className={`clickable ${appTheme.theme.styleName}`}\r\n    >\r\n      {rolledResult !== \"\" ? `[${rolledResult}]` : formula}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function rollableTokenisedLine(line) {\r\n  return tokeniseByTags(line).map((tok, idx) => {\r\n    switch (tok.type) {\r\n      case \"string\":\r\n        return <span key={idx}>{tok.cnt}</span>;\r\n      case \"rollable\":\r\n        return <RollableSpan key={idx} formula={tok.cnt} />;\r\n    }\r\n  });\r\n}\r\n\r\nfunction execTokenRegex(line) {\r\n  return /\\{@(.*?)\\}/gi.exec(line);\r\n}\r\n\r\nexport function convertToHTML(inStr) {\r\n  let outputString = \"\";\r\n  let workingLine = inStr;\r\n\r\n  let matches = execTokenRegex(workingLine);\r\n  let matchIndex = -1;\r\n  let preString, postString;\r\n\r\n  if (matches === null) {\r\n    return inStr;\r\n  }\r\n\r\n  while (matches !== null) {\r\n    // index of the match\r\n    matchIndex = workingLine.indexOf(matches[0]);\r\n    // split up the string\r\n    preString = workingLine.substr(0, matchIndex);\r\n    // const formula = matches[1];\r\n    postString = workingLine.substr(matchIndex + matches[0].length);\r\n\r\n    // outputTokens.push(stringToken(preString));\r\n    outputString += preString;\r\n\r\n    let [tag, pipedText] = splitFirstSpace(matches[1]);\r\n    outputString += generateHTMLByTag(tag, pipedText);\r\n    // outputTokens.push(rollableToken(formula));\r\n\r\n    workingLine = postString;\r\n    matches = execTokenRegex(workingLine);\r\n  }\r\n\r\n  outputString += postString;\r\n\r\n  return outputString;\r\n}\r\n\r\nfunction generateHTMLByTag(tag, pipedText) {\r\n  tag = `@${tag}`;\r\n  switch (tag) {\r\n    case \"@b\":\r\n    case \"@bold\":\r\n      return `<b>${pipedText}</b>`;\r\n    case \"@i\":\r\n    case \"@italic\":\r\n    case \"@condition\":\r\n      return `<i>${pipedText}</i>`;\r\n    case \"@s\":\r\n    case \"@strike\":\r\n      return `<s>${pipedText}</s>`;\r\n    case \"@u\":\r\n    case \"@underline\":\r\n      return `<u>${pipedText}</u>`;\r\n    case \"@note\":\r\n      return `<i class=\"ve-muted\">${pipedText}</i>`;\r\n    case \"@atk\":\r\n      return `<i>${attackTagToFull(pipedText)}</i>`;\r\n    case \"@h\":\r\n      return `<i>Hit:</i> `;\r\n    case \"@color\": {\r\n      const [toDisplay, color] = splitTagByPipe(pipedText);\r\n      const scrubbedColor = color; // BrewUtil.getValidColor(color);\r\n\r\n      return `<span style=\"color: #${scrubbedColor}\">${toDisplay}</span>`;\r\n    }\r\n    case \"@highlight\": {\r\n      const [toDisplay, color] = splitTagByPipe(pipedText);\r\n      const scrubbedColor = color; // ? BrewUtil.getValidColor(color) : null;\r\n\r\n      return (\r\n        (scrubbedColor\r\n          ? `<span style=\"background-color: #${scrubbedColor}\">`\r\n          : `<span class=\"rd__highlight\">`) +\r\n        toDisplay +\r\n        `</span>`\r\n      );\r\n    }\r\n\r\n    // Comic styles ////////////////////////////////////////////////////////////////////////////////////\r\n    case \"@comic\":\r\n      return `<span class=\"rd__comic\">` + pipedText + `</span>`;\r\n    case \"@comicH1\":\r\n      return `<span class=\"rd__comic rd__comic--h1\">` + pipedText + `</span>`;\r\n    case \"@comicH2\":\r\n      return `<span class=\"rd__comic rd__comic--h2\">` + pipedText + `</span>`;\r\n    case \"@comicH3\":\r\n      return `<span class=\"rd__comic rd__comic--h3\">` + pipedText + `</span>`;\r\n    case \"@comicH4\":\r\n      return `<span class=\"rd__comic rd__comic--h4\">` + pipedText + `</span>`;\r\n    case \"@comicNote\":\r\n      return `<span class=\"rd__comic rd__comic--note\">` + pipedText + `</span>`;\r\n\r\n    // DCs /////////////////////////////////////////////////////////////////////////////////////////////\r\n    case \"@dc\": {\r\n      return `DC <span class=\"rd__dc\">${pipedText}</span>`;\r\n    }\r\n\r\n    // DICE ////////////////////////////////////////////////////////////////////////////////////////////\r\n    case \"@dice\":\r\n    case \"@damage\":\r\n    case \"@hit\":\r\n    case \"@d20\":\r\n    case \"@chance\":\r\n    case \"@recharge\": {\r\n      // const fauxEntry = {\r\n      // \ttype: \"dice\",\r\n      // \trollable: true,\r\n      // };\r\n      const [rollText, displayText, name, ...others] = splitTagByPipe(\r\n        pipedText\r\n      );\r\n      // if (displayText) fauxEntry.displayText = displayText;\r\n      // if (name) fauxEntry.name = name;\r\n\r\n      const diceForm = {};\r\n\r\n      switch (tag) {\r\n        case \"@dice\": {\r\n          diceForm.subType = \"dice\";\r\n          diceForm.toRoll = rollText;\r\n          diceForm.displayText = displayText || rollText;\r\n          break;\r\n        }\r\n        case \"@damage\": {\r\n          diceForm.subType = \"damage\";\r\n          diceForm.toRoll = rollText;\r\n          diceForm.displayText = displayText || rollText;\r\n          break;\r\n        }\r\n        case \"@d20\":\r\n        case \"@hit\": {\r\n          diceForm.subType = \"d20\";\r\n          // \t\t// format: {@hit +1} or {@hit -2}\r\n          const n = Number(rollText);\r\n          const mod = `${n >= 0 ? \"+\" : \"\"}${n}`;\r\n          // \t\tfauxEntry.displayText = fauxEntry.displayText || mod;\r\n          // \t\tfauxEntry.toRoll = `1d20${mod}`;\r\n          // \t\tfauxEntry.subType = \"d20\";\r\n          // \t\tfauxEntry.d20mod = mod;\r\n          // \t\tthis._recursiveRender(fauxEntry, textStack, meta);\r\n          diceForm.toRoll = `1d20${mod}`;\r\n          diceForm.displayText = displayText || mod;\r\n          break;\r\n        }\r\n        case \"@chance\": {\r\n          // \t\t// format: {@chance 25|display text|rollbox rollee name}\r\n          diceForm.subType = \"chance\";\r\n          diceForm.toRoll = `1d100`;\r\n          diceForm.successThresh = Number(rollText);\r\n          diceForm.displayText = displayText || rollText;\r\n          break;\r\n        }\r\n        case \"@recharge\": {\r\n          // \t\t// format: {@recharge 4|flags}\r\n          diceForm.subType = \"recharge\";\r\n\r\n          const flags = displayText ? displayText.split(\"\") : null; // \"m\" for \"minimal\" = no brackets\r\n          diceForm.toRoll = `1d6`;\r\n          const asNum = Number(rollText || 6);\r\n\r\n          diceForm.successThresh = 7 - asNum;\r\n          diceForm.successMax = 6;\r\n          // \t\ttextStack[0] += `${flags && flags.includes(\"m\") ? \"\" : \"(\"}Recharge `;\r\n          diceForm.displayText = `${asNum}${asNum < 6 ? `\\u20136` : \"\"}`;\r\n          // \t\tthis._recursiveRender(fauxEntry, textStack, meta);\r\n          // \t\ttextStack[0] += `${flags && flags.includes(\"m\") ? \"\" : \")\"}`;\r\n          break;\r\n        }\r\n      }\r\n\r\n      diceForm.displayText = diceForm.displayText || rollText;\r\n      // return `<span class='clickable' onmousedown='event.preventDefault()' onclick=\"rollElement(event.target)\" data-dice-form='${JSON.stringify(\r\n      //   diceForm\r\n      // ).escapeQuotes()}'>${diceForm.displayText}</span>`;\r\n\r\n      return renderRollableSubType(diceForm);\r\n    }\r\n\r\n    case \"@filter\":\r\n    case \"@link\":\r\n    case \"@5etools\":\r\n    case \"@footnote\": {\r\n      // format: {@filter Warlock Spells|spells|level=1;2|class=Warlock}\r\n      const [displayText, ...others] = splitTagByPipe(pipedText);\r\n      return displayText;\r\n    }\r\n    case \"@skill\":\r\n    case \"@sense\": {\r\n      const [name, displayText] = splitTagByPipe(pipedText);\r\n      return `<span class=\"help--hover\">${displayText || name}</span>`;\r\n    }\r\n    case \"@area\":\r\n    case \"@loader\":\r\n    case \"@book\":\r\n    case \"@adventure\":\r\n    case \"@deity\":\r\n    case \"@classFeature\":\r\n    case \"@subclassFeature\":\r\n    case \"@homebrew\":\r\n    case \"@scaledice\":\r\n    case \"@scaledamage\": {\r\n      return `{@${tag} ${pipedText}}`;\r\n    }\r\n\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return `[${tag} <> ${pipedText}]`;\r\n}\r\n\r\nexport function renderRollableSubType(diceForm) {\r\n  let builtString = `<span class='clickable' onmousedown='event.preventDefault()' onclick=\"rollElement(event.target)\" data-dice-form='${JSON.stringify(\r\n    diceForm\r\n  ).escapeQuotes()}'>${diceForm.displayText}</span>`;\r\n\r\n  switch (diceForm.subType) {\r\n    case \"recharge\":\r\n      builtString = `(Recharge ${builtString})`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return builtString;\r\n}\r\n\r\nexport function rollElement(ele) {\r\n  const $ele = $(ele);\r\n  const diceForm = $ele.data(\"dice-form\");\r\n\r\n  const roll = new DiceRoll(diceForm.toRoll);\r\n\r\n  switch (diceForm.subType) {\r\n    case \"recharge\":\r\n      $ele.html(\r\n        `[${roll.total} -> ${\r\n          roll.total >= 7 - diceForm.successThresh\r\n            ? \"recharged!\"\r\n            : \"not this time\"\r\n        }]`\r\n      );\r\n      break;\r\n    case \"chance\":\r\n      $ele.html(\r\n        `[${roll.total} -> ${\r\n          roll.total <= diceForm.successThresh ? \"success\" : \"failure\"\r\n        }]`\r\n      );\r\n      break;\r\n    default:\r\n      $ele.html(`[${roll.total}]`);\r\n      break;\r\n  }\r\n\r\n  console.log(roll.output);\r\n}\r\nconst $ = window.$;\r\nwindow.rollElement = rollElement;\r\n","// monsters\r\nexport const getMonsterDict = (store) => store.monsters.monsterDict;\r\nexport const getSubMonsterDict = (store) => store.monsters.subMonsterDict;\r\nexport const getSelectedMonsterId = (store) => store.monsters.selectedMonsterId;\r\n\r\nexport const getHarvestingTableDict = (store) =>\r\n  store.tables.harvestingTableDict;\r\nexport const getTrinketTableDict = (store) => store.tables.trinketTableDict;\r\n\r\nexport const getHarvestedItemDict = (store) => store.items.harvestedItemDict;\r\nexport const getSelectedHarvestedItemId = (store) =>\r\n  store.items.selectedHarvestedItemId;\r\n\r\nexport const getCraftableItemDict = (store) => store.items.craftableItemDict;\r\nexport const getSelectedCraftableItemId = (store) =>\r\n  store.items.selectedCraftableItemId;\r\n","import React from \"react\";\r\nimport { fileSaveAs } from \"../utility/saveFile\";\r\n// import Storage from \"../utility/StorageUtil\";\r\nimport { sortAscending } from \"../utility/stringUtil\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getSubMonsterDict,\r\n  getHarvestedItemDict,\r\n  getHarvestingTableDict,\r\n  getTrinketTableDict,\r\n  getCraftableItemDict,\r\n} from \"../redux/selectors\";\r\n\r\nexport default connect((store) => ({\r\n  subStateMonsterDict: getSubMonsterDict(store),\r\n  harvestedItemDict: getHarvestedItemDict(store),\r\n  harvestingTableDict: getHarvestingTableDict(store),\r\n  trinketTableDict: getTrinketTableDict(store),\r\n  craftableItemDict: getCraftableItemDict(store),\r\n}))(Home);\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n      <div>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n\r\n            let monsters = Object.values(props.subStateMonsterDict);\r\n            monsters.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            let harvestedItems = Object.values(props.harvestedItemDict);\r\n            harvestedItems.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            let harvestingTables = Object.values(props.harvestingTableDict);\r\n            harvestingTables.sort((a, b) => sortAscending(a.name, b.name));\r\n\r\n            let trinketTables = Object.values(props.trinketTableDict);\r\n            trinketTables.sort((a, b) =>\r\n              sortAscending(a.trinketTableType, b.trinketTableType)\r\n            );\r\n\r\n            let craftableItems = Object.values(props.craftableItemDict);\r\n            craftableItems.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            fileSaveAs(\r\n              \"system-state.json\",\r\n              JSON.stringify({\r\n                monsters: monsters,\r\n                harvestingTables: harvestingTables,\r\n                harvestedItems: harvestedItems,\r\n                trinketTables: trinketTables,\r\n                craftableItems: craftableItems,\r\n              })\r\n            );\r\n          }}\r\n        >\r\n          Save State\r\n        </button>\r\n      </div>\r\n      {/* <div>\r\n        <input type=\"text\" style={{ width: \"100%\", height: \"4em\" }} />\r\n      </div> */}\r\n      {/* <div>{JSON.stringify(props)}</div> */}\r\n      {/* <div>{JSON.stringify(process.env)}</div> */}\r\n    </div>\r\n  );\r\n}\r\n","export function fileSaveAs(filename, fileContent) {\r\n    var link = document.createElement(\"a\");\r\n    link.download = filename;\r\n    link.href =\r\n        \"data:text/plain;charset=utf-8,\" + encodeURIComponent(fileContent);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n","export const CARD_SIZES = [\"None\", \"Small\", \"Medium\", \"Large\"];\r\n","export default class BaseDataItem {\r\n  constructor(name, source) {\r\n    this.name = name;\r\n    this.source = source;\r\n  }\r\n\r\n  get id() {\r\n    return BaseDataItem.convertToId(this.name, this.source);\r\n  }\r\n\r\n  doSimpleFilter(filterString) {\r\n    return this.name.toLowerCase().includes(filterString.toLowerCase());\r\n  }\r\n\r\n  static convertToId(name, source) {\r\n    let outString = name.replace(/[\\s'\\-()/]/g, \"\");\r\n    if (source) outString += `_${source}`;\r\n    return outString.toLowerCase();\r\n  }\r\n}\r\n","import { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class Monster extends BaseDataItem {\r\n  static from5eSource(fiveEState) {\r\n    let feType = null;\r\n\r\n    switch (typeof fiveEState.type) {\r\n      case \"string\":\r\n        feType = new CreatureType({ type: fiveEState.type });\r\n        break;\r\n      case \"object\":\r\n        let { type, tags, swarmSize } = fiveEState.type;\r\n\r\n        let inObj = {\r\n          type: type,\r\n          swarmSize: swarmSize,\r\n        };\r\n        if (tags) {\r\n          inObj.tags = tags.map((tg) =>\r\n            typeof tg === \"string\" ? { tag: tg, prefix: \"\" } : tg\r\n          );\r\n        }\r\n\r\n        feType = new CreatureType(inObj);\r\n\r\n        break;\r\n      default:\r\n        console.log(\r\n          `Unhandled creatureType type: ${typeof fiveEState.type} => ${\r\n            fiveEState.type\r\n          } of ${fiveEState.name}`\r\n        );\r\n        break;\r\n    }\r\n\r\n    let feCR = null;\r\n\r\n    switch (typeof fiveEState.cr) {\r\n      case \"string\":\r\n        feCR = new ChallengeRating({ cr: fiveEState.cr });\r\n        break;\r\n      case \"object\":\r\n        feCR = new ChallengeRating(fiveEState.cr);\r\n        break;\r\n      case \"undefined\":\r\n        feCR = new ChallengeRating({ cr: \"-\" });\r\n        break;\r\n      default:\r\n        console.log(\r\n          `Unhandled CR type: ${typeof fiveEState.cr} => ${fiveEState.cr} of ${\r\n            fiveEState.name\r\n          }`\r\n        );\r\n        break;\r\n    }\r\n\r\n    let feACLines = [];\r\n    for (let i = 0; i < fiveEState.ac.length; ++i) {\r\n      let line = fiveEState.ac[i];\r\n      let acObj = {};\r\n\r\n      switch (typeof line) {\r\n        case \"number\":\r\n          acObj.ac = line;\r\n          break;\r\n        case \"string\":\r\n          acObj.ac = Number.parseInt(line);\r\n          break;\r\n        case \"object\":\r\n          acObj.ac = Number.parseInt(line.ac);\r\n          acObj.from = line.from;\r\n          acObj.condition = line.condition;\r\n          break;\r\n        default:\r\n          console.log(\r\n            `Unhandled AC type: ${typeof fiveEState.ac} => ${\r\n              fiveEState.ac\r\n            } of ${fiveEState.name}`\r\n          );\r\n          break;\r\n      }\r\n\r\n      feACLines.push(new ArmorClass(acObj));\r\n    }\r\n\r\n    let feAlignment = [];\r\n    if (!fiveEState.alignment) {\r\n      // nothing\r\n    } else if (fiveEState.alignment.every((ent) => typeof ent === \"string\")) {\r\n      feAlignment.push(new Alignment({ alignment: fiveEState.alignment }));\r\n    } else {\r\n      feAlignment = fiveEState.alignment.map((ali) => new Alignment(ali));\r\n    }\r\n\r\n    return new Monster({\r\n      name: fiveEState.name, //   name,\r\n      referenceCardSize: 0, // referenceCardSize,\r\n      source: fiveEState.source, // source,\r\n      otherSources: fiveEState.otherSources, // otherSources,\r\n      creatureSize: fiveEState.size, // creatureSize,\r\n      creatureType: feType, // creatureType,\r\n      stats: new StatsBlock(\r\n        fiveEState\r\n        // fiveEState.str,\r\n        // fiveEState.dex,\r\n        // fiveEState.con,\r\n        // fiveEState.int,\r\n        // fiveEState.wis,\r\n        // fiveEState.cha\r\n      ), // stats,\r\n      armorClass: feACLines, // armorClass,\r\n      challengeRating: feCR, // challengeRating,\r\n      health: new HealthBlock(fiveEState.hp), // health,\r\n      passivePerc: fiveEState.passive, // passivePerc,\r\n      languages: fiveEState.languages, // languages,\r\n      speed: new SpeedBlock({\r\n        walk: fiveEState.speed.walk,\r\n        fly: fiveEState.speed.fly,\r\n        swim: fiveEState.speed.swim,\r\n        climb: fiveEState.speed.climb,\r\n        burrow: fiveEState.speed.burrow,\r\n        canHover: fiveEState.speed.canHover,\r\n      }), // speed,\r\n      saves: fiveEState.save, // saves,\r\n      skills: fiveEState.skill, // skills,\r\n      senses: fiveEState.senses, // senses,\r\n      alignment: feAlignment, // alignment\r\n      resistances: fiveEState.resist, // resistances\r\n      immunities: fiveEState.immune, // immunity\r\n      conditionImmunities: fiveEState.conditionImmune, // conditionImmunities\r\n      traits: fiveEState.trait, //traits\r\n      spellcasting: fiveEState.spellcasting, //spellcasting\r\n      actions: fiveEState.action, //actions\r\n      reactions: fiveEState.reaction, //reactions\r\n      environments: fiveEState.environment, //environments\r\n      legendaryHeader: fiveEState.legendaryHeader, //legendaryHeader\r\n      legendaryActions: fiveEState.legendary, //legendaryActions\r\n    });\r\n  }\r\n\r\n  constructor({\r\n    name,\r\n    referenceCardSize,\r\n    source,\r\n    otherSources,\r\n    creatureSize,\r\n    creatureType,\r\n    stats,\r\n    armorClass,\r\n    challengeRating,\r\n    health,\r\n    passivePerc,\r\n    languages,\r\n    speed,\r\n    saves,\r\n    skills,\r\n    senses,\r\n    alignment,\r\n    resistances,\r\n    immunities,\r\n    conditionImmunities,\r\n    traits,\r\n    spellcasting,\r\n    actions,\r\n    reactions,\r\n    environments,\r\n    legendaryHeader,\r\n    legendaryActions,\r\n    harvestingTable,\r\n    trinketTableType,\r\n  }) {\r\n    super(name, source);\r\n    this.cardSize = referenceCardSize;\r\n    this.otherSources = otherSources || [];\r\n    this.size = creatureSize;\r\n    this.type = creatureType;\r\n    this.speed = speed;\r\n    this.stats = stats;\r\n    this.saves = saves || null;\r\n    this.skills = skills;\r\n    this.senses = senses;\r\n    this.armorClass = armorClass;\r\n    this.health = health;\r\n    this.passivePerc = passivePerc;\r\n    this.languages = languages;\r\n    this.challengeRating = challengeRating;\r\n    this.resistances = resistances || null;\r\n    this.immunities = immunities || null;\r\n    this.conditionImmunities = conditionImmunities || null;\r\n    this.alignment = alignment;\r\n    this.traits = traits || [];\r\n    this.spellcasting = spellcasting || [];\r\n    this.actions = actions || [];\r\n    this.reactions = reactions || [];\r\n    this.environments = environments || [];\r\n    this.legendaryHeader = legendaryHeader;\r\n    this.legendaryActions = legendaryActions || [];\r\n    this.harvestingTable = harvestingTable || null;\r\n    this.trinketTableType = trinketTableType || null;\r\n  }\r\n\r\n  static stringFromSize(size) {\r\n    switch (size) {\r\n      case \"T\":\r\n        return \"Tiny\";\r\n      case \"S\":\r\n        return \"Small\";\r\n      case \"M\":\r\n        return \"Medium\";\r\n      case \"L\":\r\n        return \"Large\";\r\n      case \"H\":\r\n        return \"Huge\";\r\n      case \"G\":\r\n        return \"Gargantuan\";\r\n      default:\r\n        return `?[${size}]?`;\r\n    }\r\n  }\r\n\r\n  doSimpleFilter(filterString) {\r\n    return (\r\n      super.doSimpleFilter(filterString) ||\r\n      this.type.displayString.toLowerCase().includes(filterString)\r\n    );\r\n  }\r\n}\r\n\r\nclass Alignment {\r\n  constructor({ alignment, chance = 100 }) {\r\n    this.alignment = alignment;\r\n    this.chance = chance;\r\n  }\r\n\r\n  get convertedString() {\r\n    let str = this.alignment\r\n      .map((k) => {\r\n        switch (k) {\r\n          case \"N\":\r\n            return \"neutral\";\r\n          case \"C\":\r\n            return \"chaotic\";\r\n          case \"G\":\r\n            return \"good\";\r\n          case \"L\":\r\n            return \"lawful\";\r\n          case \"E\":\r\n            return \"evil\";\r\n          case \"A\":\r\n            return \"any alignment\";\r\n          case \"U\":\r\n            return \"unaligned\";\r\n          default:\r\n            return `?${k}?`;\r\n        }\r\n      })\r\n      .join(\" \");\r\n\r\n    if (this.chance !== 100) {\r\n      str += ` (${this.chance}%)`;\r\n    }\r\n    return str;\r\n  }\r\n}\r\n\r\n// Monster Bits\r\nclass ArmorClass {\r\n  constructor({ ac, from, condition }) {\r\n    this.ac = ac;\r\n    this.from = from;\r\n    this.condition = condition;\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    var strOut = this.ac;\r\n\r\n    if (this.from) {\r\n      strOut = `${this.ac} (${this.from.join(\", \")})`;\r\n    } else if (this.condition) {\r\n      strOut = `${this.ac} (${this.condition.join(\", \")})`;\r\n    }\r\n\r\n    return strOut;\r\n  }\r\n}\r\n\r\nexport class CreatureType {\r\n  constructor({ type, tags, swarmSize }) {\r\n    this.type = type;\r\n    this.tags = tags || [];\r\n    this.swarmSize = swarmSize;\r\n  }\r\n\r\n  get displayString() {\r\n    let str = this.type;\r\n\r\n    if (this.swarmSize) {\r\n      return `Swarm of ${Monster.stringFromSize(\r\n        this.swarmSize\r\n      ).toLowerCase()} ${this.type}${this.type !== \"undead\" ? \"s\" : \"\"}`;\r\n    }\r\n\r\n    if (this.tags.length > 0) {\r\n      str += ` (${this.tags\r\n        .map((tg) => {\r\n          var tagOut = tg.tag;\r\n          if (tg.prefix) tagOut = tg.prefix + \" \" + tagOut;\r\n          return tagOut;\r\n        })\r\n        .join(\", \")})`;\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n  static sortAscending(a, b) {\r\n    let outVal = sortStrAsc(a.type, b.type);\r\n\r\n    if (outVal !== 0) {\r\n      return outVal;\r\n    }\r\n\r\n    outVal = a.tags.length - b.tags.length;\r\n\r\n    if (outVal !== 0) {\r\n      return outVal;\r\n    }\r\n\r\n    for (let i = 0; i < a.tags.length; ++i) {\r\n      outVal = sortStrAsc(a.tags[i].tag, b.tags[i].tag);\r\n\r\n      if (outVal !== 0) {\r\n        return outVal;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport class ChallengeRating {\r\n  static sortAscending(a, b) {\r\n    if (a === null) return -1;\r\n    if (b === null) return 1;\r\n\r\n    let out = a.cr - b.cr;\r\n\r\n    if (out !== 0) {\r\n      return out;\r\n    }\r\n\r\n    out = a.lair - b.lair;\r\n\r\n    if (out !== 0) {\r\n      return out;\r\n    }\r\n\r\n    out = a.coven - b.coven;\r\n\r\n    return out;\r\n  }\r\n\r\n  constructor({ cr, lair, coven }) {\r\n    this.cr = cr || null;\r\n    var matches = /\\d+\\/(\\d+)/g.exec(this.cr);\r\n    if (matches !== null && matches.length > 0) {\r\n      this.cr = 1 / Number.parseInt(matches[1]);\r\n    } else this.cr = Number.parseInt(this.cr);\r\n    if (Number.isNaN(this.cr)) {\r\n      this.cr = -1;\r\n    }\r\n    this.lair = lair || null;\r\n    this.coven = coven || null;\r\n  }\r\n\r\n  get displayString() {\r\n    if (this.cr === -1) {\r\n      return \"-\";\r\n    }\r\n\r\n    let crOut = this.cr;\r\n\r\n    if (typeof crOut === \"number\" && crOut < 1 && crOut !== 0) {\r\n      crOut = `1/${1 / crOut}`;\r\n    }\r\n\r\n    if (this.coven !== null) {\r\n      crOut += ` (${this.coven} in coven)`;\r\n    }\r\n\r\n    if (this.lair !== null) {\r\n      crOut += ` (${this.lair} in lair)`;\r\n    }\r\n\r\n    return crOut;\r\n  }\r\n}\r\n\r\nclass HealthBlock {\r\n  constructor({ average, formula }) {\r\n    this.average = average;\r\n    this.formula = formula;\r\n  }\r\n}\r\n\r\nconst SPEED_KEYS = [\"walk\", \"fly\", \"climb\", \"swim\", \"burrow\"];\r\nclass SpeedBlock {\r\n  constructor({ walk, fly, climb, swim, burrow, canHover }) {\r\n    this.walk = walk !== undefined ? new SpeedEntry(walk) : null;\r\n    this.fly = fly !== undefined ? new SpeedEntry(fly) : null;\r\n    this.climb = climb !== undefined ? new SpeedEntry(climb) : null;\r\n    this.swim = swim !== undefined ? new SpeedEntry(swim) : null;\r\n    this.burrow = burrow !== undefined ? new SpeedEntry(burrow) : null;\r\n    this.canHover = canHover !== undefined ? canHover : false;\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    let strOut = SPEED_KEYS.map((val) => {\r\n      if (this[val]) {\r\n        if (val !== \"walk\") return `${val} ${this[val].simpleDisplay}`;\r\n        else return `${this[val].simpleDisplay}`;\r\n      }\r\n      return \"\";\r\n    })\r\n      .filter((spd) => spd)\r\n      .join(\", \");\r\n\r\n    return strOut;\r\n  }\r\n}\r\n\r\nclass SpeedEntry {\r\n  constructor(inObj) {\r\n    if (typeof inObj === \"number\" || inObj === 0) {\r\n      this.ft = inObj;\r\n      this.condition = null;\r\n    } else {\r\n      this.ft = inObj.number;\r\n      this.condition = inObj.condition;\r\n    }\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    if (!this.condition) {\r\n      return `${this.ft} ft.`;\r\n    } else {\r\n      return `${this.ft} ft. ${this.condition}`;\r\n    }\r\n  }\r\n}\r\n\r\nclass StatsBlock {\r\n  constructor({ str, dex, con, int, wis, cha }) {\r\n    this.str = str;\r\n    this.dex = dex;\r\n    this.con = con;\r\n    this.int = int;\r\n    this.wis = wis;\r\n    this.cha = cha;\r\n  }\r\n}\r\n","const TYPES = Object.freeze({\r\n  // monster related\r\n  ADD_MONSTER: \"beastiary/add-monster\",\r\n  ADD_MONSTERS: \"beastiary/add-monsters\",\r\n  ADD_SUB_MONSTER: \"beastiary/add-sub-monster\",\r\n  ADD_SUB_MONSTERS: \"beastiary/add-sub-monsters\",\r\n  SELECT_MONSTER: \"beastiary/select-monster\",\r\n  // table related\r\n  ADD_HARVESTING_TABLE: \"tables/add-harvesting-table\",\r\n  ADD_HARVESTING_TABLES: \"tables/add-harvesting-tables\",\r\n  ADD_TRINKET_TABLE: \"tables/add-trinket-table\",\r\n  ADD_TRINKET_TABLES: \"tables/add-trinket-tables\",\r\n  // item related\r\n  ADD_HARVESTED_ITEM: \"items/add-harvested-item\",\r\n  ADD_HARVESTED_ITEMS: \"items/add-harvested-items\",\r\n  SELECT_HARVESTED_ITEM: \"items/select-harvested-item\",\r\n  ADD_CRAFTABLE_ITEM: \"items/add-craftable-item\",\r\n  ADD_CRAFTABLE_ITEMS: \"items/add-craftable-items\",\r\n  SELECT_CRAFTABLE_ITEM: \"items/select-craftable-item\",\r\n});\r\n\r\nexport default TYPES;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FixedSizeList as List } from \"react-window\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport BaseDataItem from \"../data/BaseDataItem\";\r\nimport AppTheme from \"../themeContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class MDColumn {\r\n  constructor(colDisplay, listDisplayFunc, ascendingSortFunction) {\r\n    this.colDisplay = colDisplay;\r\n    this.listDisplayFunc = listDisplayFunc;\r\n    this.ascendingSortFunction = ascendingSortFunction;\r\n\r\n    this.sortFunc = this.sortFunc.bind(this);\r\n    this.sortAscending = this.sortAscending.bind(this);\r\n    this.sortDescending = this.sortDescending.bind(this);\r\n  }\r\n\r\n  sortFunc(isAscending) {\r\n    return isAscending ? this.sortAscending : this.sortDescending;\r\n  }\r\n\r\n  sortAscending(a, b) {\r\n    return this.ascendingSortFunction(a, b);\r\n  }\r\n\r\n  sortDescending(a, b) {\r\n    return -this.ascendingSortFunction(a, b);\r\n  }\r\n}\r\n\r\nexport function DefaultModularRow(props) {\r\n  const { index, data, style } = props;\r\n  const { headers, pathRoot, selectedId, history } = data;\r\n  const item = data.items[index];\r\n\r\n  let innerCols = [];\r\n\r\n  let desiredId = item.id;\r\n  const isSelected = selectedId === desiredId;\r\n\r\n  let headerLen = headers.length;\r\n  for (let h = 0; h < headerLen; ++h) {\r\n    let headerObj = headers[h];\r\n\r\n    innerCols.push(\r\n      <Col key={`${desiredId}-${h}`}>{headerObj.listDisplayFunc(item)}</Col>\r\n    );\r\n  }\r\n\r\n  let pathRoute = `${pathRoot}/${desiredId}`;\r\n\r\n  let activeName = isSelected ? \"active\" : \"\";\r\n\r\n  return (\r\n    <li\r\n      onClick={(e) => {\r\n        history.push(pathRoute);\r\n        e.preventDefault();\r\n      }}\r\n      className={activeName + (index % 2 === 0 ? \" even\" : \"\")}\r\n      style={style}\r\n    >\r\n      <Row>{innerCols}</Row>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport function ModularDisplayList(props) {\r\n  let {\r\n    ListItemSlot,\r\n    CustomFilterSlot,\r\n    headers,\r\n    items,\r\n    pathRoot,\r\n    height,\r\n    selectedId,\r\n    itemSize,\r\n    //...otherProps\r\n  } = props;\r\n  const appTheme = useContext(AppTheme);\r\n  let history = useHistory();\r\n  let [simpleFilter, setSimpleFilter] = useState(\"\");\r\n  let [sortByIdx, setSortByIdx] = useState(0);\r\n  let [sortAscending, setSortAscending] = useState(true);\r\n\r\n  // TODO: Filter items in the list against a simple string filter\r\n\r\n  if (!ListItemSlot) {\r\n    ListItemSlot = DefaultModularRow;\r\n    // function ({ style, index }) {\r\n    //   return <div style={style}>Row: {index}</div>;\r\n    // };\r\n  }\r\n\r\n  items = items.filter((i) => i.doSimpleFilter(simpleFilter));\r\n\r\n  items.sort(headers[sortByIdx].sortFunc(sortAscending));\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mx-0 w-100\">\r\n        <input\r\n          placeholder=\"Filter\"\r\n          type=\"text\"\r\n          value={simpleFilter}\r\n          style={{\r\n            width: \"100%\",\r\n          }}\r\n          onInput={(e) => {\r\n            setSimpleFilter(e.target.value);\r\n          }}\r\n          onChange={(e) => {\r\n            setSimpleFilter(e.target.value);\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row className=\"mx-0\">{CustomFilterSlot && <CustomFilterSlot />}</Row>\r\n      <Row className=\"mx-0\">\r\n        {headers.map((h, idx) => {\r\n          return (\r\n            <Col\r\n              key={`dl-h-col-${idx}`}\r\n              onClick={(e) => {\r\n                // e.preventDefault();\r\n                if (idx === sortByIdx) {\r\n                  setSortAscending(!sortAscending);\r\n                } else {\r\n                  setSortByIdx(idx);\r\n                  setSortAscending(true);\r\n                }\r\n              }}\r\n              className={`list-header ${idx === sortByIdx && \"active\"}`}\r\n            >\r\n              {h.colDisplay}{\" \"}\r\n              {idx === sortByIdx && <>{sortAscending ? \"^\" : \"v\"}</>}\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n      <List\r\n        className={`element-list ${appTheme.theme.styleName}`}\r\n        height={height}\r\n        width={\"100%\"}\r\n        itemCount={items.length}\r\n        itemData={{ items, headers, pathRoot, history, selectedId }}\r\n        itemSize={itemSize}\r\n        headers={headers}\r\n        style={{ overflowX: \"hidden\" }}\r\n      >\r\n        {ListItemSlot}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nModularDisplayList.propTypes = {\r\n  ListItemSlot: PropTypes.func,\r\n  CustomFilterSlot: PropTypes.element,\r\n  headers: PropTypes.arrayOf(MDColumn),\r\n  items: PropTypes.arrayOf(BaseDataItem),\r\n  height: PropTypes.number,\r\n};\r\n","import \"../css/Columnable.css\";\r\nimport \"../css/DisplayList.css\";\r\nimport \"../css/Layout.css\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getMonsterDict,\r\n  getSelectedMonsterId,\r\n  getSubMonsterDict,\r\n} from \"../redux/selectors\";\r\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport { ChallengeRating, CreatureType } from \"../data/Monster\";\r\nimport Sources from \"../data/sources.json\";\r\nimport { selectMonster } from \"../redux/actions\";\r\nimport { ModularDisplayList, MDColumn } from \"../components/ModularDisplayList\";\r\n\r\nconst listSelector = (store) => ({\r\n  monsterDict: getMonsterDict(store),\r\n  subMonsterDict: getSubMonsterDict(store),\r\n});\r\n\r\nexport default connect(listSelector)(MonsterDisplayList);\r\n\r\nfunction MonsterDisplayList(props) {\r\n  let [sortByIdx, setSortByIdx] = useState(0);\r\n  let [sortAscending, setSortAscending] = useState(true);\r\n\r\n  // headers should be a collection of DisplayColumn instances\r\n  let items = Object.values(props.monsterDict);\r\n  let headers = [\r\n    new MDColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n    new MDColumn(\r\n      \"Type\",\r\n      (item) => {\r\n        return <>{item[\"type\"].displayString}</>;\r\n      },\r\n      (a, b) => {\r\n        return CreatureType.sortAscending(a.type, b.type);\r\n      }\r\n    ),\r\n    new MDColumn(\r\n      \"CR\",\r\n      (item) => {\r\n        return <>{item.challengeRating.displayString}</>;\r\n      },\r\n      (a, b) => {\r\n        return ChallengeRating.sortAscending(\r\n          a.challengeRating,\r\n          b.challengeRating\r\n        );\r\n      }\r\n    ),\r\n    new MDColumn(\r\n      \"Card Size\",\r\n      (item) => {\r\n        var subMon = props.subMonsterDict[item.id];\r\n        return <>{subMon ? CARD_SIZES[subMon.cardSize] : \"-\"}</>;\r\n      },\r\n      (a, b) => {\r\n        var subMonA = props.subMonsterDict[a.id];\r\n        var subMonB = props.subMonsterDict[b.id];\r\n\r\n        if (subMonA && subMonB) {\r\n          return subMonA.cardSize - subMonB.cardSize;\r\n        } else if (subMonA && !subMonB) {\r\n          return -1;\r\n        } else if (!subMonA && subMonB) {\r\n          return 1;\r\n        } else {\r\n          // TODO: Fix this\r\n          return -1;\r\n        }\r\n      }\r\n    ),\r\n    new MDColumn(\r\n      \"Source\",\r\n      (item) => {\r\n        return <span title={Sources[item[\"source\"]]}>{item[\"source\"]}</span>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.source, b.source);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let headerRowContents = [];\r\n  for (let i = 0; i < headers.length; ++i) {\r\n    headerRowContents.push(\r\n      <Col\r\n        key={`dl-h-col-${i}`}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n\r\n          if (i === sortByIdx) {\r\n            setSortAscending(!sortAscending);\r\n          } else {\r\n            setSortByIdx(i);\r\n            setSortAscending(true);\r\n          }\r\n        }}\r\n        className={`list-header ${i === sortByIdx && \"active\"}`}\r\n      >\r\n        {headers[i].colDisplay}{\" \"}\r\n        {i === sortByIdx && <>{sortAscending ? \"^\" : \"v\"}</>}\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  items.sort(headers[sortByIdx].sortFunc(sortAscending));\r\n\r\n  return (\r\n    <>\r\n      <ModularDisplayList\r\n        headers={headers}\r\n        items={items}\r\n        pathRoot={props.pathRoot}\r\n        selectedId={props.selectedId}\r\n        height={600}\r\n        itemSize={40}\r\n        ListItemSlot={ListRow}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ListRow(props) {\r\n  const { index, data, style } = props;\r\n  let item = data.items[index];\r\n  // return <div style={style}>{Object.keys(props).join(\",\")}</div>;\r\n  return (\r\n    <DisplayListRow\r\n      key={`row-${item.id}`}\r\n      headers={data.headers}\r\n      item={item}\r\n      pathRoot={data.pathRoot}\r\n      style={style}\r\n      history={data.history}\r\n      index={index}\r\n    />\r\n  );\r\n}\r\n\r\nconst idSelector = (store) => ({\r\n  selectedMonsterId: getSelectedMonsterId(store),\r\n});\r\n\r\nconst dispatchProps = (disp) => ({\r\n  selectMonster: (monId) => disp(selectMonster(monId)),\r\n});\r\n\r\nconst areMergedPropsEqual = (next, prev) => {\r\n  let itemChanged = prev.item.id !== next.item.id;\r\n  let selectedChanged = prev.selectedMonsterId !== next.selectedMonsterId;\r\n\r\n  if (selectedChanged && itemChanged) {\r\n    return false; // redraw\r\n  } else if (selectedChanged && !itemChanged) {\r\n    // if it equals either, redraw\r\n    return !(\r\n      next.item.id === prev.selectedMonsterId ||\r\n      next.item.id === next.selectedMonsterId\r\n    );\r\n  } else if (!selectedChanged && itemChanged) {\r\n    // if it equals either, redraw\r\n    return !(\r\n      prev.selectedMonsterId === next.item.id ||\r\n      prev.selectedMonsterId === prev.item.id\r\n    );\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\nconst DisplayListRow = connect(\r\n  idSelector,\r\n  dispatchProps,\r\n  (stateProps, dispatchProps, ownProps) => ({\r\n    ...stateProps,\r\n    ...ownProps,\r\n    ...dispatchProps,\r\n  }),\r\n  {\r\n    pure: true,\r\n    areMergedPropsEqual,\r\n  }\r\n)(\r\n  class DisplayListRowInner extends React.PureComponent {\r\n    render() {\r\n      let history = this.props.history; //useHistory();\r\n\r\n      let {\r\n        headers,\r\n        item,\r\n        pathRoot,\r\n        selectedMonsterId,\r\n        index,\r\n        style,\r\n      } = this.props;\r\n\r\n      let isSelected = item.id === selectedMonsterId;\r\n\r\n      let innerCols = [\r\n        //  <Col key=\"id\">{selectedMonsterId + \"|\" + item.id}</Col>\r\n      ];\r\n\r\n      let desiredId = item.id;\r\n\r\n      let headerLen = headers.length;\r\n      for (let h = 0; h < headerLen; ++h) {\r\n        let headerObj = headers[h];\r\n\r\n        innerCols.push(\r\n          <Col key={`${desiredId}-${h}`}>{headerObj.listDisplayFunc(item)}</Col>\r\n        );\r\n      }\r\n\r\n      let pathRoute = `${pathRoot}/${desiredId}`;\r\n\r\n      let activeName = isSelected ? \"active\" : \"\";\r\n\r\n      return (\r\n        <li\r\n          onClick={(e) => {\r\n            history.push(pathRoute);\r\n            this.props.selectMonster(desiredId);\r\n            e.preventDefault();\r\n          }}\r\n          className={activeName + (index % 2 === 0 ? \" even\" : \"\")}\r\n          style={style}\r\n        >\r\n          <Row>{innerCols}</Row>\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import TYPES from \"./actionTypes\";\r\n\r\n// Monsters\r\nexport const addMonster = (monster) => ({\r\n  type: TYPES.ADD_MONSTER,\r\n  payload: monster,\r\n});\r\n\r\nexport const addMonsters = (monsters) => ({\r\n  type: TYPES.ADD_MONSTERS,\r\n  payload: monsters,\r\n});\r\n\r\nexport const addSubMonster = (subMonster) => ({\r\n  type: TYPES.ADD_SUB_MONSTER,\r\n  payload: subMonster,\r\n});\r\n\r\nexport const addSubMonsters = (subMonsters) => ({\r\n  type: TYPES.ADD_SUB_MONSTERS,\r\n  payload: subMonsters,\r\n});\r\n\r\nexport const selectMonster = (monsterId) => ({\r\n  type: TYPES.SELECT_MONSTER,\r\n  payload: monsterId,\r\n});\r\n\r\n// Tables\r\nexport const addHarvestingTable = (harvestingTable) => ({\r\n  type: TYPES.ADD_HARVESTING_TABLE,\r\n  payload: harvestingTable,\r\n});\r\n\r\nexport const addHarvestingTables = (harvestingTables) => ({\r\n  type: TYPES.ADD_HARVESTING_TABLES,\r\n  payload: harvestingTables,\r\n});\r\n\r\nexport const addTrinketTable = (trinketTable) => ({\r\n  type: TYPES.ADD_TRINKET_TABLE,\r\n  payload: trinketTable,\r\n});\r\n\r\nexport const addTrinketTables = (trinketTables) => ({\r\n  type: TYPES.ADD_TRINKET_TABLES,\r\n  payload: trinketTables,\r\n});\r\n\r\n// Items\r\nexport const addHarvestedItem = (harvestedItem) => ({\r\n  type: TYPES.ADD_HARVESTED_ITEM,\r\n  payload: harvestedItem,\r\n});\r\n\r\nexport const addHarvestedItems = (harvestedItems) => ({\r\n  type: TYPES.ADD_HARVESTED_ITEMS,\r\n  payload: harvestedItems,\r\n});\r\n\r\nexport const selectHarvestedItem = (harvestedItemId) => ({\r\n  type: TYPES.SELECT_HARVESTED_ITEM,\r\n  payload: harvestedItemId,\r\n});\r\n\r\nexport const addCraftableItem = (craftableItem) => ({\r\n  type: TYPES.ADD_CRAFTABLE_ITEM,\r\n  payload: craftableItem,\r\n});\r\n\r\nexport const addCraftableItems = (craftableItems) => ({\r\n  type: TYPES.ADD_CRAFTABLE_ITEMS,\r\n  payload: craftableItems,\r\n});\r\n\r\nexport const selectCraftableItem = (craftableItemId) => ({\r\n  type: TYPES.SELECT_CRAFTABLE_ITEM,\r\n  payload: craftableItemId,\r\n});\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport function StatBlock(props) {\r\n  let statBlock = props.statBlock;\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"text-center\">\r\n        <Row key=\"head\" className=\"font-weight-bold\">\r\n          <Col>STR</Col>\r\n          <Col>DEX</Col>\r\n          <Col>CON</Col>\r\n          <Col>INT</Col>\r\n          <Col>WIS</Col>\r\n          <Col>CHA</Col>\r\n        </Row>\r\n        <Row key=\"statVals\">\r\n          <Col key=\"str\">\r\n            {statBlock.str} ({getModifierDisplayString(statBlock.str)})\r\n          </Col>\r\n          <Col key=\"dex\">\r\n            {statBlock.dex} ({getModifierDisplayString(statBlock.dex)})\r\n          </Col>\r\n          <Col key=\"con\">\r\n            {statBlock.con} ({getModifierDisplayString(statBlock.con)})\r\n          </Col>\r\n          <Col key=\"int\">\r\n            {statBlock.int} ({getModifierDisplayString(statBlock.int)})\r\n          </Col>\r\n          <Col key=\"wis\">\r\n            {statBlock.wis} ({getModifierDisplayString(statBlock.wis)})\r\n          </Col>\r\n          <Col key=\"cha\">\r\n            {statBlock.cha} ({getModifierDisplayString(statBlock.cha)})\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function getModifierDisplayString(stat) {\r\n  let mod = getModifier(stat);\r\n\r\n  if (mod > 0) mod = `+${mod}`;\r\n\r\n  return mod;\r\n}\r\n\r\nexport function getModifier(stat) {\r\n  return Math.floor((stat - 10) / 2);\r\n}\r\n","import React from \"react\";\r\nimport { convertToHTML, stripTags } from \"../utility/stringUtil\";\r\n\r\nexport function DynamicRender(props) {\r\n  let toRender = props.toRender;\r\n  let { name, entries, type } = toRender;\r\n\r\n  if (typeof toRender === \"string\") {\r\n    // return <>{stripTags(toRender)}</>;\r\n    return (\r\n      <span dangerouslySetInnerHTML={{ __html: convertToHTML(toRender) }} />\r\n    );\r\n  }\r\n\r\n  if (type === undefined) {\r\n    return (\r\n      <div>\r\n        {entries.map((ent, idx) => {\r\n          return (\r\n            <div key={idx}>\r\n              {idx === 0 && (\r\n                <>\r\n                  <b>\r\n                    {/* {stripTags(name)} */}\r\n                    <DynamicRender toRender={name} />.\r\n                  </b>{\" \"}\r\n                </>\r\n              )}\r\n              <DynamicRender toRender={ent} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    switch (type) {\r\n      case \"list\":\r\n        return <ListRender list={toRender} />;\r\n      case \"item\":\r\n        return <ItemRender item={toRender} />;\r\n      default:\r\n        return <>[UNH {type} UNH]</>;\r\n    }\r\n  }\r\n}\r\n\r\nfunction ListRender(props) {\r\n  let {\r\n    //type,\r\n    style,\r\n    items,\r\n    //...others\r\n  } = props.list;\r\n\r\n  return (\r\n    <ul className={style}>\r\n      {items.map((it, idx) => (\r\n        <DynamicRender toRender={it} key={idx} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction ItemRender(props) {\r\n  let {\r\n    //type,\r\n    name,\r\n    entry,\r\n    //...others\r\n  } = props.item;\r\n\r\n  return (\r\n    <li>\r\n      <b>{stripTags(name)}</b> {stripTags(entry)}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport function SpellcastingBlock(props) {\r\n  var entry = props.spellcasting;\r\n\r\n  var { name, headerEntries, spells, will, daily, footerEntries } = entry;\r\n\r\n  var output = [];\r\n  var idx = 0;\r\n  if (headerEntries && headerEntries.length > 0) {\r\n    output.push(\r\n      <div key={\"header\"}>\r\n        {headerEntries.map((head, idx) => {\r\n          if (idx === 0) {\r\n            return (\r\n              <div key={idx}>\r\n                <b>{stripTags(name)}.</b> {stripTags(head)}\r\n              </div>\r\n            );\r\n          } else {\r\n            return <div key={idx}>{stripTags(head)}</div>;\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n    //   for (idx = 0; idx < headerEntries.length; ++idx) {\r\n    //     if (idx === 0) {\r\n    //       output.push(\r\n    //         <div key={idx}>\r\n    //           <b>{stripTags(name)}.</b> {stripTags(headerEntries[idx])}\r\n    //         </div>\r\n    //       );\r\n    //     } else {\r\n    //       output.push(<div key={idx}>{stripTags(headerEntries[idx])}</div>);\r\n    //     }\r\n    //   }\r\n    // } else {\r\n    //   output.push(\r\n    //     <div key={\"header\"}>\r\n    //       <b>{stripTags(name)}.</b>\r\n    //     </div>\r\n    //   );\r\n  }\r\n\r\n  if (will && will.length > 0) {\r\n    output.push(\r\n      <div key={\"will\"}>\r\n        <i>At will:</i> {will.map(stripTags).join(\", \")}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (daily) {\r\n    let dailyKeys = Object.keys(daily);\r\n\r\n    for (idx = 0; idx < dailyKeys.length; ++idx) {\r\n      let [num, each] = dailyKeys[idx].split(\"\");\r\n      let lead = `${num}/day${each ? \" each\" : \"\"}`;\r\n\r\n      output.push(\r\n        <div key={\"daily\"}>\r\n          <i>{lead}:</i> {daily[dailyKeys[idx]].map(stripTags).join(\", \")}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (spells) {\r\n    let spellKeys = Object.keys(spells);\r\n    let spellsBlock = spells;\r\n\r\n    for (idx = 0; idx < spellKeys.length; ++idx) {\r\n      let { slots, spells } = spellsBlock[spellKeys[idx]];\r\n\r\n      let numCount = \"\";\r\n      if (slots !== undefined) {\r\n        numCount = `${slots} slot${Number.parseInt(slots) > 1 ? \"s\" : \"\"}`;\r\n      } else {\r\n        numCount = \"at will\";\r\n      }\r\n\r\n      let spellLevel = Number.parseInt(spellKeys[idx]);\r\n      if (spellLevel === 0) {\r\n        spellLevel = \"Cantrips\";\r\n      } else if (spellLevel >= 4) {\r\n        spellLevel = `${spellLevel}th level`;\r\n      } else if (spellLevel === 1) {\r\n        spellLevel = `${spellLevel}st level`;\r\n      } else if (spellLevel === 2) {\r\n        spellLevel = `${spellLevel}nd level`;\r\n      } else if (spellLevel === 3) {\r\n        spellLevel = `${spellLevel}rd level`;\r\n      }\r\n\r\n      let lead = `${spellLevel} (${numCount}): `;\r\n\r\n      output.push(\r\n        <div key={`spells-${idx}`}>\r\n          <i>{lead}</i>\r\n          {spells.map(stripTags).join(\", \")}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (footerEntries && footerEntries.length > 0) {\r\n    output.push(\r\n      <div key=\"footer\">\r\n        {footerEntries.map((foot, idx) => {\r\n          return <div key={idx}>{stripTags(foot)}</div>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div key={name}>{output}</div>;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport \"../css/HamundsTables.css\";\r\nimport {\r\n  RollableSpan,\r\n  rollableTokenisedLine,\r\n  stripTags,\r\n  tokeniseByTags,\r\n} from \"../utility/stringUtil\";\r\nimport { DynamicRender } from \"./RenderBlocks\";\r\n\r\nexport default withRouter(TrinketTableDisplay);\r\n\r\nfunction TrinketTableDisplay(props) {\r\n  const { location } = props;\r\n  let [rolledArray, setRolledArray] = useState([]);\r\n  let trinketTable = props.trinketTable;\r\n\r\n  // if (!location.pathname.includes(props.monsterId)) {\r\n  //   setRolledArray([]);\r\n  // }\r\n\r\n  useEffect(() => {\r\n    setRolledArray([]);\r\n  }, [props.monsterId]);\r\n\r\n  if (trinketTable === null || trinketTable === undefined) {\r\n    return <></>;\r\n  }\r\n\r\n  let rowsOut = [];\r\n\r\n  rowsOut.push(\r\n    <Row className=\"text-center font-weight-bold\" key={\"trinketTableHeader\"}>\r\n      <Col className=\"col-1\">D8</Col>\r\n      <Col className=\"text-left\">Description</Col>\r\n      <Col className=\"col-1\">Value</Col>\r\n      <Col className=\"col-1\">Weight</Col>\r\n    </Row>\r\n  );\r\n\r\n  for (let i = 0; i < trinketTable.rows.length; ++i) {\r\n    let row = trinketTable.rows[i];\r\n    rowsOut.push(\r\n      <Row key={`tt-r${i}`}>\r\n        <Col className=\"col-1 text-center\">{row.d8Roll}</Col>\r\n        <Col>\r\n          {stripTags(row.descriptionLine)}\r\n          {/* <span\r\n            dangerouslySetInnerHTML={{\r\n              __html: stripTags(row.descriptionLine),\r\n            }}\r\n          /> */}\r\n        </Col>\r\n        <Col className=\"col-1\">{row.value}</Col>\r\n        <Col className=\"col-1\">{row.weight}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"hamund-table\" fluid>\r\n      {rowsOut}\r\n      <div className=\"border\" />\r\n      <Row>\r\n        <button\r\n          onClick={() => {\r\n            let rolled = trinketTable.roll();\r\n            let row = rolled.row;\r\n\r\n            let arrayCopy = rolledArray.slice();\r\n\r\n            arrayCopy.unshift(\r\n              <Row\r\n                key={`tt-r-rolled-${rolled.result}-${trinketTable.id}-${arrayCopy.length}`}\r\n              >\r\n                <Col className=\"col-1 text-center\">{row.d8Roll}</Col>\r\n                <Col>\r\n                  {/* {rollableTokenisedLine(row.descriptionLine)} */}\r\n                  {<DynamicRender toRender={row.descriptionLine} />}\r\n                </Col>\r\n                <Col className=\"col-1\">{row.value}</Col>\r\n                <Col className=\"col-1\">{row.weight}</Col>\r\n              </Row>\r\n            );\r\n\r\n            setRolledArray(arrayCopy);\r\n\r\n          }}\r\n        >\r\n          Roll\r\n        </button>\r\n        <button onClick={() => setRolledArray([])}>Clear history</button>\r\n      </Row>\r\n      <Row style={{ overflowY: \"hidden\", height: \"200px\" }}>\r\n        <Col>{rolledArray}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import \"../css/HamundsTables.css\";\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { NavLink } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppTheme } from \"../themeContext\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCraftableItemDict, getHarvestedItemDict } from \"../redux/selectors\";\r\n\r\nconst selectors = (store) => ({\r\n  harvestedItemDict: getHarvestedItemDict(store),\r\n  craftableItemDict: getCraftableItemDict(store),\r\n});\r\nexport default connect(selectors)(HarvestingTableDisplay);\r\n\r\nfunction HarvestingTableDisplay(props) {\r\n  const appTheme = useContext(AppTheme);\r\n\r\n  let challengeRating = props.challengeRating;\r\n  let creatureType = props.creatureType;\r\n  let harvestingTable = props.harvestingTable;\r\n\r\n  if (!harvestingTable) return <></>;\r\n\r\n  let rowsOut = [];\r\n\r\n  rowsOut.push(\r\n    <Row\r\n      className={`text-center hamund-header ${appTheme.theme.styleName}`}\r\n      key={-1}\r\n    >\r\n      <Col className=\"col-1\">DC</Col>\r\n      <Col className=\"col-2 text-left\">Item</Col>\r\n      <Col className=\"\">Description</Col>\r\n      <Col className=\"col-1\">Value</Col>\r\n      <Col className=\"col-1\">Weight</Col>\r\n      <Col className=\"col-2\">Crafting</Col>\r\n    </Row>\r\n  );\r\n\r\n  for (let i = 0; i < harvestingTable.rows.length; ++i) {\r\n    let row = harvestingTable.rows[i];\r\n\r\n    let item = props.harvestedItemDict[row.itemNameReference];\r\n\r\n    let nameOut = row.itemNameReference;\r\n    let descriptionOut = [];\r\n    let valueOut = \"\";\r\n    let weightOut = \"\";\r\n    let craftingOut = [];\r\n\r\n    if (item !== null && item !== undefined) {\r\n      nameOut = item.name;\r\n\r\n      let lines = 0;\r\n\r\n      for (let j = 0; j < item.description.length; ++j) {\r\n        descriptionOut.push(<p key={lines++}>{item.description[j]}</p>);\r\n      }\r\n\r\n      // output tools, if any\r\n      if (\r\n        item.requiredToolNames !== undefined &&\r\n        item.requiredToolNames.length > 0\r\n      ) {\r\n        descriptionOut.push(\r\n          <p key={lines++} className=\"font-weight-bold\">\r\n            Requires {item.requiredToolNames.join(\" and \").toLowerCase()}.\r\n          </p>\r\n        );\r\n      }\r\n\r\n      for (let j = 0; j < item.useText.length; ++j) {\r\n        descriptionOut.push(\r\n          <p key={lines++}>\r\n            {j === 0 && <b>Use: </b>} {item.useText[j]}\r\n          </p>\r\n        );\r\n      }\r\n\r\n      valueOut = item.value;\r\n      weightOut = item.weight;\r\n\r\n      // craftingOut = item.CraftingUsage.join(\" or \");\r\n      for (let k = 0; k < item.craftingUsage.length; ++k) {\r\n        if (craftingOut.length !== 0) {\r\n          craftingOut.push(<span key={\"or-\" + k}> or </span>);\r\n        }\r\n        craftingOut.push(\r\n          <NavLink\r\n            key={k}\r\n            tag={Link}\r\n            // TODO: Fix this\r\n            to={`/craftableitems/${item.craftingUsage[k]}`}\r\n          >\r\n            {props.craftableItemDict[item.craftingUsage[k]] &&\r\n              props.craftableItemDict[item.craftingUsage[k]].name}\r\n          </NavLink>\r\n        );\r\n      }\r\n    }\r\n\r\n    if (row.quantity !== \"\") {\r\n      nameOut += ` (${row.quantity})`;\r\n    }\r\n    if (row.notes !== \"\") {\r\n      nameOut += ` (${row.notes})`;\r\n    }\r\n\r\n    rowsOut.push(\r\n      <Row key={i} className={`hamund-row ${appTheme.theme.styleName}`}>\r\n        <Col className=\"col-1 text-center\">{row.difficultyClass}</Col>\r\n        <Col className=\"col-2\">{nameOut}</Col>\r\n        <Col className=\"\">{descriptionOut}</Col>\r\n        <Col className=\"col-1\">{valueOut}</Col>\r\n        <Col className=\"col-1\">{weightOut}</Col>\r\n        <Col className=\"col-2\">{craftingOut}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  let skill = \"\";\r\n\r\n  switch (creatureType.type) {\r\n    case \"aberration\":\r\n    case \"celestial\":\r\n    case \"elemental\":\r\n    case \"fey\":\r\n    case \"fiend\":\r\n    case \"undead\":\r\n      skill = \"Arcana\";\r\n      break;\r\n    case \"beast\":\r\n    case \"dragon\":\r\n    case \"monstrosity\":\r\n    case \"plant\":\r\n      skill = \"Nature\";\r\n      break;\r\n    case \"construct\":\r\n    case \"ooze\":\r\n      skill = \"Investigation\";\r\n      break;\r\n    case \"giant\":\r\n    case \"humanoid\":\r\n      skill = \"Medicine\";\r\n      break;\r\n    default:\r\n      skill = \"[\" + creatureType.type + \"]\";\r\n      break;\r\n  }\r\n\r\n  let apprasialTarget = \"unknown\";\r\n\r\n  if (challengeRating !== null) {\r\n    apprasialTarget = 8 + challengeRating.cr;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <b>Relevant skill:</b>&nbsp;{skill}\r\n      </Row>\r\n      <Row>\r\n        <b>Appraisal Target:</b>&nbsp;{apprasialTarget}\r\n      </Row>\r\n      <div className=\"border\" />\r\n      <Container className=\"hamund-table\">{rowsOut}</Container>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StatBlock } from \"../utility/statsUtil\";\r\nimport { Tabs, Tab, Row, Col } from \"react-bootstrap\";\r\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\r\nimport TrinketTableDisplay from \"./TrinketTableDisplay\";\r\nimport HarvestingTableDisplay from \"./HarvestingTableDisplay\";\r\nimport { RollableSpan, stripTags } from \"../utility/stringUtil\";\r\nimport { DynamicRender, SpellcastingBlock } from \"./RenderBlocks\";\r\nimport { stringFromSize } from \"../utility/monsterUtil\";\r\nimport Sources from \"../data/sources.json\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getHarvestingTableDict,\r\n  getMonsterDict,\r\n  getSubMonsterDict,\r\n  getTrinketTableDict,\r\n} from \"../redux/selectors\";\r\nimport { useHistory, useLocation, withRouter } from \"react-router\";\r\n\r\nconst COMBAT_TAB_KEY = \"combat\";\r\nconst TABLES_TAB_KEY = \"tables\";\r\n\r\nconst HARVESTING_TAB_KEY = \"harvesting\";\r\nconst TRINKET_TAB_KEY = \"trinkets\";\r\n\r\nfunction MonsterDisplay(props) {\r\n  let [tabKey, setTabKey] = useState(COMBAT_TAB_KEY);\r\n  let [tablesTabKey, setTablesTabKey] = useState(HARVESTING_TAB_KEY);\r\n  let monster = props.monster;\r\n  let { location, history, match } = props;\r\n  // let location = useLocation();\r\n  // let history = useHistory();\r\n\r\n  let queryTokens = {};\r\n  let qString = location.search.substring(location.search.indexOf(\"?\") + 1);\r\n  qString.split(\"&\").forEach((pair) => {\r\n    let [key, value] = pair.split(\"=\");\r\n    queryTokens[key] = value;\r\n  });\r\n\r\n  console.log(JSON.stringify(location));\r\n\r\n  if (monster === null) {\r\n    return (\r\n      <>\r\n        <div>Select an item from the list to see stats ...</div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  let nameOut = monster.name;\r\n  let typeOut = monster.type.displayString;\r\n\r\n  // TODO: Connect this component\r\n  let subMonster = props.subMonsterDict[monster.id];\r\n\r\n  let cardSize = subMonster ? CARD_SIZES[subMonster.cardSize] : \"-\";\r\n\r\n  let traitsAndSpellcastingOut = [];\r\n  monster.traits.forEach((entry, i) => {\r\n    traitsAndSpellcastingOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  monster.spellcasting.forEach((entry, i) => {\r\n    traitsAndSpellcastingOut.push(\r\n      <SpellcastingBlock\r\n        spellcasting={entry}\r\n        key={entry.name ? entry.name : i}\r\n      />\r\n    );\r\n  });\r\n  if (traitsAndSpellcastingOut.length > 0) {\r\n    traitsAndSpellcastingOut.push(\r\n      <div key=\"traitsBorder\" className=\"border\" />\r\n    );\r\n  }\r\n\r\n  let actionsOut = [];\r\n  monster.actions.forEach((entry, i) => {\r\n    actionsOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  if (actionsOut.length > 0) {\r\n    actionsOut.push(<div key=\"actionBorder\" className=\"border\" />);\r\n  }\r\n\r\n  let reactionsOut = [];\r\n  monster.reactions.forEach((entry, i) => {\r\n    reactionsOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  if (reactionsOut.length > 0) {\r\n    reactionsOut.push(<div key=\"reactionBorder\" className=\"border\" />);\r\n  }\r\n\r\n  let harvestingTable =\r\n    subMonster !== undefined && subMonster.harvestingTableGroup !== null\r\n      ? props.harvestingTableDict[subMonster.harvestingTableGroup]\r\n      : null;\r\n  let trinketTable =\r\n    subMonster !== undefined && subMonster.trinketTableType !== null\r\n      ? props.trinketTableDict[subMonster.trinketTableType]\r\n      : null;\r\n\r\n  let hasHarvestingTable = harvestingTable !== null;\r\n  let hasTrinketTable = trinketTable !== null;\r\n\r\n  let hasTables = hasHarvestingTable || hasTrinketTable;\r\n\r\n  if (queryTokens.tab) {\r\n    tabKey = TABLES_TAB_KEY;\r\n    tablesTabKey = queryTokens.tab;\r\n  } else {\r\n    tabKey = COMBAT_TAB_KEY;\r\n  }\r\n\r\n  if (!hasTables) {\r\n    if (tabKey !== COMBAT_TAB_KEY) {\r\n      tabKey = COMBAT_TAB_KEY;\r\n    }\r\n  } else {\r\n    if (!hasHarvestingTable && tablesTabKey === HARVESTING_TAB_KEY) {\r\n      tablesTabKey = TRINKET_TAB_KEY;\r\n    } else if (!hasTrinketTable && tablesTabKey === TRINKET_TAB_KEY) {\r\n      tablesTabKey = HARVESTING_TAB_KEY;\r\n    }\r\n  }\r\n\r\n  let otherSourcesOut = monster.otherSources.map((oSrc, idx) => {\r\n    let line = (\r\n      <span key={idx} title={Sources[oSrc.source]}>\r\n        {oSrc.source}\r\n      </span>\r\n    );\r\n    if (idx !== 0) {\r\n      return [<span key={idx + \",\"}>{\", \"}</span>, line];\r\n    } else {\r\n      return line;\r\n    }\r\n  });\r\n\r\n  console.log(`tabKey: ${tabKey}`);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col sm=\"9\">\r\n          <h4>{nameOut}</h4>\r\n          <div>\r\n            <i>\r\n              {stringFromSize(monster.size)} {typeOut}\r\n              {monster.alignment.length && (\r\n                <span>\r\n                  ,{\" \"}\r\n                  {monster.alignment\r\n                    .map((ali) => ali.convertedString)\r\n                    .join(\" or \")}\r\n                </span>\r\n              )}\r\n            </i>\r\n          </div>\r\n          <div>\r\n            <b>Card Size: </b>\r\n            {cardSize}\r\n          </div>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <div>\r\n            <b>Source</b>\r\n            <div title={Sources[monster.source]}>{monster.source}</div>\r\n            {otherSourcesOut.length > 0 && <i>{otherSourcesOut}</i>}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Tabs\r\n        activeKey={tabKey}\r\n        onSelect={(k) => {\r\n          setTabKey(k);\r\n          if (k === COMBAT_TAB_KEY) {\r\n            history.replace(location.pathname);\r\n          } else {\r\n            history.replace(`${location.pathname}?tab=${tablesTabKey}`);\r\n          }\r\n        }}\r\n      >\r\n        <Tab eventKey={COMBAT_TAB_KEY} title=\"Combat\">\r\n          <div>\r\n            <ACHPSpeed monster={monster} />\r\n          </div>\r\n          <div>\r\n            <StatBlock statBlock={monster.stats} />\r\n          </div>\r\n          <div className=\"border\" />\r\n          <div>\r\n            <SkillsAndSavesBlock monster={monster} />\r\n          </div>\r\n          {traitsAndSpellcastingOut}\r\n          {actionsOut}\r\n          {reactionsOut}\r\n        </Tab>\r\n        <Tab eventKey={TABLES_TAB_KEY} title=\"Tables\" disabled={!hasTables}>\r\n          <Tabs\r\n            activeKey={tablesTabKey}\r\n            onSelect={(k) => {\r\n              history.replace(`${location.pathname}?tab=${k}`);\r\n              setTablesTabKey(k);\r\n            }}\r\n          >\r\n            <Tab\r\n              eventKey={HARVESTING_TAB_KEY}\r\n              title=\"Harvesting\"\r\n              disabled={!hasHarvestingTable}\r\n            >\r\n              {\r\n                <HarvestingTableDisplay\r\n                  challengeRating={monster.challengeRating}\r\n                  creatureType={monster.type}\r\n                  harvestingTable={harvestingTable}\r\n                />\r\n              }\r\n              {/* {JSON.stringify(monster.HarvestingTable)} */}\r\n            </Tab>\r\n            <Tab\r\n              eventKey={TRINKET_TAB_KEY}\r\n              title=\"Trinkets\"\r\n              disabled={!hasTrinketTable}\r\n            >\r\n              <TrinketTableDisplay\r\n                trinketTable={trinketTable}\r\n                monsterId={monster.id}\r\n              />\r\n            </Tab>\r\n          </Tabs>\r\n        </Tab>\r\n      </Tabs>\r\n      {/* <div className=\"border\" /> */}\r\n      {/* {JSON.stringify(monster)} */}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ACHPSpeed(props) {\r\n  let monster = props.monster;\r\n  let topBlock = [];\r\n\r\n  let acOut = (\r\n    <>\r\n      {monster.armorClass\r\n        .map((ac) => {\r\n          if (ac.from) {\r\n            return ac.ac + \" (\" + ac.from.map(stripTags).join(\", \") + \")\";\r\n          } else if (ac.condition) {\r\n            return ac.ac + \" \" + stripTags(ac.condition);\r\n          } else return ac.ac;\r\n        })\r\n        .join(\", \")}\r\n    </>\r\n  );\r\n  topBlock.push(\r\n    <div key=\"ac\">\r\n      <b>AC:</b> {acOut}\r\n    </div>\r\n  );\r\n  let hpOut = (\r\n    <>\r\n      {monster.health.average} (\r\n      {<DynamicRender toRender={`{@dice ${monster.health.formula}}`} />}\r\n    </>\r\n  );\r\n  topBlock.push(\r\n    <div key=\"hp\">\r\n      <b>Health:</b> {hpOut}\r\n    </div>\r\n  );\r\n  let speedOut = <>{monster.speed.simpleDisplay}</>;\r\n  topBlock.push(\r\n    <div key=\"speed\">\r\n      <b>Speed:</b> {speedOut}\r\n    </div>\r\n  );\r\n  topBlock.push(<div key=\"borderTop\" className=\"border\" />);\r\n\r\n  return <>{topBlock}</>;\r\n}\r\n\r\nfunction SkillsAndSavesBlock(props) {\r\n  let monster = props.monster;\r\n\r\n  // let testFunction = function (mon) {\r\n  //   return JSON.stringify(mon[this.key]);\r\n  // };\r\n  let keyValueFunction = function (mon) {\r\n    return Object.keys(mon[this.key])\r\n      .map((inKey) => inKey + \" \" + mon[this.key][inKey])\r\n      .join(\", \");\r\n  };\r\n  let simpleJoinFunction = function (mon) {\r\n    return mon[this.key].join(\", \");\r\n  };\r\n  let resistImmuneFunction = function (type) {\r\n    return function (mon) {\r\n      return mon[this.key]\r\n        .map((val) => {\r\n          switch (typeof val) {\r\n            case \"string\":\r\n              return val;\r\n            case \"object\": {\r\n              let out = \"\";\r\n              if (val[type]) {\r\n                if (typeof val[type] === \"string\") {\r\n                  out = val[type];\r\n                } else {\r\n                  out = val[type].join(\", \");\r\n                }\r\n              }\r\n\r\n              return `${out} ${val.note}`;\r\n            }\r\n            default:\r\n              return JSON.stringify(val);\r\n          }\r\n        })\r\n        .join(\", \");\r\n    };\r\n  };\r\n  const SSE_PAIRS = [\r\n    {\r\n      key: \"saves\",\r\n      header: \"Saving Throws\",\r\n      disp: keyValueFunction,\r\n    },\r\n    {\r\n      key: \"skills\",\r\n      header: \"Skills\",\r\n      disp: keyValueFunction,\r\n    },\r\n    {\r\n      key: \"resistances\",\r\n      header: \"Resistances\",\r\n      disp: resistImmuneFunction(\"resist\"),\r\n    },\r\n    {\r\n      key: \"immunities\",\r\n      header: \"Immunities\",\r\n      disp: resistImmuneFunction(\"immune\"),\r\n    },\r\n    {\r\n      key: \"conditionImmunities\",\r\n      header: \"Condition Immunities\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"languages\",\r\n      header: \"Languages\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"senses\",\r\n      header: \"Senses\",\r\n      disp: function (mon) {\r\n        return (\r\n          mon[this.key].join(\", \") + \", passive Perception \" + mon.passivePerc\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  let skillsSavesEtcOut = [];\r\n  SSE_PAIRS.forEach((pair) => {\r\n    if (monster[pair.key]) {\r\n      skillsSavesEtcOut.push(\r\n        <div key={pair.key}>\r\n          <b>{pair.header}: </b>\r\n          {pair.disp(monster)}\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n  skillsSavesEtcOut.push(\r\n    <div key=\"cr\">\r\n      <b>Challenge Rating: </b>\r\n      {monster.challengeRating.displayString}\r\n    </div>\r\n  );\r\n  if (skillsSavesEtcOut.length > 0) {\r\n    skillsSavesEtcOut.push(<div key=\"border\" className=\"border\" />);\r\n  }\r\n\r\n  return <>{skillsSavesEtcOut}</>;\r\n}\r\n\r\nconst monstersSelector = (state) => ({\r\n  monsterDict: getMonsterDict(state),\r\n  subMonsterDict: getSubMonsterDict(state),\r\n  harvestingTableDict: getHarvestingTableDict(state),\r\n  trinketTableDict: getTrinketTableDict(state),\r\n});\r\n\r\nexport default connect(monstersSelector)(withRouter(MonsterDisplay));\r\n","export function getIdFromMonster(monster) {\r\n  let idReplaceRegex = /[\\s'\\-()]/g;\r\n  return (\r\n    monster.name.replace(idReplaceRegex, \"\") +\r\n    \"_\" +\r\n    monster.source\r\n  ).toLowerCase();\r\n}\r\n\r\nexport function stringFromSize(size) {\r\n  switch (size) {\r\n    case \"T\":\r\n      return \"Tiny\";\r\n    case \"S\":\r\n      return \"Small\";\r\n    case \"M\":\r\n      return \"Medium\";\r\n    case \"L\":\r\n      return \"Large\";\r\n    case \"H\":\r\n      return \"Huge\";\r\n    case \"G\":\r\n      return \"Gargantuan\";\r\n    default:\r\n      return `?[${size}]?`;\r\n  }\r\n}\r\n","import \"../css/Columnable.css\";\r\nimport \"../css/Layout.css\";\r\n\r\nimport React from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport MonsterDisplayList from \"../components/MonsterDisplayList\";\r\nimport MonsterDisplay from \"../components/MonsterDisplay\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getMonsterDict, getSubMonsterDict } from \"../redux/selectors\";\r\n\r\nconst monstersSelector = (state) => ({\r\n  monsterDict: getMonsterDict(state),\r\n  subMonsterDict: getSubMonsterDict(state),\r\n});\r\n\r\nexport default connect(monstersSelector)(Monsters);\r\n\r\nfunction Monsters(props) {\r\n  const pathWithId = \"/monsters/:id\";\r\n  let monster = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (props.monsterDict[selectedId] !== undefined) {\r\n      monster = props.monsterDict[selectedId];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          {/* <MonsterFilterBlock submitFilter={setFilterObj} /> */}\r\n          <MonsterDisplayList\r\n            // filterObject={filterObj}\r\n            pathRoot={props.match.path}\r\n            selectedId={selectedId}\r\n          />\r\n        </Col>\r\n        <Col className=\"border\">\r\n          <MonsterDisplay monster={monster} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCraftableItemDict } from \"../redux/selectors\";\r\nimport { rollableTokenisedLine, stripTags } from \"../utility/stringUtil\";\r\n\r\nconst selectors = (store) => ({\r\n  craftableItemDict: getCraftableItemDict(store),\r\n});\r\n\r\nexport default connect(selectors)(HarvestedItemDisplay);\r\n\r\nfunction HarvestedItemDisplay(props) {\r\n  let hItem = props.harvestedItem;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Name:</Col>\r\n        <Col>{hItem.name}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Value:</Col>\r\n        <Col>{hItem.value}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Weight:</Col>\r\n        <Col>{hItem.weight}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Required Tools:</Col>\r\n        <Col>\r\n          {hItem.requiredToolNames.length === 0\r\n            ? \"-\"\r\n            : hItem.requiredToolNames.join(\" and \")}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">CraftingUsage:</Col>\r\n        <Col>\r\n          {hItem.craftingUsage.length === 0\r\n            ? \"-\"\r\n            : hItem.craftingUsage\r\n                .map((cu) => props.craftableItemDict[cu].name)\r\n                .join(\" and \")}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Description:</Col>\r\n        <Col>\r\n          {hItem.description.map((para, idx) => {\r\n            return <p key={idx}>{rollableTokenisedLine(para)}</p>;\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      {hItem.useText.length !== 0 && (\r\n        <Row>\r\n          <Col className=\"col-3 font-weight-bold\">UseText:</Col>\r\n          <Col>\r\n            {hItem.useText.map((para, idx) => {\r\n              return <p key={idx}>{rollableTokenisedLine(para)}</p>;\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport HarvestedItemDisplay from \"../components/HarvestedItemDisplay\";\r\n\r\nimport { ModularDisplayList, MDColumn } from \"../components/ModularDisplayList\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHarvestedItemDict } from \"../redux/selectors\";\r\n\r\nconst selectors = (store) => ({\r\n  harvestedItemDict: getHarvestedItemDict(store),\r\n});\r\n\r\nexport default connect(selectors)(HarvestedItems);\r\n\r\nfunction HarvestedItems(props) {\r\n  const pathWithId = \"/harvesteditems/:id\";\r\n  let harvestedItem = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (props.harvestedItemDict[selectedId] !== undefined) {\r\n      harvestedItem = props.harvestedItemDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    new MDColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let harvestedOutput = [\"Select an item from the list\"];\r\n\r\n  if (harvestedItem !== null) {\r\n    harvestedOutput = [<HarvestedItemDisplay harvestedItem={harvestedItem} />];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          <ModularDisplayList\r\n            headers={headers}\r\n            items={Object.values(props.harvestedItemDict)}\r\n            pathRoot={props.match.path}\r\n            selectedId={selectedId}\r\n            height={600}\r\n            itemSize={25}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">{harvestedOutput}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { stripTags } from \"./stringUtil\";\r\n\r\nexport function ModularDescription(props) {\r\n  let desc = props.description;\r\n\r\n  if (typeof desc === \"string\") {\r\n    return <SimpleDescription description={desc} />;\r\n  } else {\r\n    if (!desc.type) return <>ERROR on: {JSON.stringify(desc)}</>;\r\n    switch (desc.type) {\r\n      case \"list\":\r\n        let style = desc.style;\r\n        return (\r\n          <ListDescription items={desc.lines || desc.items} style={style} />\r\n        );\r\n      case \"item\":\r\n        return <ItemDescription description={desc} />;\r\n      default:\r\n        return <UnhandledDescription description={desc} />;\r\n    }\r\n  }\r\n}\r\n\r\nfunction SimpleDescription(props) {\r\n  return <p>{stripTags(props.description)}</p>;\r\n}\r\n\r\nfunction ItemDescription(props) {\r\n  return (\r\n    <p>\r\n      <b>{props.description.name}</b> {stripTags(props.description.entry)}\r\n    </p>\r\n  );\r\n}\r\n\r\nfunction UnhandledDescription(props) {\r\n  return <p>{JSON.stringify(props.description)}</p>;\r\n}\r\n\r\nfunction ListDescription(props) {\r\n  let output = [];\r\n\r\n  for (let i = 0; i < props.items.length; ++i) {\r\n    output.push(\r\n      <li key={i}>\r\n        <ModularDescription description={props.items[i]} />\r\n      </li>\r\n    );\r\n  }\r\n\r\n  let styleObj = {};\r\n  if (props.style) {\r\n    styleObj.listStyle = props.style;\r\n  }\r\n\r\n  return <ul style={styleObj}>{output}</ul>;\r\n}\r\n","import React from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { ModularDescription } from \"../utility/descriptionUtil\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHarvestedItemDict, getCraftableItemDict } from \"../redux/selectors\";\r\n\r\nconst selector = (store) => ({\r\n  craftableItemDict: getCraftableItemDict(store),\r\n  harvestedItemDict: getHarvestedItemDict(store),\r\n});\r\n\r\nexport default connect(selector)(CraftableItemDisplay);\r\n\r\nfunction CraftableItemDisplay(props) {\r\n  let craftableItem = props.craftableItem;\r\n\r\n  let materialOutput = craftableItem.materials.map((mat, idx) => {\r\n    let matItem = props.harvestedItemDict[mat.componentId];\r\n\r\n    return (\r\n      <span key={idx}>\r\n        {matItem ? matItem.name : mat.componentId} ({mat.quantity})\r\n      </span>\r\n    );\r\n  });\r\n  let finalMaterialOutput = [];\r\n  for (let i = 0; i < materialOutput.length; ++i) {\r\n    if (finalMaterialOutput.length !== 0) {\r\n      finalMaterialOutput.push(\" \" + craftableItem.materialGrouping + \" \");\r\n    }\r\n    finalMaterialOutput.push(materialOutput[i]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"font-weight-bold\">{craftableItem.name}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <i>\r\n            {craftableItem.type},{\" \"}\r\n            {(craftableItem.rarity !== null\r\n              ? craftableItem.rarity\r\n              : \"\"\r\n            ).toLowerCase()}{\" \"}\r\n            {craftableItem.requiresAttunement && \"(requires attunement)\"}\r\n          </i>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <i>\r\n            Crafted by: {finalMaterialOutput} ({craftableItem.crafter})\r\n          </i>\r\n        </Col>\r\n      </Row>\r\n      &nbsp;\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Description:</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {craftableItem.description.length > 0 &&\r\n            craftableItem.description.map((para, idx) => {\r\n              return <ModularDescription key={idx} description={para} />;\r\n            })}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import \"../css/Columnable.css\";\r\nimport \"../css/Layout.css\";\r\n\r\nimport React from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport CraftableItemDisplay from \"../components/CraftableItemDisplay\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport { ModularDisplayList, MDColumn } from \"../components/ModularDisplayList\";\r\nimport { getCraftableItemDict } from \"../redux/selectors\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst selectors = (store) => ({\r\n  craftableItemDict: getCraftableItemDict(store),\r\n});\r\n\r\nexport default connect(selectors)(CraftableItems);\r\n\r\nfunction CraftableItems(props) {\r\n  const pathWithId = \"/craftableitems/:id\";\r\n  let craftableItem = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (props.craftableItemDict[selectedId] !== undefined) {\r\n      craftableItem = props.craftableItemDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    // new DisplayColumn(\r\n    new MDColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let displayOutput = [\"Select an item from the list\"];\r\n\r\n  if (craftableItem !== null) {\r\n    displayOutput[0] = (\r\n      <CraftableItemDisplay craftableItem={craftableItem} key={0} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          <ModularDisplayList\r\n            headers={headers}\r\n            items={Object.values(props.craftableItemDict)}\r\n            pathRoot={props.match.path}\r\n            selectedId={selectedId}\r\n            height={600}\r\n            itemSize={25}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">{displayOutput}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Home from \"./pages/Home\";\r\nimport Monsters from \"./pages/Monsters\";\r\nimport HarvestedItems from \"./pages/HarvestedItems\";\r\nimport CraftableItems from \"./pages/CraftableItems\";\r\n\r\nexport const MENU = [\r\n  {\r\n    className: \"\",\r\n    linkName: \"Home\",\r\n    linkTarget: \"/\",\r\n    routePaths: [\"/\"],\r\n    exact: true,\r\n    renderFunction: (props) => {\r\n      return <Home {...props} />;\r\n    },\r\n  },\r\n  {\r\n    className: \"\",\r\n    linkName: \"Monsters\",\r\n    linkTarget: \"/monsters\",\r\n    routePaths: [\"/monsters\"],\r\n    exact: false,\r\n    renderFunction: (props) => {\r\n      return <Monsters {...props} />;\r\n    },\r\n  },\r\n  {\r\n    className: \"\",\r\n    linkName: \"Harvested Items\",\r\n    linkTarget: \"/harvesteditems\",\r\n    routePaths: [\"/harvesteditems\"],\r\n    exact: false,\r\n    renderFunction: (props) => {\r\n      return <HarvestedItems {...props} />;\r\n    },\r\n  },\r\n  {\r\n    className: \"\",\r\n    linkName: \"Craftable Items\",\r\n    linkTarget: \"/craftableitems\",\r\n    routePaths: [\"/craftableitems\"],\r\n    exact: false,\r\n    renderFunction: (props) => {\r\n      return <CraftableItems {...props} />;\r\n    },\r\n  },\r\n];\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { MENU } from \"../navigationConstants\";\r\nimport { AppTheme } from \"../themeContext\";\r\n\r\nexport function NavMenu(props) {\r\n  const appTheme = useContext(AppTheme);\r\n\r\n  let navOutput = [];\r\n  for (let i = 0; i < MENU.length; ++i) {\r\n    let linkDeets = MENU[i];\r\n    navOutput.push(\r\n      <NavItem key={i} nav=\"true\">\r\n        <NavLink\r\n          tag={Link}\r\n          className={linkDeets.className + \" \" + appTheme.theme.navbarTextClass}\r\n          to={linkDeets.linkTarget}\r\n        >\r\n          {linkDeets.linkName}\r\n        </NavLink>\r\n      </NavItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar\r\n        className=\"border-bottom p-0\"\r\n        expand\r\n        {...appTheme.theme.navbarLightDark}\r\n        color={appTheme.theme.navbarColour}\r\n      >\r\n        <button onClick={() => appTheme.cycleTheme(appTheme)}>\r\n          Toggle theme\r\n        </button>\r\n        <Container>\r\n          <NavbarBrand tag={Link} to=\"/\">\r\n            Reactive RPG\r\n          </NavbarBrand>\r\n          <Nav\r\n            navbar\r\n            className=\"d-sm-inline-flex flex-sm-row\"\r\n            //className=\"mr-auto\"\r\n          >\r\n            {/* <ul className=\"navbar-nav flex-grow\"> */}\r\n            {navOutput}\r\n            {/* </ul> */}\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { NavMenu } from \"./NavMenu\";\r\nimport AppTheme from \"../themeContext\";\r\n\r\nimport \"../css/Layout.css\";\r\nimport \"../css/App.css\";\r\n\r\nexport function Layout(props) {\r\n  const context = useContext(AppTheme);\r\n\r\n  return (\r\n    <div className={`viewportWrapper ${context.theme.styleName}`}>\r\n      <NavMenu toggleTheme={props.toggleTheme} />\r\n      <Container fluid className=\"mainContentWrapper\">\r\n        {props.children}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"./LayoutControl/Layout\";\r\nimport { MENU } from \"./navigationConstants\";\r\nimport { AppTheme, themes } from \"./themeContext\";\r\n\r\nfunction App() {\r\n  const appTheme = useContext(AppTheme);\r\n  const [themeState, setThemeState] = useState(appTheme);\r\n\r\n  const toggleTheme = function (currentState) {\r\n    const newTheme = { ...currentState };\r\n    if (currentState.theme === themes.light) {\r\n      newTheme.theme = themes.dark;\r\n    } else {\r\n      newTheme.theme = themes.light;\r\n    }\r\n    setThemeState(newTheme);\r\n  };\r\n\r\n  // set the function to handle easy theme toggling\r\n  themeState.cycleTheme = toggleTheme;\r\n\r\n  let routeOpts = [];\r\n  for (let i = 0; i < MENU.length; ++i) {\r\n    let linkDeets = MENU[i];\r\n    routeOpts.push(\r\n      <Route\r\n        key={i}\r\n        path={linkDeets.routePaths[0]}\r\n        render={linkDeets.renderFunction}\r\n        exact={linkDeets.exact}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AppTheme.Provider value={themeState}>\r\n      <Layout toggleTheme={toggleTheme}>\r\n        <Switch>{routeOpts}</Switch>\r\n      </Layout>\r\n    </AppTheme.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class HarvestingTable extends BaseDataItem {\r\n  // static fromOld(oldMonster) {\r\n  //   if (!oldMonster.HarvestingTable.Rows) return null;\r\n\r\n  //   return new HarvestingTable({\r\n  //     name: oldMonster.Name,\r\n  //     rows: oldMonster.HarvestingTable.Rows.map(\r\n  //       (row) =>\r\n  //         new HarvestingTableRow({\r\n  //           difficultyClass: row.DifficultyClass,\r\n  //           itemNameReference: row.ItemNameRef,\r\n  //           quantity: row.Quantity,\r\n  //           notes: row.Notes,\r\n  //         })\r\n  //     ),\r\n  //   });\r\n  // }\r\n\r\n  constructor({ name, rows, source }) {\r\n    super(name, source);\r\n    this.rows = rows.map((r) => new HarvestingTableRow(r));\r\n  }\r\n}\r\n\r\nclass HarvestingTableRow {\r\n  constructor({ difficultyClass, itemNameReference, quantity, notes }) {\r\n    this.difficultyClass = difficultyClass;\r\n    this.itemNameReference = itemNameReference;\r\n    this.quantity = quantity;\r\n    this.notes = notes;\r\n  }\r\n}\r\n","import BaseDataItem from \"./BaseDataItem\";\r\nimport { DiceRoll } from \"rpg-dice-roller\";\r\n\r\nexport class TrinketTable extends BaseDataItem {\r\n  // static fromOld({ TrinketTableType, Rows }) {\r\n  //   return new TrinketTable({\r\n  //     trinketTableType: TrinketTableType,\r\n  //     rows: Rows.map(\r\n  //       (row) =>\r\n  //         new TrinketTableRow({\r\n  //           d8Roll: row.D8Roll,\r\n  //           descriptionLine: row.DescriptionLine,\r\n  //           value: row.ValueGP,\r\n  //           weight: row.WeightLB,\r\n  //         })\r\n  //     ),\r\n  //   });\r\n  // }\r\n\r\n  constructor({ trinketTableType, rows, source }) {\r\n    super(undefined, source);\r\n    this.trinketTableType = trinketTableType;\r\n    this.rows = rows.map((r) => new TrinketTableRow(r));\r\n  }\r\n\r\n  get id() {\r\n    return BaseDataItem.convertToId(this.trinketTableType, this.source);\r\n  }\r\n\r\n  roll() {\r\n    let roller = new DiceRoll(\"d8\");\r\n\r\n    return { result: roller.total, row: this.rows[roller.total - 1] };\r\n  }\r\n}\r\n\r\nclass TrinketTableRow {\r\n  constructor({ d8Roll, descriptionLine, value, weight }) {\r\n    this.d8Roll = d8Roll;\r\n    this.descriptionLine = descriptionLine;\r\n    this.value = value;\r\n    this.weight = weight;\r\n  }\r\n}\r\n","import BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class CraftableItem extends BaseDataItem {\r\n  constructor({\r\n    name,\r\n    crafter,\r\n    rarity,\r\n    requiresAttunement,\r\n    description,\r\n    materials,\r\n    type,\r\n    materialGrouping,\r\n    attunementNote,\r\n    source,\r\n  }) {\r\n    super(name, source);\r\n    this.crafter = crafter;\r\n    this.rarity = rarity;\r\n    this.requiresAttunement = requiresAttunement;\r\n    this.description = description;\r\n    this.materials = materials;\r\n    // this.materials = materials.map((mat) => {\r\n    //   return {\r\n    //     componentId: mat.componentId.replace(/[_-]/g, \"\") + \"_hh1\",\r\n    //     quantity: mat.quantity,\r\n    //   };\r\n    // });\r\n    this.type = type;\r\n    this.materialGrouping = materialGrouping;\r\n    this.attunementNote = attunementNote;\r\n\r\n    // check name and source\r\n    // const match = / \\((\\D?\\D?\\D?)\\)$/.exec(this.name);\r\n    // if (match) {\r\n    //   console.log(\r\n    //     `match on name [${this.name}]. Result: ${JSON.stringify(match)}`\r\n    //   );\r\n    //   this.name = this.name.substring(0, this.name.indexOf(match[0]));\r\n    //   this.source = match[1];\r\n    //   console.log(`Replaced name: ${this.name}`);\r\n    // }\r\n  }\r\n}\r\n","import BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class HarvestedItem extends BaseDataItem {\r\n  constructor({\r\n    name,\r\n    value,\r\n    weight,\r\n    craftingUsage,\r\n    description,\r\n    useText,\r\n    requiredToolNames,\r\n    source,\r\n  }) {\r\n    super(name, source);\r\n    this.value = value;\r\n    this.weight = weight;\r\n    this.craftingUsage = craftingUsage;\r\n    this.description = description;\r\n    this.useText = useText;\r\n    this.requiredToolNames = requiredToolNames;\r\n  }\r\n}\r\n","import BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class SubStateMonster extends BaseDataItem {\r\n  constructor({\r\n    name,\r\n    cardSize,\r\n    source,\r\n    trinketTableType,\r\n    harvestingTableGroup,\r\n  }) {\r\n    super(name, source);\r\n    this.cardSize = cardSize;\r\n    this.trinketTableType = trinketTableType;\r\n    this.harvestingTableGroup = harvestingTableGroup;\r\n\r\n    // if (!trinketTableType || /HH\\d$/i.test(trinketTableType)) {\r\n    //   this.trinketTableType = trinketTableType;\r\n    // } else {\r\n    //   this.trinketTableType = BaseDataItem.convertToId(trinketTableType, \"HH1\");\r\n    // }\r\n\r\n    // if (!harvestingTableGroup || /HH\\d$/i.test(harvestingTableGroup)) {\r\n    //   this.harvestingTableGroup = harvestingTableGroup;\r\n    // } else {\r\n    //   this.harvestingTableGroup = BaseDataItem.convertToId(\r\n    //     harvestingTableGroup,\r\n    //     \"HH1\"\r\n    //   );\r\n    // }\r\n  }\r\n}\r\n","import TYPES from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  monsterDict: {},\r\n  subMonsterDict: {},\r\n  selectedMonsterId: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.SELECT_MONSTER: {\r\n      let selectedMonsterId = action.payload;\r\n\r\n      if (state.selectedMonsterId === selectedMonsterId) {\r\n        return state;\r\n      }\r\n\r\n      console.log(`${TYPES.SELECT_MONSTER}: ${selectedMonsterId}`);\r\n\r\n      return {\r\n        ...state,\r\n        selectedMonsterId,\r\n      };\r\n    }\r\n    case TYPES.ADD_MONSTER: {\r\n      const { id } = action.payload;\r\n      if (state.monsterDict[id]) {\r\n        return state;\r\n      }\r\n\r\n      let monsterDict = { ...state.monsterDict };\r\n      monsterDict[id] = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        monsterDict: monsterDict,\r\n      };\r\n    }\r\n    case TYPES.ADD_MONSTERS: {\r\n      const monsters = action.payload;\r\n\r\n      let noChange = true;\r\n      let monsterDict = { ...state.monsterDict };\r\n\r\n      monsters.forEach((mon, idx) => {\r\n        if (monsterDict[mon.id] === undefined) {\r\n          monsterDict[mon.id] = mon;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          monsterDict: monsterDict,\r\n        };\r\n      }\r\n    }\r\n    case TYPES.ADD_SUB_MONSTER: {\r\n      const { id } = action.payload;\r\n      if (state.subMonsterDict[id]) {\r\n        return state;\r\n      }\r\n\r\n      let subMonsterDict = { ...state.subMonsterDict };\r\n      subMonsterDict[id] = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        subMonsterDict: subMonsterDict,\r\n      };\r\n    }\r\n    case TYPES.ADD_SUB_MONSTERS: {\r\n      const monsters = action.payload;\r\n\r\n      let noChange = true;\r\n      let subMonsterDict = { ...state.subMonsterDict };\r\n\r\n      monsters.forEach((mon, idx) => {\r\n        if (subMonsterDict[mon.id] === undefined) {\r\n          subMonsterDict[mon.id] = mon;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          subMonsterDict: subMonsterDict,\r\n        };\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import TYPES from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  harvestingTableDict: {},\r\n  trinketTableDict: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.ADD_HARVESTING_TABLE: {\r\n      // TODO: ?\r\n      return null;\r\n    }\r\n    case TYPES.ADD_HARVESTING_TABLES: {\r\n      const harvestingTables = action.payload;\r\n\r\n      let noChange = true;\r\n      let harvestingTableDict = { ...state.harvestingTableDict };\r\n\r\n      harvestingTables.forEach((hTable, idx) => {\r\n        if (harvestingTableDict[hTable.id] === undefined) {\r\n          harvestingTableDict[hTable.id] = hTable;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          harvestingTableDict: harvestingTableDict,\r\n        };\r\n      }\r\n    }\r\n    case TYPES.ADD_TRINKET_TABLE: {\r\n      // TODO: ?\r\n      return null;\r\n    }\r\n    case TYPES.ADD_TRINKET_TABLES: {\r\n      const trinketTables = action.payload;\r\n\r\n      let noChange = true;\r\n      let trinketTableDict = { ...state.trinketTableDict };\r\n\r\n      trinketTables.forEach((tTable, idx) => {\r\n        if (trinketTableDict[tTable.id] === undefined) {\r\n          trinketTableDict[tTable.id] = tTable;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          trinketTableDict: trinketTableDict,\r\n        };\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import TYPES from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  harvestedItemDict: {},\r\n  selectedHarvestedItemId: \"\",\r\n  craftableItemDict: {},\r\n  selectedCraftableItemId: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.SELECT_HARVESTED_ITEM: {\r\n      // TODO: ?\r\n      return null;\r\n    }\r\n    case TYPES.ADD_HARVESTED_ITEMS: {\r\n      const harvestedItems = action.payload;\r\n\r\n      let noChange = true;\r\n      let harvestedItemDict = { ...state.harvestedItemDict };\r\n\r\n      harvestedItems.forEach((hItem, idx) => {\r\n        if (harvestedItemDict[hItem.id] === undefined) {\r\n          harvestedItemDict[hItem.id] = hItem;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          harvestedItemDict: harvestedItemDict,\r\n        };\r\n      }\r\n    }\r\n    case TYPES.ADD_CRAFTABLE_ITEM: {\r\n      // TODO: ?\r\n      return null;\r\n    }\r\n    case TYPES.ADD_CRAFTABLE_ITEMS: {\r\n      const craftableItems = action.payload;\r\n\r\n      let noChange = true;\r\n      let craftableItemDict = { ...state.craftableItemDict };\r\n\r\n      craftableItems.forEach((cItem, idx) => {\r\n        if (craftableItemDict[cItem.id] === undefined) {\r\n          craftableItemDict[cItem.id] = cItem;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          craftableItemDict: craftableItemDict,\r\n        };\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport monsters from \"./monstersReducer\";\r\nimport tables from \"./tablesReducer\";\r\nimport items from \"./itemReducers\";\r\n\r\nexport default combineReducers({ monsters, tables, items });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","import Data from \"../data/system-state.json\";\r\nimport Index from \"../data/bestiary/index.json\";\r\nimport { Monster } from \"../data/Monster\";\r\nimport { HarvestingTable } from \"../data/HarvestingTable\";\r\nimport { TrinketTable } from \"../data/TrinketTable\";\r\nimport { CraftableItem } from \"../data/CraftableItem\";\r\nimport { HarvestedItem } from \"../data/HarvestedItem\";\r\nimport { SubStateMonster } from \"../data/SubStateMonster\";\r\nimport {\r\n  addCraftableItems,\r\n  addHarvestedItems,\r\n  addHarvestingTables,\r\n  addMonsters,\r\n  addSubMonsters,\r\n  addTrinketTables,\r\n} from \"../redux/actions\";\r\nimport store from \"../redux/store\";\r\n\r\nconst $ = window.$;\r\n\r\nasync function ajaxJson(fileName) {\r\n  return new Promise((resolve, reject) => {\r\n    $.getJSON(`data/bestiary/${fileName}`, (data) => {\r\n      resolve(data);\r\n    });\r\n  });\r\n}\r\n\r\nasync function Load5eMonsterFile({ key, fileName }) {\r\n  let localKey = key;\r\n\r\n  // check if already processed or already being processed\r\n  if (Storage.processedKeys.includes(localKey.toLowerCase())) {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      console.log(`[${localKey}] already done.`);\r\n    }\r\n    return;\r\n  } else if (Storage.processingKeys.includes(localKey.toLowerCase())) {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      console.log(`[${localKey}] being processed.`);\r\n    }\r\n    return;\r\n  }\r\n\r\n  Storage.processingKeys.push(localKey.toLowerCase());\r\n\r\n  console.log(`Starting on key[${localKey.toLowerCase()}]`);\r\n\r\n  var data = await ajaxJson(fileName);\r\n  if (data._meta) {\r\n    var meta = data._meta;\r\n    // await for any dependencies to be loaded in\r\n    if (meta.dependencies && meta.dependencies.monster) {\r\n      for (let jdx = 0; jdx < meta.dependencies.monster.length; ++jdx) {\r\n        var depKey = meta.dependencies.monster[jdx];\r\n        if (process.env.NODE_ENV === \"development\") {\r\n          console.log(\r\n            `Starting on key[${depKey.toLowerCase()}] required as a dependency of [${localKey.toLowerCase()}]`\r\n          );\r\n        }\r\n        await Load5eMonsterFile({\r\n          key: depKey,\r\n          fileName: `bestiary-${depKey.toLowerCase()}.json`,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let idx = 0; idx < data.monster.length; ++idx) {\r\n    let mon = data.monster[idx];\r\n\r\n    if (mon._copy) {\r\n      // console.log(\r\n      //   `For now, skipping _copy prop monsters ... on ${mon.name}`\r\n      // );\r\n      continue;\r\n    }\r\n\r\n    try {\r\n      mon = Monster.from5eSource(mon);\r\n      if (!Storage.monsterDict[mon.id]) {\r\n        Storage.monsterDict[mon.id] = mon;\r\n      }\r\n    } catch (err) {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        console.error(\r\n          `Loading on monster: ${mon.name} in file: ${fileName} failed.\\n${err}`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(`${localKey} processed.`);\r\n  Storage.processedKeys.push(localKey.toLowerCase());\r\n}\r\n\r\n// let initialised = false;\r\nconst Storage = {\r\n  _init: false,\r\n\r\n  // dictionaries\r\n  monsterDict: {},\r\n  subStateMonsterDict: {},\r\n  harvestingTableDict: {},\r\n  harvestedItemDict: {},\r\n  trinketTableDict: {},\r\n  craftableItemDict: {},\r\n\r\n  processingKeys: [],\r\n  processedKeys: [],\r\n\r\n  delayedMonsters: [],\r\n\r\n  Init: async () => {\r\n    if (Storage._init) {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        console.log(\"Storage already initialised\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.harvestingTables.length; ++idx) {\r\n      let harvestingTable = new HarvestingTable(Data.harvestingTables[idx]);\r\n      Storage.harvestingTableDict[harvestingTable.name] = harvestingTable;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.harvestedItems.length; ++idx) {\r\n      let harvestedItem = new HarvestedItem(Data.harvestedItems[idx]);\r\n      Storage.harvestedItemDict[harvestedItem.id] = harvestedItem;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.trinketTables.length; ++idx) {\r\n      let trinketTable = new TrinketTable(Data.trinketTables[idx]);\r\n      Storage.trinketTableDict[trinketTable.trinketTableType] = trinketTable;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.craftableItems.length; ++idx) {\r\n      let craftableItem = new CraftableItem(Data.craftableItems[idx]);\r\n      Storage.craftableItemDict[craftableItem.id] = craftableItem;\r\n    }\r\n\r\n    store.dispatch(\r\n      addHarvestingTables(Object.values(Storage.harvestingTableDict))\r\n    );\r\n    store.dispatch(addHarvestedItems(Object.values(Storage.harvestedItemDict)));\r\n    store.dispatch(addTrinketTables(Object.values(Storage.trinketTableDict)));\r\n    store.dispatch(addCraftableItems(Object.values(Storage.craftableItemDict)));\r\n\r\n    // TODO: Uncomment the below to 'clean house'\r\n    // delete Storage.harvestingTableDict;\r\n    // delete Storage.harvestedItemDict;\r\n    // delete Storage.trinketTableDict;\r\n    delete Storage.craftableItemDict;\r\n\r\n    for (let key in Index) {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        console.log(`${key} :: ${Index[key]}`);\r\n      }\r\n\r\n      await Load5eMonsterFile({ key: key, fileName: Index[key] });\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.monsters.length; ++idx) {\r\n      let monster = new SubStateMonster(Data.monsters[idx]);\r\n      Storage.subStateMonsterDict[monster.id] = monster;\r\n    }\r\n\r\n    store.dispatch(addSubMonsters(Object.values(Storage.subStateMonsterDict)));\r\n    store.dispatch(addMonsters(Object.values(Storage.monsterDict)));\r\n\r\n    delete Storage.monsterDict;\r\n    delete Storage.subStateMonsterDict;\r\n\r\n    Storage._init = true;\r\n  },\r\n};\r\n\r\nwindow.storage = Storage;\r\nexport default Storage;\r\n","// css-import\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/index.css\";\r\n// js-imports\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Storage from \"./utility/StorageUtil\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\n// Storage.Init().then(() => {\r\n//   ReactDOM.render(\r\n//     <React.StrictMode>\r\n//       <Provider store={store}>\r\n//         <Router basename={baseUrl}>\r\n//           <App />\r\n//         </Router>\r\n//       </Provider>\r\n//     </React.StrictMode>,\r\n//     rootElement\r\n//   );\r\n// });\r\n\r\nStorage.Init();\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router basename={baseUrl}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}