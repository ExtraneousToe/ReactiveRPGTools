{"version":3,"sources":["pages/DisplayList.js","components/HarvestedItemFilterBlock.js","utility/stringUtil.js","data/Monster.js","data/HarvestingTable.js","data/TrinketTable.js","data/CraftableItem.js","data/HarvestedItem.js","utility/StorageUtil.js","utility/harvestedItemUtil.js","pages/HarvestedItems.js","pages/Home.js","utility/saveFile.js","utility/statsUtil.js","data/referenceCardSizes.js","utility/trinketTableUtil.js","utility/inputUtil.js","utility/descriptionUtil.js","utility/craftableItemUtil.js","utility/harvestingTableUtil.js","components/RenderBlocks.js","components/MonsterDisplay.js","utility/monsterUtil.js","components/MonsterFilterBlock.js","pages/Monsters.js","pages/CraftableItems.js","navigationConstants.js","LayoutControl/NavMenu.js","LayoutControl/Layout.js","App.js","serviceWorker.js","index.js"],"names":["DisplayColumn","colDisplay","listDisplayFunc","ascendingSortFunction","this","sortFunc","bind","sortAscending","sortDescending","isAscending","a","b","DisplayList","props","headers","items","useState","sortByIdx","setSortByIdx","setSortAscending","headerRowContents","i","push","Col","key","onClick","e","preventDefault","className","length","filterObject","filterKeys","Object","keys","filter","sort","contentsRows","itemLen","map","item","idx","DisplayListRow","idFunction","pathRoot","isSelected","selectedId","Row","history","useHistory","innerCols","desiredId","headerLen","h","headerObj","pathRoute","activeName","HarvestedItemFilterBlock","label","value","setter","nameField","setNameField","filterRows","type","style","width","onChange","target","onSubmit","obj","Name","toLowerCase","match","submitFilter","display","x","y","Array","prototype","last","arg","undefined","String","leadingCharacter","splitByTags","string","char","char2","tagDepth","out","curStr","isLastOpen","len","replace","splitTagByPipe","_splitByPipeBase","_stripTagLayer","str","includes","it","startsWith","firstIndex","indexOf","substr","splitFirstSpace","slice","tag","text","tagStr","tagGroups","split","trim","seen","Set","has","add","tags","join","attackTagToFull","rollText","displayText","n","Number","isNaN","Error","asNum","compactText","flags","parts","newText","oldText","stripTags","nxtStr","err","console","error","Monster","name","referenceCardSize","source","otherSources","creatureSize","creatureType","stats","armorClass","challengeRating","health","passivePerc","languages","speed","saves","skills","senses","alignment","resistances","immunities","conditionImmunities","traits","spellcasting","actions","reactions","environments","legendaryHeader","legendaryActions","harvestingTable","trinketTableType","cardSize","size","fiveEState","feType","CreatureType","inObj","swarmSize","tg","prefix","log","feCR","cr","ChallengeRating","feACLines","ac","line","acObj","parseInt","from","condition","ArmorClass","feAlignment","every","ent","Alignment","ali","StatsBlock","HealthBlock","hp","passive","SpeedBlock","walk","fly","swim","climb","burrow","canHover","save","skill","resist","immune","conditionImmune","trait","action","reaction","environment","legendary","chance","k","strOut","stringFromSize","tagOut","outVal","sortStrAsc","lair","coven","matches","exec","crOut","average","formula","SPEED_KEYS","SpeedEntry","val","simpleDisplay","spd","ft","number","dex","con","int","wis","cha","HarvestingTable","rows","r","HarvestingTableRow","oldMonster","Rows","row","difficultyClass","DifficultyClass","itemNameReference","ItemNameRef","quantity","Quantity","notes","Notes","TrinketTable","TrinketTableType","TrinketTableRow","d8Roll","D8Roll","descriptionLine","DescriptionLine","ValueGP","weight","WeightLB","CraftableItem","crafter","rarity","requiresAttunement","description","materials","materialGrouping","attunementNote","oldItem","Crafter","Rarity","RequiresAttunement","Description","Materials","matRow","componentId","ComponentId","Type","MaterialGrouping","AttunementNote","HarvestedItem","craftingUsage","useText","requiredToolNames","CraftingUsage","UseText","RequiredToolNames","$","window","ajaxJson","fileName","Promise","resolve","reject","getJSON","data","Load5eMonsterFile","localKey","Storage","processedKeys","processingKeys","_meta","meta","dependencies","monster","jdx","depKey","mon","_copy","from5eSource","monsterDict","id","_init","subStateMonsterDict","harvestingTableDict","harvestableItemDict","trinketTableDict","craftableItemDict","Init","Index","Data","monsters","SubStateMonster","harvestingTables","harvestedItems","harvestedItem","trinketTables","trinketTable","craftableItems","craftableItem","storage","harvestingTableGroup","getItemReference","simplePassthrough","joinArray","splitArray","HarvestedItemDisplay","hItem","para","React","Component","HarvestedItems","filterObj","setFilterObj","matchPath","location","pathname","path","params","harvestedOutput","xs","md","values","Home","filename","fileContent","link","document","createElement","download","href","encodeURIComponent","body","appendChild","click","removeChild","fileSaveAs","JSON","stringify","height","StatBlock","statBlock","Container","getModifierDisplayString","stat","mod","Math","floor","getModifier","CARD_SIZES","TrinketTableDisplay","rowsOut","ArrayInput","redraw","setRedraw","propObj","object","propKey","objKey","defaultInsert","insertLine","tarIndex","splice","arrayLines","subType","index","hideLabel","SelectInput","options","opt","RadioButtonInput","onChangeFunc","checked","for","StringInput","propIdx","disabled","CheckboxInput","ModularDescription","desc","SimpleDescription","ListDescription","lines","ItemDescription","UnhandledDescription","entry","output","styleObj","listStyle","getIdFromItemName","getIdFromItem","CraftableItemDisplay","materialOutput","mat","matItem","finalMaterialOutput","MaterialInput","HarvestingTableDisplay","nameOut","descriptionOut","valueOut","weightOut","craftingOut","j","NavLink","Link","to","apprasialTarget","DynamicRender","toRender","entries","ListRender","list","ItemRender","SpellcastingBlock","headerEntries","spells","will","daily","footerEntries","head","dailyKeys","num","each","lead","spellKeys","spellsBlock","slots","numCount","spellLevel","foot","MonsterDisplay","tabKey","setTabKey","tablesTabKey","setTablesTabKey","typeOut","displayString","subMonster","traitsAndSpellcastingOut","forEach","actionsOut","reactionsOut","hasHarvestingTable","hasTrinketTable","hasTables","otherSourcesOut","oSrc","title","Sources","sm","convertedString","Tabs","activeKey","onSelect","Tab","eventKey","ACHPSpeed","SkillsAndSavesBlock","topBlock","acOut","hpOut","speedOut","keyValueFunction","inKey","simpleJoinFunction","skillsSavesEtcOut","header","disp","pair","BlockRow_Text","MonsterFilterBlock","selectOpts","optLabels","typeField","setTypeField","cardSizeField","setCardSizeField","CardSize","ReferenceCardSize","Monsters","subMon","subMonA","subMonB","CraftableItems","displayOutput","MENU","linkName","linkTarget","routePaths","exact","renderFunction","NavMenu","navOutput","linkDeets","NavItem","Navbar","NavbarBrand","navbar","Layout","fluid","children","App","routeOpts","render","Boolean","hostname","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","then","ReactDOM","StrictMode","basename","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.57189ea0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport \"./DisplayList.css\";\r\n\r\nexport class DisplayColumn {\r\n  constructor(colDisplay, listDisplayFunc, ascendingSortFunction) {\r\n    this.colDisplay = colDisplay;\r\n    this.listDisplayFunc = listDisplayFunc;\r\n    this.ascendingSortFunction = ascendingSortFunction;\r\n\r\n    this.sortFunc = this.sortFunc.bind(this);\r\n    this.sortAscending = this.sortAscending.bind(this);\r\n    this.sortDescending = this.sortDescending.bind(this);\r\n  }\r\n\r\n  sortFunc(isAscending) {\r\n    return isAscending ? this.sortAscending : this.sortDescending;\r\n  }\r\n\r\n  sortAscending(a, b) {\r\n    return this.ascendingSortFunction(a, b);\r\n  }\r\n\r\n  sortDescending(a, b) {\r\n    return -this.ascendingSortFunction(a, b);\r\n  }\r\n}\r\n\r\nexport function DisplayList(props) {\r\n  // headers should be a collection of DisplayColumn instances\r\n  let headers = props.headers;\r\n  let items = props.items;\r\n\r\n  let [sortByIdx, setSortByIdx] = useState(0);\r\n  let [sortAscending, setSortAscending] = useState(true);\r\n\r\n  let headerRowContents = [];\r\n  for (let i = 0; i < headers.length; ++i) {\r\n    headerRowContents.push(\r\n      <Col\r\n        key={`dl-h-col-${i}`}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n\r\n          if (i === sortByIdx) {\r\n            setSortAscending(!sortAscending);\r\n          } else {\r\n            setSortByIdx(i);\r\n            setSortAscending(true);\r\n          }\r\n        }}\r\n        className={`list-header ${i === sortByIdx && \"active\"}`}\r\n      >\r\n        {headers[i].colDisplay}{\" \"}\r\n        {i === sortByIdx && <>{sortAscending ? \"^\" : \"v\"}</>}\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  let filterObject = props.filterObject;\r\n  let filterKeys = Object.keys(filterObject);\r\n\r\n  for (let i = 0; i < filterKeys.length; ++i) {\r\n    items = items.filter(filterObject[filterKeys[i]]);\r\n  }\r\n\r\n  items.sort(headers[sortByIdx].sortFunc(sortAscending));\r\n\r\n  let contentsRows = [];\r\n  let itemLen = items.length;\r\n  for (let i = 0; i < itemLen; ++i) {\r\n    contentsRows.push();\r\n  }\r\n\r\n  contentsRows = items.map((item, idx) => {\r\n    return (\r\n      <DisplayListRow\r\n        key={`row-${props.idFunction(item)}`}\r\n        headers={headers}\r\n        item={item}\r\n        idFunction={props.idFunction}\r\n        pathRoot={props.pathRoot}\r\n        isSelected={props.idFunction(item) === props.selectedId}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* <span>{items.length}</span> */}\r\n      <Row className=\"mx-0\">{headerRowContents}</Row>\r\n      <ul className=\"element-list\">{contentsRows}</ul>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction DisplayListRow(props) {\r\n  let history = useHistory();\r\n\r\n  let { headers, item, idFunction, pathRoot, isSelected } = props;\r\n\r\n  let innerCols = [];\r\n\r\n  let desiredId = idFunction(item);\r\n\r\n  let headerLen = headers.length;\r\n  for (let h = 0; h < headerLen; ++h) {\r\n    let headerObj = headers[h];\r\n\r\n    innerCols.push(\r\n      <Col key={`${desiredId}-${h}`}>{headerObj.listDisplayFunc(item)}</Col>\r\n    );\r\n  }\r\n\r\n  let pathRoute = `${pathRoot}/${desiredId}`;\r\n\r\n  let activeName = isSelected ? \"active\" : \"\";\r\n\r\n  return (\r\n    <li\r\n      onClick={(e) => {\r\n        history.push(pathRoute);\r\n        e.preventDefault();\r\n      }}\r\n      className={activeName}\r\n    >\r\n      <Row>{innerCols}</Row>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nfunction BlockRow_Text(key, label, value, setter) {\r\n    return (\r\n        <Row key={key}>\r\n            <Col className=\"col-3\">{label}:</Col>\r\n            <Col>\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    style={{\r\n                        width: \"inherit\",\r\n                    }}\r\n                    onChange={(e) => {\r\n                        e.preventDefault();\r\n                        setter(e.target.value);\r\n                    }}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport function HarvestedItemFilterBlock(props) {\r\n    let [nameField, setNameField] = useState(\"\");\r\n\r\n    let filterRows = [];\r\n\r\n    filterRows.push(\r\n        BlockRow_Text(filterRows.length, \"Name\", nameField, setNameField)\r\n    );\r\n\r\n    return (\r\n        <form\r\n            className=\"border\"\r\n            onSubmit={(e) => {\r\n                let obj = {};\r\n                if (nameField !== \"\") {\r\n                    obj.Name = (obj) => {\r\n                        return obj.Name.toLowerCase().match(\r\n                            nameField.toLowerCase()\r\n                        );\r\n                    };\r\n                }\r\n\r\n                props.submitFilter(obj);\r\n                e.preventDefault();\r\n            }}\r\n        >\r\n            {filterRows}\r\n            <button type=\"submit\" style={{ display: \"none\" }}>\r\n                Apply Filter\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n","// eslint-disable-next-line\r\nArray.prototype.last =\r\n  Array.prototype.last ||\r\n  function (arg) {\r\n    if (arg !== undefined) this[this.length - 1] = arg;\r\n    else return this[this.length - 1];\r\n  };\r\n// eslint-disable-next-line\r\nString.prototype.last =\r\n  String.prototype.last ||\r\n  function () {\r\n    return this[this.length - 1];\r\n  };\r\n\r\nexport function sortAscending(a, b) {\r\n  let x = a.toLowerCase();\r\n  let y = b.toLowerCase();\r\n\r\n  if (y < x) {\r\n    return 1;\r\n  }\r\n  if (x < y) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nconst splitFirstSpace = function (string) {\r\n  const firstIndex = string.indexOf(\" \");\r\n  return firstIndex === -1\r\n    ? [string, \"\"]\r\n    : [string.substr(0, firstIndex), string.substr(firstIndex + 1)];\r\n};\r\n\r\nfunction _splitByTagsBase(leadingCharacter) {\r\n  return function (string) {\r\n    let tagDepth = 0;\r\n    let char, char2;\r\n    const out = [];\r\n    let curStr = \"\";\r\n    let isLastOpen = false;\r\n\r\n    const len = string.length;\r\n    for (let i = 0; i < len; ++i) {\r\n      char = string[i];\r\n      char2 = string[i + 1];\r\n\r\n      switch (char) {\r\n        case \"{\":\r\n          isLastOpen = true;\r\n          if (char2 === leadingCharacter) {\r\n            if (tagDepth++ > 0) {\r\n              curStr += \"{\";\r\n            } else {\r\n              out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n              curStr = `{${leadingCharacter}`;\r\n              ++i;\r\n            }\r\n          } else curStr += \"{\";\r\n          break;\r\n\r\n        case \"}\":\r\n          isLastOpen = false;\r\n          curStr += \"}\";\r\n          if (tagDepth !== 0 && --tagDepth === 0) {\r\n            out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n            curStr = \"\";\r\n          }\r\n          break;\r\n\r\n        case leadingCharacter: {\r\n          if (!isLastOpen) curStr += \"<VE_LEAD>\";\r\n          else curStr += leadingCharacter;\r\n          break;\r\n        }\r\n\r\n        default:\r\n          isLastOpen = false;\r\n          curStr += char;\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (curStr) out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n\r\n    return out;\r\n  };\r\n}\r\n\r\nconst splitByTags = _splitByTagsBase(\"@\");\r\n\r\nconst attackTagToFull = function (tagStr) {\r\n  function renderTag(tags) {\r\n    return `${\r\n      tags.includes(\"m\")\r\n        ? \"Melee \"\r\n        : tags.includes(\"r\")\r\n        ? \"Ranged \"\r\n        : tags.includes(\"g\")\r\n        ? \"Magical \"\r\n        : tags.includes(\"a\")\r\n        ? \"Area \"\r\n        : \"\"\r\n    }${tags.includes(\"w\") ? \"Weapon \" : tags.includes(\"s\") ? \"Spell \" : \"\"}`;\r\n  }\r\n\r\n  const tagGroups = tagStr\r\n    .toLowerCase()\r\n    .split(\",\")\r\n    .map((it) => it.trim())\r\n    .filter((it) => it)\r\n    .map((it) => it.split(\"\"));\r\n  if (tagGroups.length > 1) {\r\n    const seen = new Set(tagGroups.last());\r\n    for (let i = tagGroups.length - 2; i >= 0; --i) {\r\n      tagGroups[i] = tagGroups[i].filter((it) => {\r\n        const out = !seen.has(it);\r\n        seen.add(it);\r\n        return out;\r\n      });\r\n    }\r\n  }\r\n  return `${tagGroups.map((it) => renderTag(it)).join(\" or \")}Attack:`;\r\n};\r\n\r\nconst _splitByPipeBase = function (leadingCharacter) {\r\n  return function (string) {\r\n    let tagDepth = 0;\r\n    let char, char2;\r\n    const out = [];\r\n    let curStr = \"\";\r\n\r\n    const len = string.length;\r\n    for (let i = 0; i < len; ++i) {\r\n      char = string[i];\r\n      char2 = string[i + 1];\r\n\r\n      switch (char) {\r\n        case \"{\":\r\n          if (char2 === leadingCharacter) tagDepth++;\r\n          curStr += \"{\";\r\n\r\n          break;\r\n\r\n        case \"}\":\r\n          if (tagDepth) tagDepth--;\r\n          curStr += \"}\";\r\n\r\n          break;\r\n\r\n        case \"|\": {\r\n          if (tagDepth) curStr += \"|\";\r\n          else {\r\n            out.push(curStr);\r\n            curStr = \"\";\r\n          }\r\n          break;\r\n        }\r\n\r\n        default: {\r\n          curStr += char;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (curStr) out.push(curStr);\r\n    return out;\r\n  };\r\n};\r\n\r\nconst splitTagByPipe = _splitByPipeBase(\"@\");\r\n\r\nconst _stripTagLayer = function (str) {\r\n  if (str.includes(\"{@\")) {\r\n    const tagSplit = splitByTags(str);\r\n    return tagSplit\r\n      .filter((it) => it)\r\n      .map((it) => {\r\n        if (it.startsWith(\"{@\")) {\r\n          let [tag, text] = splitFirstSpace(it.slice(1, -1));\r\n          text = text.replace(/<\\$([^$]+)\\$>/gi, \"\"); // remove any variable tags\r\n          switch (tag) {\r\n            case \"@b\":\r\n            case \"@bold\":\r\n            case \"@i\":\r\n            case \"@italic\":\r\n            case \"@s\":\r\n            case \"@strike\":\r\n            case \"@u\":\r\n            case \"@underline\":\r\n              return text;\r\n\r\n            case \"@h\":\r\n              return \"Hit: \";\r\n\r\n            case \"@dc\":\r\n              return `DC ${text}`;\r\n\r\n            case \"@atk\":\r\n              return attackTagToFull(text);\r\n\r\n            case \"@chance\":\r\n            case \"@d20\":\r\n            case \"@damage\":\r\n            case \"@dice\":\r\n            case \"@hit\":\r\n            case \"@recharge\": {\r\n              const [rollText, displayText] = splitTagByPipe(text);\r\n              switch (tag) {\r\n                case \"@damage\":\r\n                case \"@dice\": {\r\n                  return displayText || rollText.replace(/;/g, \"/\");\r\n                }\r\n                case \"@d20\":\r\n                case \"@hit\": {\r\n                  return (\r\n                    displayText ||\r\n                    (() => {\r\n                      const n = Number(rollText);\r\n                      if (isNaN(n)) {\r\n                        throw new Error(\r\n                          `Could not parse \"${rollText}\" as a number!`\r\n                        );\r\n                      }\r\n                      return `${n >= 0 ? \"+\" : \"\"}${n}`;\r\n                    })()\r\n                  );\r\n                }\r\n                case \"@recharge\": {\r\n                  const asNum = Number(rollText || 6);\r\n                  if (isNaN(asNum)) {\r\n                    throw new Error(\r\n                      `Could not parse \"${rollText}\" as a number!`\r\n                    );\r\n                  }\r\n                  return `(Recharge ${asNum}${asNum < 6 ? `\\u20136` : \"\"})`;\r\n                }\r\n                case \"@chance\": {\r\n                  return displayText || `${rollText} percent`;\r\n                }\r\n                default:\r\n                  throw new Error(`Unhandled tag: ${tag}`);\r\n              }\r\n            }\r\n\r\n            case \"@comic\":\r\n            case \"@comicH1\":\r\n            case \"@comicH2\":\r\n            case \"@comicH3\":\r\n            case \"@comicH4\":\r\n            case \"@comicNote\":\r\n            case \"@note\":\r\n            case \"@sense\":\r\n            case \"@skill\": {\r\n              return text;\r\n            }\r\n\r\n            case \"@5etools\":\r\n            case \"@adventure\":\r\n            case \"@book\":\r\n            case \"@filter\":\r\n            case \"@footnote\":\r\n            case \"@link\":\r\n            case \"@scaledice\":\r\n            case \"@scaledamage\":\r\n            case \"@loader\":\r\n            case \"@color\":\r\n            case \"@highlight\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts[0];\r\n            }\r\n\r\n            case \"@area\": {\r\n              const [\r\n                compactText,\r\n                /*areaId,*/ flags,\r\n                //...others\r\n              ] = splitTagByPipe(text);\r\n\r\n              return flags && flags.includes(\"x\")\r\n                ? compactText\r\n                : `${\r\n                    flags && flags.includes(\"u\") ? \"A\" : \"a\"\r\n                  }rea ${compactText}`;\r\n            }\r\n\r\n            case \"@action\":\r\n            case \"@background\":\r\n            case \"@boon\":\r\n            case \"@class\":\r\n            case \"@condition\":\r\n            case \"@creature\":\r\n            case \"@cult\":\r\n            case \"@disease\":\r\n            case \"@feat\":\r\n            case \"@hazard\":\r\n            case \"@item\":\r\n            case \"@language\":\r\n            case \"@object\":\r\n            case \"@optfeature\":\r\n            case \"@psionic\":\r\n            case \"@race\":\r\n            case \"@reward\":\r\n            case \"@vehicle\":\r\n            case \"@spell\":\r\n            case \"@status\":\r\n            case \"@table\":\r\n            case \"@trap\":\r\n            case \"@variantrule\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 3 ? parts[2] : parts[0];\r\n            }\r\n\r\n            case \"@deity\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 4 ? parts[3] : parts[0];\r\n            }\r\n\r\n            case \"@classFeature\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 6 ? parts[5] : parts[0];\r\n            }\r\n\r\n            case \"@subclassFeature\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 8 ? parts[7] : parts[0];\r\n            }\r\n\r\n            case \"@homebrew\": {\r\n              const [newText, oldText] = splitTagByPipe(text);\r\n              if (newText && oldText) {\r\n                return `${newText} [this is a homebrew addition, replacing the following: \"${oldText}\"]`;\r\n              } else if (newText) {\r\n                return `${newText} [this is a homebrew addition]`;\r\n              } else if (oldText) {\r\n                return `[the following text has been removed due to homebrew: ${oldText}]`;\r\n              } else\r\n                throw new Error(`Homebrew tag had neither old nor new text!`);\r\n            }\r\n\r\n            default:\r\n              throw new Error(`Unhandled tag: \"${tag}\"`);\r\n          }\r\n        } else return it;\r\n      })\r\n      .join(\"\");\r\n  }\r\n  return str;\r\n};\r\n\r\nexport function stripTags(str) {\r\n  try {\r\n    if (!str) return str;\r\n    let nxtStr = _stripTagLayer(str);\r\n    while (nxtStr.length !== str.length) {\r\n      str = nxtStr;\r\n      nxtStr = _stripTagLayer(str);\r\n    }\r\n    return nxtStr;\r\n  } catch (err) {\r\n    console.error(`On [${str}]: ${err}`);\r\n    return str;\r\n  }\r\n}\r\n","import { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\n\r\nexport class Monster {\r\n  static from5eSource(fiveEState) {\r\n    let feType = null;\r\n\r\n    switch (typeof fiveEState.type) {\r\n      case \"string\":\r\n        feType = new CreatureType({ type: fiveEState.type });\r\n        break;\r\n      case \"object\":\r\n        let { type, tags, swarmSize } = fiveEState.type;\r\n\r\n        let inObj = {\r\n          type: type,\r\n          swarmSize: swarmSize,\r\n        };\r\n        if (tags) {\r\n          inObj.tags = tags.map((tg) =>\r\n            typeof tg === \"string\" ? { tag: tg, prefix: \"\" } : tg\r\n          );\r\n        }\r\n\r\n        feType = new CreatureType(inObj);\r\n\r\n        break;\r\n      default:\r\n        console.log(\r\n          `Unhandled creatureType type: ${typeof fiveEState.type} => ${\r\n            fiveEState.type\r\n          } of ${fiveEState.name}`\r\n        );\r\n        break;\r\n    }\r\n\r\n    let feCR = null;\r\n\r\n    switch (typeof fiveEState.cr) {\r\n      case \"string\":\r\n        feCR = new ChallengeRating({ cr: fiveEState.cr });\r\n        break;\r\n      case \"object\":\r\n        feCR = new ChallengeRating(fiveEState.cr);\r\n        break;\r\n      case \"undefined\":\r\n        feCR = new ChallengeRating({ cr: \"-\" });\r\n        break;\r\n      default:\r\n        console.log(\r\n          `Unhandled CR type: ${typeof fiveEState.cr} => ${fiveEState.cr} of ${\r\n            fiveEState.name\r\n          }`\r\n        );\r\n        break;\r\n    }\r\n\r\n    let feACLines = [];\r\n    for (let i = 0; i < fiveEState.ac.length; ++i) {\r\n      let line = fiveEState.ac[i];\r\n      let acObj = {};\r\n\r\n      switch (typeof line) {\r\n        case \"number\":\r\n          acObj.ac = line;\r\n          break;\r\n        case \"string\":\r\n          acObj.ac = Number.parseInt(line);\r\n          break;\r\n        case \"object\":\r\n          acObj.ac = Number.parseInt(line.ac);\r\n          acObj.from = line.from;\r\n          acObj.condition = line.condition;\r\n          break;\r\n        default:\r\n          console.log(\r\n            `Unhandled AC type: ${typeof fiveEState.ac} => ${\r\n              fiveEState.ac\r\n            } of ${fiveEState.name}`\r\n          );\r\n          break;\r\n      }\r\n\r\n      feACLines.push(new ArmorClass(acObj));\r\n    }\r\n\r\n    let feAlignment = [];\r\n    if (!fiveEState.alignment) {\r\n      // nothing\r\n    } else if (fiveEState.alignment.every((ent) => typeof ent === \"string\")) {\r\n      feAlignment.push(new Alignment({ alignment: fiveEState.alignment }));\r\n    } else {\r\n      feAlignment = fiveEState.alignment.map((ali) => new Alignment(ali));\r\n    }\r\n\r\n    return new Monster({\r\n      name: fiveEState.name, //   name,\r\n      referenceCardSize: 0, // referenceCardSize,\r\n      source: fiveEState.source, // source,\r\n      otherSources: fiveEState.otherSources, // otherSources,\r\n      creatureSize: fiveEState.size, // creatureSize,\r\n      creatureType: feType, // creatureType,\r\n      stats: new StatsBlock(\r\n        fiveEState\r\n        // fiveEState.str,\r\n        // fiveEState.dex,\r\n        // fiveEState.con,\r\n        // fiveEState.int,\r\n        // fiveEState.wis,\r\n        // fiveEState.cha\r\n      ), // stats,\r\n      armorClass: feACLines, // armorClass,\r\n      challengeRating: feCR, // challengeRating,\r\n      health: new HealthBlock(fiveEState.hp), // health,\r\n      passivePerc: fiveEState.passive, // passivePerc,\r\n      languages: fiveEState.languages, // languages,\r\n      speed: new SpeedBlock({\r\n        walk: fiveEState.speed.walk,\r\n        fly: fiveEState.speed.fly,\r\n        swim: fiveEState.speed.swim,\r\n        climb: fiveEState.speed.climb,\r\n        burrow: fiveEState.speed.burrow,\r\n        canHover: fiveEState.speed.canHover,\r\n      }), // speed,\r\n      saves: fiveEState.save, // saves,\r\n      skills: fiveEState.skill, // skills,\r\n      senses: fiveEState.senses, // senses,\r\n      alignment: feAlignment, // alignment\r\n      resistances: fiveEState.resist, // resistances\r\n      immunities: fiveEState.immune, // immunity\r\n      conditionImmunities: fiveEState.conditionImmune, // conditionImmunities\r\n      traits: fiveEState.trait, //traits\r\n      spellcasting: fiveEState.spellcasting, //spellcasting\r\n      actions: fiveEState.action, //actions\r\n      reactions: fiveEState.reaction, //reactions\r\n      environments: fiveEState.environment, //environments\r\n      legendaryHeader: fiveEState.legendaryHeader, //legendaryHeader\r\n      legendaryActions: fiveEState.legendary, //legendaryActions\r\n    });\r\n  }\r\n\r\n  constructor({\r\n    name,\r\n    referenceCardSize,\r\n    source,\r\n    otherSources,\r\n    creatureSize,\r\n    creatureType,\r\n    stats,\r\n    armorClass,\r\n    challengeRating,\r\n    health,\r\n    passivePerc,\r\n    languages,\r\n    speed,\r\n    saves,\r\n    skills,\r\n    senses,\r\n    alignment,\r\n    resistances,\r\n    immunities,\r\n    conditionImmunities,\r\n    traits,\r\n    spellcasting,\r\n    actions,\r\n    reactions,\r\n    environments,\r\n    legendaryHeader,\r\n    legendaryActions,\r\n    harvestingTable,\r\n    trinketTableType,\r\n  }) {\r\n    this.name = name;\r\n    this.cardSize = referenceCardSize;\r\n    this.source = source;\r\n    this.otherSources = otherSources || [];\r\n    this.size = creatureSize;\r\n    this.type = creatureType;\r\n    this.speed = speed;\r\n    this.stats = stats;\r\n    this.saves = saves || null;\r\n    this.skills = skills;\r\n    this.senses = senses;\r\n    this.armorClass = armorClass;\r\n    this.health = health;\r\n    this.passivePerc = passivePerc;\r\n    this.languages = languages;\r\n    this.challengeRating = challengeRating;\r\n    this.resistances = resistances || null;\r\n    this.immunities = immunities || null;\r\n    this.conditionImmunities = conditionImmunities || null;\r\n    this.alignment = alignment;\r\n    this.traits = traits || [];\r\n    this.spellcasting = spellcasting || [];\r\n    this.actions = actions || [];\r\n    this.reactions = reactions || [];\r\n    this.environments = environments || [];\r\n    this.legendaryHeader = legendaryHeader;\r\n    this.legendaryActions = legendaryActions || [];\r\n    this.harvestingTable = harvestingTable || null;\r\n    this.trinketTableType = trinketTableType || null;\r\n  }\r\n\r\n  get id() {\r\n    return (\r\n      this.name.replace(/[\\s'\\-()]/g, \"\") +\r\n      \"_\" +\r\n      this.source\r\n    ).toLowerCase();\r\n  }\r\n\r\n  static stringFromSize(size) {\r\n    switch (size) {\r\n      case \"T\":\r\n        return \"Tiny\";\r\n      case \"S\":\r\n        return \"Small\";\r\n      case \"M\":\r\n        return \"Medium\";\r\n      case \"L\":\r\n        return \"Large\";\r\n      case \"H\":\r\n        return \"Huge\";\r\n      case \"G\":\r\n        return \"Gargantuan\";\r\n      default:\r\n        return `?[${size}]?`;\r\n    }\r\n  }\r\n}\r\n\r\nclass Alignment {\r\n  constructor({ alignment, chance = 100 }) {\r\n    this.alignment = alignment;\r\n    this.chance = chance;\r\n  }\r\n\r\n  get convertedString() {\r\n    let str = this.alignment\r\n      .map((k) => {\r\n        switch (k) {\r\n          case \"N\":\r\n            return \"neutral\";\r\n          case \"C\":\r\n            return \"chaotic\";\r\n          case \"G\":\r\n            return \"good\";\r\n          case \"L\":\r\n            return \"lawful\";\r\n          case \"E\":\r\n            return \"evil\";\r\n          case \"A\":\r\n            return \"any alignment\";\r\n          case \"U\":\r\n            return \"unaligned\";\r\n          default:\r\n            return `?${k}?`;\r\n        }\r\n      })\r\n      .join(\" \");\r\n\r\n    if (this.chance !== 100) {\r\n      str += ` (${this.chance}%)`;\r\n    }\r\n    return str;\r\n  }\r\n}\r\n\r\n// Monster Bits\r\nclass ArmorClass {\r\n  constructor({ ac, from, condition }) {\r\n    this.ac = ac;\r\n    this.from = from;\r\n    this.condition = condition;\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    var strOut = this.ac;\r\n\r\n    if (this.from) {\r\n      strOut = `${this.ac} (${this.from.join(\", \")})`;\r\n    } else if (this.condition) {\r\n      strOut = `${this.ac} (${this.condition.join(\", \")})`;\r\n    }\r\n\r\n    return strOut;\r\n  }\r\n}\r\n\r\nexport class CreatureType {\r\n  constructor({ type, tags, swarmSize }) {\r\n    this.type = type;\r\n    this.tags = tags || [];\r\n    this.swarmSize = swarmSize;\r\n  }\r\n\r\n  get displayString() {\r\n    let str = this.type;\r\n\r\n    if (this.swarmSize) {\r\n      return `Swarm of ${Monster.stringFromSize(\r\n        this.swarmSize\r\n      ).toLowerCase()} ${this.type}${this.type !== \"undead\" ? \"s\" : \"\"}`;\r\n    }\r\n\r\n    if (this.tags.length > 0) {\r\n      str += ` (${this.tags\r\n        .map((tg) => {\r\n          var tagOut = tg.tag;\r\n          if (tg.prefix) tagOut = tg.prefix + \" \" + tagOut;\r\n          return tagOut;\r\n        })\r\n        .join(\", \")})`;\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n  static sortAscending(a, b) {\r\n    let outVal = sortStrAsc(a.type, b.type);\r\n\r\n    if (outVal !== 0) {\r\n      return outVal;\r\n    }\r\n\r\n    outVal = a.tags.length - b.tags.length;\r\n\r\n    if (outVal !== 0) {\r\n      return outVal;\r\n    }\r\n\r\n    for (let i = 0; i < a.tags.length; ++i) {\r\n      outVal = sortStrAsc(a.tags[i].tag, b.tags[i].tag);\r\n\r\n      if (outVal !== 0) {\r\n        return outVal;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport class ChallengeRating {\r\n  static sortAscending(a, b) {\r\n    if (a === null) return -1;\r\n    if (b === null) return 1;\r\n\r\n    let out = a.cr - b.cr;\r\n\r\n    if (out !== 0) {\r\n      return out;\r\n    }\r\n\r\n    out = a.lair - b.lair;\r\n\r\n    if (out !== 0) {\r\n      return out;\r\n    }\r\n\r\n    out = a.coven - b.coven;\r\n\r\n    return out;\r\n  }\r\n\r\n  constructor({ cr, lair, coven }) {\r\n    this.cr = cr || null;\r\n    var matches = /\\d+\\/(\\d+)/g.exec(this.cr);\r\n    if (matches !== null && matches.length > 0) {\r\n      this.cr = 1 / Number.parseInt(matches[1]);\r\n    } else this.cr = Number.parseInt(this.cr);\r\n    if (Number.isNaN(this.cr)) {\r\n      this.cr = -1;\r\n    }\r\n    this.lair = lair || null;\r\n    this.coven = coven || null;\r\n  }\r\n\r\n  get displayString() {\r\n    if (this.cr === -1) {\r\n      return \"-\";\r\n    }\r\n\r\n    let crOut = this.cr;\r\n\r\n    if (typeof crOut === \"number\" && crOut < 1 && crOut !== 0) {\r\n      crOut = `1/${1 / crOut}`;\r\n    }\r\n\r\n    if (this.coven !== null) {\r\n      crOut += ` (${this.coven} in coven)`;\r\n    }\r\n\r\n    if (this.lair !== null) {\r\n      crOut += ` (${this.lair} in lair)`;\r\n    }\r\n\r\n    return crOut;\r\n  }\r\n}\r\n\r\nclass HealthBlock {\r\n  constructor({ average, formula }) {\r\n    this.average = average;\r\n    this.formula = formula;\r\n  }\r\n}\r\n\r\nconst SPEED_KEYS = [\"walk\", \"fly\", \"climb\", \"swim\", \"burrow\"];\r\nclass SpeedBlock {\r\n  constructor({ walk, fly, climb, swim, burrow, canHover }) {\r\n    this.walk = walk !== undefined ? new SpeedEntry(walk) : null;\r\n    this.fly = fly !== undefined ? new SpeedEntry(fly) : null;\r\n    this.climb = climb !== undefined ? new SpeedEntry(climb) : null;\r\n    this.swim = swim !== undefined ? new SpeedEntry(swim) : null;\r\n    this.burrow = burrow !== undefined ? new SpeedEntry(burrow) : null;\r\n    this.canHover = canHover !== undefined ? canHover : false;\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    let strOut = SPEED_KEYS.map((val) => {\r\n      if (this[val]) {\r\n        if (val !== \"walk\") return `${val} ${this[val].simpleDisplay}`;\r\n        else return `${this[val].simpleDisplay}`;\r\n      }\r\n      return \"\";\r\n    })\r\n      .filter((spd) => spd)\r\n      .join(\", \");\r\n\r\n    return strOut;\r\n  }\r\n}\r\n\r\nclass SpeedEntry {\r\n  constructor(inObj) {\r\n    if (typeof inObj === \"number\" || inObj === 0) {\r\n      this.ft = inObj;\r\n      this.condition = null;\r\n    } else {\r\n      this.ft = inObj.number;\r\n      this.condition = inObj.condition;\r\n    }\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    if (!this.condition) {\r\n      return `${this.ft} ft.`;\r\n    } else {\r\n      return `${this.ft} ft. ${this.condition}`;\r\n    }\r\n  }\r\n}\r\n\r\nclass StatsBlock {\r\n  constructor({ str, dex, con, int, wis, cha }) {\r\n    this.str = str;\r\n    this.dex = dex;\r\n    this.con = con;\r\n    this.int = int;\r\n    this.wis = wis;\r\n    this.cha = cha;\r\n  }\r\n}\r\n","export class HarvestingTable {\r\n  static fromOld(oldMonster) {\r\n    if (!oldMonster.HarvestingTable.Rows) return null;\r\n\r\n    return new HarvestingTable({\r\n      name: oldMonster.Name,\r\n      rows: oldMonster.HarvestingTable.Rows.map(\r\n        (row) =>\r\n          new HarvestingTableRow({\r\n            difficultyClass: row.DifficultyClass,\r\n            itemNameReference: row.ItemNameRef,\r\n            quantity: row.Quantity,\r\n            notes: row.Notes,\r\n          })\r\n      ),\r\n    });\r\n  }\r\n\r\n  constructor({ name, rows }) {\r\n    this.name = name;\r\n    this.rows = rows.map((r) => new HarvestingTableRow(r));\r\n  }\r\n}\r\n\r\nclass HarvestingTableRow {\r\n  constructor({ difficultyClass, itemNameReference, quantity, notes }) {\r\n    this.difficultyClass = difficultyClass;\r\n    this.itemNameReference = itemNameReference;\r\n    this.quantity = quantity;\r\n    this.notes = notes;\r\n  }\r\n}\r\n","export class TrinketTable {\r\n  static fromOld({ TrinketTableType, Rows }) {\r\n    return new TrinketTable({\r\n      trinketTableType: TrinketTableType,\r\n      rows: Rows.map(\r\n        (row) =>\r\n          new TrinketTableRow({\r\n            d8Roll: row.D8Roll,\r\n            descriptionLine: row.DescriptionLine,\r\n            value: row.ValueGP,\r\n            weight: row.WeightLB,\r\n          })\r\n      ),\r\n    });\r\n  }\r\n\r\n  constructor({ trinketTableType, rows }) {\r\n    this.trinketTableType = trinketTableType;\r\n    this.rows = rows;\r\n  }\r\n}\r\n\r\nclass TrinketTableRow {\r\n  constructor({ d8Roll, descriptionLine, value, weight }) {\r\n    this.d8Roll = d8Roll;\r\n    this.descriptionLine = descriptionLine;\r\n    this.value = value;\r\n    this.weight = weight;\r\n  }\r\n}\r\n","export class CraftableItem {\r\n  static fromOld(oldItem) {\r\n    return new CraftableItem({\r\n      name: oldItem.Name,\r\n      crafter: oldItem.Crafter,\r\n      rarity: oldItem.Rarity,\r\n      requiresAttunement: oldItem.RequiresAttunement,\r\n      description: oldItem.Description,\r\n      materials: oldItem.Materials.map((matRow) => {\r\n        return { componentId: matRow.ComponentId, quantity: matRow.Quantity };\r\n      }),\r\n      type: oldItem.Type,\r\n      materialGrouping: oldItem.MaterialGrouping,\r\n      attunementNote: oldItem.AttunementNote,\r\n    });\r\n  }\r\n\r\n  constructor({\r\n    name,\r\n    crafter,\r\n    rarity,\r\n    requiresAttunement,\r\n    description,\r\n    materials,\r\n    type,\r\n    materialGrouping,\r\n    attunementNote,\r\n  }) {\r\n    this.name = name;\r\n    this.crafter = crafter;\r\n    this.rarity = rarity;\r\n    this.requiresAttunement = requiresAttunement;\r\n    this.description = description;\r\n    this.materials = materials;\r\n    this.type = type;\r\n    this.materialGrouping = materialGrouping;\r\n    this.attunementNote = attunementNote;\r\n  }\r\n\r\n  get id() {\r\n    return this.name.toLowerCase().replace(/\\s+/g, \"_\");\r\n  }\r\n}\r\n","export class HarvestedItem {\r\n  static fromOld(oldItem) {\r\n    return new HarvestedItem({\r\n      name: oldItem.Name,\r\n      value: oldItem.ValueGP,\r\n      weight: oldItem.WeightLB,\r\n      craftingUsage: oldItem.CraftingUsage,\r\n      description: oldItem.Description,\r\n      useText: oldItem.UseText,\r\n      requiredToolNames: oldItem.RequiredToolNames,\r\n    });\r\n  }\r\n\r\n  constructor({\r\n    name,\r\n    value,\r\n    weight,\r\n    craftingUsage,\r\n    description,\r\n    useText,\r\n    requiredToolNames,\r\n  }) {\r\n    this.name = name;\r\n    this.value = value;\r\n    this.weight = weight;\r\n    this.craftingUsage = craftingUsage;\r\n    this.description = description;\r\n    this.useText = useText;\r\n    this.requiredToolNames = requiredToolNames;\r\n  }\r\n\r\n  get id() {\r\n    return this.name.replace(/\\s+/gi, \"_\").replace(/\\//gi, \"-\").toLowerCase();\r\n  }\r\n}\r\n","import Data from \"../data/system-state.json\";\r\nimport Index from \"../data/bestiary/index.json\";\r\nimport { Monster } from \"../data/Monster\";\r\nimport { HarvestingTable } from \"../data/HarvestingTable\";\r\nimport { TrinketTable } from \"../data/TrinketTable\";\r\nimport { CraftableItem } from \"../data/CraftableItem\";\r\nimport { HarvestedItem } from \"../data/HarvestedItem\";\r\n\r\nconst $ = window.$;\r\n\r\nasync function ajaxJson(fileName) {\r\n  return new Promise((resolve, reject) => {\r\n    $.getJSON(`data/bestiary/${fileName}`, (data) => {\r\n      resolve(data);\r\n    });\r\n  });\r\n}\r\n\r\nasync function Load5eMonsterFile({ key, fileName }) {\r\n  let localKey = key;\r\n\r\n  // check if already processed or already being processed\r\n  if (Storage.processedKeys.includes(localKey.toLowerCase())) {\r\n    console.log(`[${localKey}] already done.`);\r\n    return;\r\n  } else if (Storage.processingKeys.includes(localKey.toLowerCase())) {\r\n    console.log(`[${localKey}] being processed.`);\r\n    return;\r\n  }\r\n\r\n  Storage.processingKeys.push(localKey.toLowerCase());\r\n\r\n  console.log(`Starting on key[${localKey.toLowerCase()}]`);\r\n\r\n  var data = await ajaxJson(fileName);\r\n  if (data._meta) {\r\n    var meta = data._meta;\r\n    // await for any dependencies to be loaded in\r\n    if (meta.dependencies && meta.dependencies.monster) {\r\n      for (let jdx = 0; jdx < meta.dependencies.monster.length; ++jdx) {\r\n        var depKey = meta.dependencies.monster[jdx];\r\n        console.log(\r\n          `Starting on key[${depKey.toLowerCase()}] required as a dependency of [${localKey.toLowerCase()}]`\r\n        );\r\n        await Load5eMonsterFile({\r\n          key: depKey,\r\n          fileName: `bestiary-${depKey.toLowerCase()}.json`,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let idx = 0; idx < data.monster.length; ++idx) {\r\n    let mon = data.monster[idx];\r\n\r\n    if (mon._copy) {\r\n      // console.log(\r\n      //   `For now, skipping _copy prop monsters ... on ${mon.name}`\r\n      // );\r\n      continue;\r\n    }\r\n\r\n    try {\r\n      mon = Monster.from5eSource(mon);\r\n\r\n      if (!Storage.monsterDict[mon.id]) {\r\n        Storage.monsterDict[mon.id] = mon;\r\n      }\r\n    } catch (err) {\r\n      console.error(\r\n        `Loading on monster: ${mon.name} in file: ${fileName} failed.\\n${err}`\r\n      );\r\n    }\r\n  }\r\n\r\n  console.log(`${localKey} processed.`);\r\n  Storage.processedKeys.push(localKey.toLowerCase());\r\n}\r\n\r\n// let initialised = false;\r\nconst Storage = {\r\n  _init: false,\r\n\r\n  // dictionaries\r\n  monsterDict: {},\r\n  subStateMonsterDict: {},\r\n  harvestingTableDict: {},\r\n  harvestableItemDict: {},\r\n  trinketTableDict: {},\r\n  craftableItemDict: {},\r\n\r\n  processingKeys: [],\r\n  processedKeys: [],\r\n\r\n  Init: async () => {\r\n    if (Storage._init) {\r\n      console.log(\"Storage already initialised\");\r\n      return;\r\n    }\r\n\r\n    for (let key in Index) {\r\n      console.log(`${key} :: ${Index[key]}`);\r\n\r\n      await Load5eMonsterFile({ key: key, fileName: Index[key] });\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.monsters.length; ++idx) {\r\n      let monster = new SubStateMonster(Data.monsters[idx]);\r\n      Storage.subStateMonsterDict[monster.id] = monster;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.harvestingTables.length; ++idx) {\r\n      let harvestingTable = new HarvestingTable(Data.harvestingTables[idx]);\r\n      Storage.harvestingTableDict[harvestingTable.name] = harvestingTable;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.harvestedItems.length; ++idx) {\r\n      let harvestedItem = new HarvestedItem(Data.harvestedItems[idx]);\r\n      Storage.harvestableItemDict[harvestedItem.id] = harvestedItem;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.trinketTables.length; ++idx) {\r\n      let trinketTable = new TrinketTable(Data.trinketTables[idx]);\r\n      Storage.trinketTableDict[trinketTable.trinketTableType] = trinketTable;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.craftableItems.length; ++idx) {\r\n      let craftableItem = new CraftableItem(Data.craftableItems[idx]);\r\n      Storage.craftableItemDict[craftableItem.id] = craftableItem;\r\n    }\r\n\r\n    Storage._init = true;\r\n  },\r\n};\r\n\r\nwindow.storage = Storage;\r\nexport default Storage;\r\n\r\nclass SubStateMonster {\r\n  constructor({\r\n    name,\r\n    cardSize,\r\n    source,\r\n    trinketTableType,\r\n    harvestingTableGroup,\r\n  }) {\r\n    this.name = name;\r\n    this.cardSize = cardSize;\r\n    this.source = source;\r\n    this.trinketTableType = trinketTableType;\r\n    this.harvestingTableGroup = harvestingTableGroup;\r\n  }\r\n\r\n  get id() {\r\n    return (\r\n      this.name.replace(/[\\s'\\-()]/g, \"\") +\r\n      \"_\" +\r\n      this.source\r\n    ).toLowerCase();\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Col, Row, Form } from \"react-bootstrap\";\r\n\r\nexport function getItemReferenceFromName(name) {\r\n  return name.replace(/\\s+/gi, \"_\").replace(/\\//gi, \"-\").toLowerCase();\r\n}\r\n\r\nexport function getItemReference(harvestedItem) {\r\n  return harvestedItem.id;\r\n}\r\n\r\nfunction simplePassthrough(val) {\r\n  return val;\r\n}\r\n\r\nconst ARRAY_CONC = \";;\";\r\nfunction joinArray(val) {\r\n  return val.join(ARRAY_CONC);\r\n}\r\nfunction splitArray(val) {\r\n  return val.split(ARRAY_CONC);\r\n}\r\n\r\nexport function HarvestedItemDisplay(props) {\r\n  let hItem = props.harvestedItem;\r\n\r\n  return (\r\n    <>\r\n      {/* {JSON.stringify(hItem)} */}\r\n      {/* <Row>\r\n                <Col className=\"col-3 font-weight-bold\">ReferenceId:</Col>\r\n                <Col>{hItem.ReferenceId}</Col>\r\n            </Row> */}\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Name:</Col>\r\n        <Col>{hItem.name}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Value:</Col>\r\n        <Col>{hItem.value}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Weight:</Col>\r\n        <Col>{hItem.weight}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Required Tools:</Col>\r\n        <Col>\r\n          {hItem.requiredToolNames.length === 0\r\n            ? \"-\"\r\n            : hItem.requiredToolNames.join(\" and \")}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">CraftingUsage:</Col>\r\n        <Col>\r\n          {hItem.craftingUsage.length === 0\r\n            ? \"-\"\r\n            : hItem.craftingUsage.join(\" and \")}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Description:</Col>\r\n        <Col>\r\n          {hItem.description.map((para, idx) => {\r\n            return <p key={idx}>{para}</p>;\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      {hItem.useText.length !== 0 && (\r\n        <Row>\r\n          <Col className=\"col-3 font-weight-bold\">UseText:</Col>\r\n          <Col>\r\n            {hItem.useText.map((para, idx) => {\r\n              return <p key={idx}>{para}</p>;\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport class EditingHarvestedItemDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.stringKeys = [\r\n      {\r\n        key: \"id\",\r\n        type: \"text\",\r\n        retrieve: simplePassthrough,\r\n        store: simplePassthrough,\r\n      },\r\n      {\r\n        key: \"name\",\r\n        type: \"text\",\r\n        retrieve: simplePassthrough,\r\n        store: simplePassthrough,\r\n      },\r\n      {\r\n        key: \"value\",\r\n        type: \"text\",\r\n        retrieve: simplePassthrough,\r\n        store: simplePassthrough,\r\n      },\r\n      {\r\n        key: \"weight\",\r\n        type: \"text\",\r\n        retrieve: simplePassthrough,\r\n        store: simplePassthrough,\r\n      },\r\n      {\r\n        key: \"craftingUsage\",\r\n        type: \"text\",\r\n        retrieve: joinArray,\r\n        store: splitArray,\r\n      },\r\n      {\r\n        key: \"requiredToolNames\",\r\n        type: \"text\",\r\n        retrieve: joinArray,\r\n        store: splitArray,\r\n      },\r\n      {\r\n        key: \"description\",\r\n        type: \"text\",\r\n        retrieve: joinArray,\r\n        store: splitArray,\r\n      },\r\n      {\r\n        key: \"useText\",\r\n        type: \"text\",\r\n        retrieve: joinArray,\r\n        store: splitArray,\r\n      },\r\n    ];\r\n\r\n    this.state = this.generateStateObject(this.props.harvestedItem);\r\n\r\n    this.applyStateToItem = this.applyStateToItem.bind(this);\r\n  }\r\n\r\n  generateStateObject(harvestedItem) {\r\n    let obj = {};\r\n    for (let i = 0; i < this.stringKeys.length; ++i) {\r\n      let targetValue = harvestedItem[this.stringKeys[i].key];\r\n\r\n      obj[this.stringKeys[i].key] = this.stringKeys[i].retrieve(targetValue);\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  handleInput(event, key) {\r\n    event.preventDefault();\r\n\r\n    console.log(`${key}: ${event.target.value}`);\r\n\r\n    let partialObject = {};\r\n    partialObject[key] = event.target.value;\r\n    this.setState(partialObject);\r\n  }\r\n\r\n  applyStateToItem(event) {\r\n    event.preventDefault();\r\n    console.log(\"applyStateToItem\");\r\n\r\n    for (let i = 0; i < this.stringKeys.length; ++i) {\r\n      let targetValue = this.state[this.stringKeys[i].key];\r\n\r\n      this.props.harvestedItem[this.stringKeys[i].key] = this.stringKeys[\r\n        i\r\n      ].store(targetValue);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.harvestedItem.ReferenceId !==\r\n      prevProps.harvestedItem.ReferenceId\r\n    ) {\r\n      this.setState(this.generateStateObject(this.props.harvestedItem));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let partialObject = {};\r\n    for (let i = 0; i < this.stringKeys.length; ++i) {\r\n      partialObject[this.stringKeys[i]] = \"\";\r\n    }\r\n    this.setState(partialObject);\r\n  }\r\n\r\n  render() {\r\n    let output = [];\r\n\r\n    for (let i = 0; i < this.stringKeys.length; ++i) {\r\n      let key = this.stringKeys[i];\r\n      output.push(\r\n        <Row key={output.length}>\r\n          <Col className=\"col-3 font-weight-bold\">{key.key}: </Col>\r\n          <Col className=\"border\">\r\n            <input\r\n              type={key.type}\r\n              value={this.state[key.key]}\r\n              style={{ width: \"inherit\" }}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                this.handleInput(e, key.key);\r\n              }}\r\n              disabled={key.key === \"ReferenceId\"}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Form onSubmit={this.applyStateToItem}>\r\n          {output}\r\n          <input type=\"submit\" value=\"Apply Changes\" />\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { DisplayList, DisplayColumn } from \"./DisplayList\";\r\nimport { HarvestedItemFilterBlock } from \"../components/HarvestedItemFilterBlock\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport {\r\n  EditingHarvestedItemDisplay,\r\n  HarvestedItemDisplay,\r\n  getItemReference,\r\n} from \"../utility/harvestedItemUtil\";\r\n\r\nexport function HarvestedItems(props) {\r\n  let [filterObj, setFilterObj] = useState({});\r\n\r\n  const pathWithId = \"/harvesteditems/:id\";\r\n  let harvestedItem = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (Storage.harvestableItemDict[selectedId] !== undefined) {\r\n      harvestedItem = Storage.harvestableItemDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    new DisplayColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let harvestedOutput = [\"Select an item from the list\"];\r\n\r\n  if (harvestedItem !== null) {\r\n    if (false && process.env.NODE_ENV === \"development\") {\r\n      harvestedOutput = [\r\n        <EditingHarvestedItemDisplay harvestedItem={harvestedItem} />,\r\n      ];\r\n    } else {\r\n      harvestedOutput = [\r\n        <HarvestedItemDisplay harvestedItem={harvestedItem} />,\r\n      ];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          <HarvestedItemFilterBlock submitFilter={setFilterObj} />\r\n          <DisplayList\r\n            headers={headers}\r\n            items={Object.values(Storage.harvestableItemDict)}\r\n            filterObject={filterObj}\r\n            pathRoot={props.match.path}\r\n            idFunction={getItemReference}\r\n            selectedId={selectedId}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">{harvestedOutput}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { fileSaveAs } from \"../utility/saveFile\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport { sortAscending } from \"../utility/stringUtil\";\r\n\r\nexport function Home(props) {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n      <div>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n\r\n            let monsters = Object.values(Storage.subStateMonsterDict);\r\n            monsters.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            let harvestedItems = Object.values(Storage.harvestableItemDict);\r\n            harvestedItems.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            let harvestingTables = Object.values(Storage.harvestingTableDict);\r\n            harvestingTables.sort((a, b) => sortAscending(a.name, b.name));\r\n\r\n            let trinketTables = Object.values(Storage.trinketTableDict);\r\n            trinketTables.sort((a, b) =>\r\n              sortAscending(a.trinketTableType, b.trinketTableType)\r\n            );\r\n\r\n            let craftableItems = Object.values(Storage.craftableItemDict);\r\n            craftableItems.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            fileSaveAs(\r\n              \"system-state.json\",\r\n              JSON.stringify({\r\n                monsters: monsters,\r\n                harvestingTables: harvestingTables,\r\n                harvestedItems: harvestedItems,\r\n                trinketTables: trinketTables,\r\n                craftableItems: craftableItems,\r\n              })\r\n            );\r\n          }}\r\n        >\r\n          Save State\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <input type=\"text\" style={{ width: \"100%\", height: \"4em\" }} />\r\n      </div>\r\n      {/* <div>{JSON.stringify(props)}</div> */}\r\n      {/* <div>{JSON.stringify(process.env)}</div> */}\r\n    </div>\r\n  );\r\n}\r\n","export function fileSaveAs(filename, fileContent) {\r\n    var link = document.createElement(\"a\");\r\n    link.download = filename;\r\n    link.href =\r\n        \"data:text/plain;charset=utf-8,\" + encodeURIComponent(fileContent);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport function StatBlock(props) {\r\n  let statBlock = props.statBlock;\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"text-center\">\r\n        <Row key=\"head\" className=\"font-weight-bold\">\r\n          <Col>STR</Col>\r\n          <Col>DEX</Col>\r\n          <Col>CON</Col>\r\n          <Col>INT</Col>\r\n          <Col>WIS</Col>\r\n          <Col>CHA</Col>\r\n        </Row>\r\n        <Row key=\"statVals\">\r\n          <Col key=\"str\">\r\n            {statBlock.str} ({getModifierDisplayString(statBlock.str)})\r\n          </Col>\r\n          <Col key=\"dex\">\r\n            {statBlock.dex} ({getModifierDisplayString(statBlock.dex)})\r\n          </Col>\r\n          <Col key=\"con\">\r\n            {statBlock.con} ({getModifierDisplayString(statBlock.con)})\r\n          </Col>\r\n          <Col key=\"int\">\r\n            {statBlock.int} ({getModifierDisplayString(statBlock.int)})\r\n          </Col>\r\n          <Col key=\"wis\">\r\n            {statBlock.wis} ({getModifierDisplayString(statBlock.wis)})\r\n          </Col>\r\n          <Col key=\"cha\">\r\n            {statBlock.cha} ({getModifierDisplayString(statBlock.cha)})\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function getModifierDisplayString(stat) {\r\n  let mod = getModifier(stat);\r\n\r\n  if (mod > 0) mod = `+${mod}`;\r\n\r\n  return mod;\r\n}\r\n\r\nexport function getModifier(stat) {\r\n  return Math.floor((stat - 10) / 2);\r\n}\r\n","export const CARD_SIZES = [\"None\", \"Small\", \"Medium\", \"Large\"];\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./hamundsTables.css\";\r\n\r\nexport function TrinketTableDisplay(props) {\r\n  let trinketTable = props.trinketTable;\r\n\r\n  if (trinketTable === null || trinketTable === undefined) {\r\n    return <></>;\r\n  }\r\n\r\n  let rowsOut = [];\r\n\r\n  rowsOut.push(\r\n    <Row className=\"text-center font-weight-bold\" key={\"trinketTableHeader\"}>\r\n      <Col className=\"col-1\">D8</Col>\r\n      <Col className=\"text-left\">Description</Col>\r\n      <Col className=\"col-1\">Value</Col>\r\n      <Col className=\"col-1\">Weight</Col>\r\n    </Row>\r\n  );\r\n\r\n  for (let i = 0; i < trinketTable.rows.length; ++i) {\r\n    let row = trinketTable.rows[i];\r\n    rowsOut.push(\r\n      <Row key={`tt-r${i}`}>\r\n        <Col className=\"col-1 text-center\">{row.d8Roll}</Col>\r\n        <Col>{row.descriptionLine}</Col>\r\n        <Col className=\"col-1\">{row.value}</Col>\r\n        <Col className=\"col-1\">{row.weight}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return <Container className=\"hamund-table\">{rowsOut}</Container>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nexport function ArrayInput(props) {\r\n  let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n  let defaultInsert = props.defaultInsert;\r\n  if (defaultInsert === undefined) defaultInsert = \"\";\r\n\r\n  const addLine = (e) => {\r\n    propObj[propKey].push(defaultInsert);\r\n    setRedraw(!redraw);\r\n  };\r\n  const insertLine = (e, tarIndex) => {\r\n    propObj[propKey].splice(tarIndex, 0, defaultInsert);\r\n    setRedraw(!redraw);\r\n  };\r\n\r\n  const removeLine = (e, idx) => {\r\n    propObj[propKey].splice(idx, 1);\r\n    setRedraw(!redraw);\r\n  };\r\n\r\n  let arrayLines = [];\r\n  for (let i = 0; i < propObj[propKey].length; ++i) {\r\n    arrayLines.push(\r\n      <Row key={i}>\r\n        <Col className=\"col-2 border\">\r\n          <button\r\n            onClick={(e) => {\r\n              insertLine(e, i);\r\n            }}\r\n            // disabled={i === 0}\r\n          >\r\n            ^\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              removeLine(e, i);\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              insertLine(e, i + 1);\r\n            }}\r\n            // disabled={i === propObj[propKey].length - 1}\r\n          >\r\n            v\r\n          </button>\r\n        </Col>\r\n        <Col>\r\n          <props.subType\r\n            object={propObj}\r\n            objKey={propKey}\r\n            index={i}\r\n            hideLabel={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"col-3\">\r\n          {propKey}: <button onClick={addLine}>+</button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {arrayLines}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function SelectInput(props) {\r\n  let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n\r\n  const onChangeFunc = (e) => {\r\n    propObj[propKey] = e.target.value;\r\n    setRedraw(!redraw);\r\n  };\r\n\r\n  let options = props.options.map((opt, idx) => {\r\n    return (\r\n      <option value={opt} key={idx}>\r\n        {opt}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"col-3\">{propKey}: </Col>{\" \"}\r\n        <Col>\r\n          <select\r\n            style={{ width: \"inherit\" }}\r\n            value={propObj[propKey]}\r\n            onChange={onChangeFunc}\r\n          >\r\n            {options}\r\n          </select>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function RadioButtonInput(props) {\r\n  let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n\r\n  const onChangeFunc = (e) => {\r\n    if (e.target.checked) {\r\n      propObj[propKey] = e.target.value;\r\n      setRedraw(!redraw);\r\n    }\r\n  };\r\n\r\n  let options = props.options.map((opt, idx) => {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"radio\"\r\n          value={opt}\r\n          key={idx}\r\n          name={propKey}\r\n          id={opt}\r\n          checked={propObj[propKey] === opt}\r\n          onChange={onChangeFunc}\r\n        />{\" \"}\r\n        <label for={opt}>{opt}</label>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"border\">\r\n        <Col className=\"col-3\">{propKey}: </Col> <Col>{options}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function StringInput(props) {\r\n  let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n  let propIdx = props.index;\r\n\r\n  let {\r\n    disabled,\r\n    hideLabel, //, ...otherProps\r\n  } = props;\r\n\r\n  const onChangeFunc = (e) => {\r\n    if (propIdx !== undefined) {\r\n      propObj[propKey][propIdx] = e.target.value;\r\n    } else {\r\n      propObj[propKey] = e.target.value;\r\n    }\r\n    setRedraw(!redraw);\r\n  };\r\n\r\n  let value = propObj[propKey];\r\n  if (propIdx !== undefined) {\r\n    value = propObj[propKey][propIdx];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        {!hideLabel && <Col className=\"col-3\">{propKey}: </Col>}\r\n        <Col>\r\n          <input\r\n            type=\"text\"\r\n            style={{ width: \"inherit\" }}\r\n            value={value}\r\n            onChange={onChangeFunc}\r\n            disabled={disabled}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function CheckboxInput(props) {\r\n  let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n\r\n  const onChangeFunc = (e) => {\r\n    propObj[propKey] = e.target.checked;\r\n    setRedraw(!redraw);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"col-3\">{propKey}: </Col>{\" \"}\r\n        <Col>\r\n          <input\r\n            type=\"checkbox\"\r\n            style={{ width: \"inherit\" }}\r\n            onChange={onChangeFunc}\r\n            checked={propObj[propKey] ? \"checked\" : \"\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ModularDescription(props) {\r\n  let desc = props.description;\r\n\r\n  if (typeof desc === \"string\") {\r\n    return <SimpleDescription description={desc} />;\r\n  } else {\r\n    if (!desc.type) return <>ERROR on: {JSON.stringify(desc)}</>;\r\n    switch (desc.type) {\r\n      case \"list\":\r\n        let style = desc.style;\r\n        return (\r\n          <ListDescription items={desc.lines || desc.items} style={style} />\r\n        );\r\n      case \"item\":\r\n        return <ItemDescription description={desc} />;\r\n      default:\r\n        return <UnhandledDescription description={desc} />;\r\n    }\r\n  }\r\n}\r\n\r\nfunction SimpleDescription(props) {\r\n  return <p>{props.description}</p>;\r\n}\r\n\r\nfunction ItemDescription(props) {\r\n  return (\r\n    <p>\r\n      <b>{props.description.name}</b> {props.description.entry}\r\n    </p>\r\n  );\r\n}\r\n\r\nfunction UnhandledDescription(props) {\r\n  return <p>{JSON.stringify(props.description)}</p>;\r\n}\r\n\r\nfunction ListDescription(props) {\r\n  let output = [];\r\n\r\n  for (let i = 0; i < props.items.length; ++i) {\r\n    output.push(\r\n      <li key={i}>\r\n        <ModularDescription description={props.items[i]} />\r\n      </li>\r\n    );\r\n  }\r\n\r\n  let styleObj = {};\r\n  if (props.style) {\r\n    styleObj.listStyle = props.style;\r\n  }\r\n\r\n  return <ul style={styleObj}>{output}</ul>;\r\n}\r\n","import React from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  StringInput,\r\n  CheckboxInput,\r\n  SelectInput,\r\n  ArrayInput,\r\n  RadioButtonInput,\r\n} from \"./inputUtil\";\r\nimport Storage from \"./StorageUtil\";\r\nimport { ModularDescription } from \"./descriptionUtil\";\r\n\r\nexport function getIdFromItemName(name) {\r\n  return name.toLowerCase().replace(/\\s+/g, \"_\");\r\n}\r\n\r\nexport function getIdFromItem(item) {\r\n  if (item.id !== undefined) return item.id;\r\n  else return getIdFromItemName(item.name);\r\n}\r\n\r\nexport function CraftableItemDisplay(props) {\r\n  let craftableItem = props.craftableItem;\r\n\r\n  let materialOutput = craftableItem.materials.map((mat, idx) => {\r\n    let matItem = Storage.harvestableItemDict[mat.componentId];\r\n\r\n    return (\r\n      <span key={idx}>\r\n        {matItem ? matItem.name : mat.componentId} ({mat.quantity})\r\n      </span>\r\n    );\r\n  });\r\n  let finalMaterialOutput = [];\r\n  for (let i = 0; i < materialOutput.length; ++i) {\r\n    if (finalMaterialOutput.length !== 0) {\r\n      finalMaterialOutput.push(\" \" + craftableItem.materialGrouping + \" \");\r\n    }\r\n    finalMaterialOutput.push(materialOutput[i]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"font-weight-bold\">{craftableItem.name}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <i>\r\n            {craftableItem.type},{\" \"}\r\n            {(craftableItem.rarity !== null\r\n              ? craftableItem.rarity\r\n              : \"\"\r\n            ).toLowerCase()}{\" \"}\r\n            {craftableItem.requiresAttunement && \"(requires attunement)\"}\r\n          </i>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <i>\r\n            Crafted by: {finalMaterialOutput} ({craftableItem.crafter})\r\n          </i>\r\n        </Col>\r\n      </Row>\r\n      &nbsp;\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Description:</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {craftableItem.description.length > 0 &&\r\n            craftableItem.description.map((para, idx) => {\r\n              return <ModularDescription key={idx} description={para} />;\r\n            })}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport class EditingCraftableItemDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.generateStateObject(this.props.craftableItem);\r\n    this.applyStateToItem = this.applyStateToItem.bind(this);\r\n  }\r\n\r\n  generateStateObject(craftableItem) {\r\n    let obj = {};\r\n    return obj;\r\n  }\r\n\r\n  handleInput(event, key) {\r\n    event.preventDefault();\r\n\r\n    console.log(`${key}: ${event.target.value}`);\r\n\r\n    let partialObject = {};\r\n    partialObject[key] = event.target.value;\r\n    this.setState(partialObject);\r\n  }\r\n\r\n  applyStateToItem(event) {\r\n    event.preventDefault();\r\n\r\n    for (let i = 0; i < this.stringKeys.length; ++i) {\r\n      let targetValue = this.state[this.stringKeys[i].key];\r\n\r\n      this.props.craftableItem[this.stringKeys[i].key] = this.stringKeys[\r\n        i\r\n      ].store(targetValue);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.craftableItem.Id !== prevProps.craftableItem.Id) {\r\n      this.setState(this.generateStateObject(this.props.craftableItem));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let partialObject = {};\r\n    this.setState(partialObject);\r\n  }\r\n\r\n  render() {\r\n    let craftableItem = this.props.craftableItem;\r\n\r\n    return (\r\n      <Container fluid>\r\n        {/* <div>propObj :: {JSON.stringify(craftableItem)}</div> */}\r\n        <StringInput object={craftableItem} objKey=\"Id\" disabled />\r\n        <StringInput object={craftableItem} objKey=\"Name\" />\r\n        <StringInput object={craftableItem} objKey=\"Type\" />\r\n        <Row>\r\n          <Col>\r\n            <CheckboxInput object={craftableItem} objKey=\"RequiresAttunement\" />\r\n          </Col>\r\n          <Col>\r\n            <StringInput\r\n              object={craftableItem}\r\n              objKey=\"AttunementNote\"\r\n              hideLabel={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <RadioButtonInput // SelectInput\r\n              object={craftableItem}\r\n              objKey=\"Crafter\"\r\n              options={[\r\n                \"Alchemist\",\r\n                \"Artificer\",\r\n                \"Blacksmith\",\r\n                \"Leatherworker\",\r\n                \"Tinker\",\r\n                \"Thaumaturge\",\r\n              ]}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <RadioButtonInput //SelectInput\r\n              object={craftableItem}\r\n              objKey=\"Rarity\"\r\n              options={[\r\n                \"Mundane\",\r\n                \"Common\",\r\n                \"Uncommon\",\r\n                \"Rare\",\r\n                \"Very Rare\",\r\n                \"Legendary\",\r\n                \"Mixed\",\r\n              ]}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <ArrayInput\r\n          object={craftableItem}\r\n          objKey=\"Description\"\r\n          subType={StringInput}\r\n        />\r\n        <SelectInput\r\n          object={craftableItem}\r\n          objKey=\"MaterialGrouping\"\r\n          options={[\"OR\", \"AND\"]}\r\n        />\r\n        <ArrayInput\r\n          object={craftableItem}\r\n          objKey=\"Materials\"\r\n          subType={MaterialInput}\r\n          defaultInsert={{ ComponentId: \"\", Quantity: \"\" }}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction MaterialInput(props) {\r\n  //   let [redraw, setRedraw] = useState(true);\r\n  let propObj = props.object;\r\n  let propKey = props.objKey;\r\n  let propIdx = props.index;\r\n\r\n  // const onChangeFunc = (e) => {\r\n  //     if (propIdx !== undefined) {\r\n  //         propObj[propKey][propIdx] = e.target.value;\r\n  //     } else {\r\n  //         propObj[propKey] = e.target.value;\r\n  //     }\r\n  //     setRedraw(!redraw);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <StringInput object={propObj[propKey][propIdx]} objKey=\"ComponentId\" />\r\n      <StringInput object={propObj[propKey][propIdx]} objKey=\"Quantity\" />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport { getIdFromItemName } from \"./craftableItemUtil\";\r\nimport \"./hamundsTables.css\";\r\nimport { NavLink } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function HarvestingTableDisplay(props) {\r\n  let challengeRating = props.challengeRating;\r\n  let creatureType = props.creatureType;\r\n  let harvestingTable = props.harvestingTable;\r\n\r\n  if (!harvestingTable) return <></>;\r\n\r\n  let rowsOut = [];\r\n\r\n  // rowsOut.push(<>{JSON.stringify(harvestingTable)}</>);\r\n\r\n  rowsOut.push(\r\n    <Row className=\"text-center hamund-header\" key={-1}>\r\n      <Col className=\"col-1\">DC</Col>\r\n      <Col className=\"col-2 text-left\">Item</Col>\r\n      <Col className=\"\">Description</Col>\r\n      <Col className=\"col-1\">Value</Col>\r\n      <Col className=\"col-1\">Weight</Col>\r\n      <Col className=\"col-2\">Crafting</Col>\r\n    </Row>\r\n  );\r\n\r\n  for (let i = 0; i < harvestingTable.rows.length; ++i) {\r\n    let row = harvestingTable.rows[i];\r\n\r\n    let item = Storage.harvestableItemDict[row.itemNameReference];\r\n\r\n    let nameOut = row.itemNameReference;\r\n    let descriptionOut = [];\r\n    let valueOut = \"\";\r\n    let weightOut = \"\";\r\n    let craftingOut = [];\r\n\r\n    if (item !== null && item !== undefined) {\r\n      nameOut = item.name;\r\n\r\n      let lines = 0;\r\n\r\n      for (let j = 0; j < item.description.length; ++j) {\r\n        descriptionOut.push(<p key={lines++}>{item.description[j]}</p>);\r\n      }\r\n\r\n      // output tools, if any\r\n      if (\r\n        item.requiredToolNames !== undefined &&\r\n        item.requiredToolNames.length > 0\r\n      ) {\r\n        descriptionOut.push(\r\n          <p key={lines++} className=\"font-weight-bold\">\r\n            Requires {item.requiredToolNames.join(\" and \").toLowerCase()}.\r\n          </p>\r\n        );\r\n      }\r\n\r\n      for (let j = 0; j < item.useText.length; ++j) {\r\n        descriptionOut.push(\r\n          <p key={lines++}>\r\n            {j === 0 && <b>Use: </b>} {item.useText[j]}\r\n          </p>\r\n        );\r\n      }\r\n\r\n      valueOut = item.value;\r\n      weightOut = item.weight;\r\n\r\n      // craftingOut = item.CraftingUsage.join(\" or \");\r\n      for (let k = 0; k < item.craftingUsage.length; ++k) {\r\n        if (craftingOut.length !== 0) {\r\n          craftingOut.push(<span key={\"or-\" + k}> or </span>);\r\n        }\r\n        craftingOut.push(\r\n          <NavLink\r\n            key={k}\r\n            tag={Link}\r\n            to={`/craftableitems/${getIdFromItemName(item.craftingUsage[k])}`}\r\n          >\r\n            {item.craftingUsage[k]}\r\n          </NavLink>\r\n        );\r\n      }\r\n    }\r\n\r\n    if (row.quantity !== \"\") {\r\n      nameOut += ` (${row.quantity})`;\r\n    }\r\n    if (row.notes !== \"\") {\r\n      nameOut += ` (${row.notes})`;\r\n    }\r\n\r\n    rowsOut.push(\r\n      <Row key={i} className=\"hamund-row\">\r\n        <Col className=\"col-1 text-center\">{row.difficultyClass}</Col>\r\n        <Col className=\"col-2\">{nameOut}</Col>\r\n        <Col className=\"\">{descriptionOut}</Col>\r\n        <Col className=\"col-1\">{valueOut}</Col>\r\n        <Col className=\"col-1\">{weightOut}</Col>\r\n        <Col className=\"col-2\">{craftingOut}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  let skill = \"\";\r\n\r\n  switch (creatureType.type) {\r\n    case \"aberration\":\r\n    case \"celestial\":\r\n    case \"elemental\":\r\n    case \"fey\":\r\n    case \"fiend\":\r\n    case \"undead\":\r\n      skill = \"Arcana\";\r\n      break;\r\n    case \"beast\":\r\n    case \"dragon\":\r\n    case \"monstrosity\":\r\n    case \"plant\":\r\n      skill = \"Nature\";\r\n      break;\r\n    case \"construct\":\r\n    case \"ooze\":\r\n      skill = \"Investigation\";\r\n      break;\r\n    case \"giant\":\r\n    case \"humanoid\":\r\n      skill = \"Medicine\";\r\n      break;\r\n    default:\r\n      skill = \"[\" + creatureType.type + \"]\";\r\n      break;\r\n  }\r\n\r\n  let apprasialTarget = \"unknown\";\r\n\r\n  if (challengeRating !== null) {\r\n    apprasialTarget = 8 + challengeRating.cr;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <b>Relevant skill:</b>&nbsp;{skill}\r\n      </Row>\r\n      <Row>\r\n        <b>Appraisal Target:</b>&nbsp;{apprasialTarget}\r\n      </Row>\r\n      <div className=\"border\" />\r\n      <Container className=\"hamund-table\">{rowsOut}</Container>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { stripTags } from \"../utility/stringUtil\";\r\n\r\nexport function DynamicRender(props) {\r\n  let toRender = props.toRender;\r\n  let { name, entries, type } = toRender;\r\n\r\n  if (typeof toRender === \"string\") {\r\n    return <>{stripTags(toRender)}</>;\r\n  }\r\n\r\n  if (type === undefined) {\r\n    return (\r\n      <div>\r\n        {entries.map((ent, idx) => {\r\n          return (\r\n            <div key={idx}>\r\n              {idx === 0 && (\r\n                <>\r\n                  <b>{stripTags(name)}.</b>{\" \"}\r\n                </>\r\n              )}\r\n              <DynamicRender toRender={ent} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    switch (type) {\r\n      case \"list\":\r\n        return <ListRender list={toRender} />;\r\n      case \"item\":\r\n        return <ItemRender item={toRender} />;\r\n      default:\r\n        return <>[UNH {type} UNH]</>;\r\n    }\r\n  }\r\n}\r\n\r\nfunction ListRender(props) {\r\n  let {\r\n    //type,\r\n    style,\r\n    items,\r\n    //...others\r\n  } = props.list;\r\n\r\n  return (\r\n    <ul className={style}>\r\n      {items.map((it, idx) => (\r\n        <DynamicRender toRender={it} key={idx} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction ItemRender(props) {\r\n  let {\r\n    //type,\r\n    name,\r\n    entry,\r\n    //...others\r\n  } = props.item;\r\n\r\n  return (\r\n    <li>\r\n      <b>{stripTags(name)}</b> {stripTags(entry)}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport function SpellcastingBlock(props) {\r\n  var entry = props.spellcasting;\r\n\r\n  var { name, headerEntries, spells, will, daily, footerEntries } = entry;\r\n\r\n  var output = [];\r\n  var idx = 0;\r\n  if (headerEntries && headerEntries.length > 0) {\r\n    output.push(\r\n      <div key={\"header\"}>\r\n        {headerEntries.map((head, idx) => {\r\n          if (idx === 0) {\r\n            return (\r\n              <div key={idx}>\r\n                <b>{stripTags(name)}.</b> {stripTags(head)}\r\n              </div>\r\n            );\r\n          } else {\r\n            return <div key={idx}>{stripTags(head)}</div>;\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n    //   for (idx = 0; idx < headerEntries.length; ++idx) {\r\n    //     if (idx === 0) {\r\n    //       output.push(\r\n    //         <div key={idx}>\r\n    //           <b>{stripTags(name)}.</b> {stripTags(headerEntries[idx])}\r\n    //         </div>\r\n    //       );\r\n    //     } else {\r\n    //       output.push(<div key={idx}>{stripTags(headerEntries[idx])}</div>);\r\n    //     }\r\n    //   }\r\n    // } else {\r\n    //   output.push(\r\n    //     <div key={\"header\"}>\r\n    //       <b>{stripTags(name)}.</b>\r\n    //     </div>\r\n    //   );\r\n  }\r\n\r\n  if (will && will.length > 0) {\r\n    output.push(\r\n      <div key={\"will\"}>\r\n        <i>At will:</i> {will.map(stripTags).join(\", \")}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (daily) {\r\n    let dailyKeys = Object.keys(daily);\r\n\r\n    for (idx = 0; idx < dailyKeys.length; ++idx) {\r\n      let [num, each] = dailyKeys[idx].split(\"\");\r\n      let lead = `${num}/day${each ? \" each\" : \"\"}`;\r\n\r\n      output.push(\r\n        <div key={\"daily\"}>\r\n          <i>{lead}:</i> {daily[dailyKeys[idx]].map(stripTags).join(\", \")}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (spells) {\r\n    let spellKeys = Object.keys(spells);\r\n    let spellsBlock = spells;\r\n\r\n    for (idx = 0; idx < spellKeys.length; ++idx) {\r\n      let { slots, spells } = spellsBlock[spellKeys[idx]];\r\n\r\n      let numCount = \"\";\r\n      if (slots !== undefined) {\r\n        numCount = `${slots} slot${Number.parseInt(slots) > 1 ? \"s\" : \"\"}`;\r\n      } else {\r\n        numCount = \"at will\";\r\n      }\r\n\r\n      let spellLevel = Number.parseInt(spellKeys[idx]);\r\n      if (spellLevel === 0) {\r\n        spellLevel = \"Cantrips\";\r\n      } else if (spellLevel >= 4) {\r\n        spellLevel = `${spellLevel}th level`;\r\n      } else if (spellLevel === 1) {\r\n        spellLevel = `${spellLevel}st level`;\r\n      } else if (spellLevel === 2) {\r\n        spellLevel = `${spellLevel}nd level`;\r\n      } else if (spellLevel === 3) {\r\n        spellLevel = `${spellLevel}rd level`;\r\n      }\r\n\r\n      let lead = `${spellLevel} (${numCount}): `;\r\n\r\n      output.push(\r\n        <div key={`spells-${idx}`}>\r\n          <i>{lead}</i>\r\n          {spells.map(stripTags).join(\", \")}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (footerEntries && footerEntries.length > 0) {\r\n    output.push(\r\n      <div key=\"footer\">\r\n        {footerEntries.map((foot, idx) => {\r\n          return <div key={idx}>{stripTags(foot)}</div>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div key={name}>{output}</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StatBlock } from \"../utility/statsUtil\";\r\nimport { Tabs, Tab, Row, Col } from \"react-bootstrap\";\r\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport { TrinketTableDisplay } from \"../utility/trinketTableUtil\";\r\nimport { HarvestingTableDisplay } from \"../utility/harvestingTableUtil\";\r\nimport { stripTags } from \"../utility/stringUtil\";\r\nimport { DynamicRender, SpellcastingBlock } from \"./RenderBlocks\";\r\nimport { stringFromSize } from \"../utility/monsterUtil\";\r\nimport Sources from \"../data/sources.json\";\r\n\r\nconst COMBAT_TAB_KEY = \"combat\";\r\nconst TABLES_TAB_KEY = \"tables\";\r\n\r\nconst HARVESTING_TAB_KEY = \"harvesting\";\r\nconst TRINKET_TAB_KEY = \"trinkets\";\r\n\r\nexport function MonsterDisplay(props) {\r\n  let [tabKey, setTabKey] = useState(COMBAT_TAB_KEY);\r\n  let [tablesTabKey, setTablesTabKey] = useState(HARVESTING_TAB_KEY);\r\n  let monster = props.monster;\r\n\r\n  if (monster === null) {\r\n    return (\r\n      <>\r\n        <div>Select an item from the list to see stats ...</div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  let nameOut = monster.name;\r\n  let typeOut = monster.type.displayString;\r\n\r\n  let subMonster = Storage.subStateMonsterDict[monster.id];\r\n\r\n  let cardSize = subMonster ? CARD_SIZES[subMonster.cardSize] : \"-\";\r\n\r\n  let traitsAndSpellcastingOut = [];\r\n  monster.traits.forEach((entry, i) => {\r\n    traitsAndSpellcastingOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  monster.spellcasting.forEach((entry, i) => {\r\n    traitsAndSpellcastingOut.push(\r\n      <SpellcastingBlock\r\n        spellcasting={entry}\r\n        key={entry.name ? entry.name : i}\r\n      />\r\n    );\r\n  });\r\n  if (traitsAndSpellcastingOut.length > 0) {\r\n    traitsAndSpellcastingOut.push(\r\n      <div key=\"traitsBorder\" className=\"border\" />\r\n    );\r\n  }\r\n\r\n  let actionsOut = [];\r\n  monster.actions.forEach((entry, i) => {\r\n    actionsOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  if (actionsOut.length > 0) {\r\n    actionsOut.push(<div key=\"actionBorder\" className=\"border\" />);\r\n  }\r\n\r\n  let reactionsOut = [];\r\n  monster.reactions.forEach((entry, i) => {\r\n    reactionsOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  if (reactionsOut.length > 0) {\r\n    reactionsOut.push(<div key=\"reactionBorder\" className=\"border\" />);\r\n  }\r\n\r\n  let harvestingTable =\r\n    subMonster !== undefined && subMonster.harvestingTableGroup !== null\r\n      ? Storage.harvestingTableDict[subMonster.harvestingTableGroup]\r\n      : null;\r\n  let trinketTable =\r\n    subMonster !== undefined && subMonster.trinketTableType !== null\r\n      ? Storage.trinketTableDict[subMonster.trinketTableType]\r\n      : null;\r\n\r\n  let hasHarvestingTable = harvestingTable !== null;\r\n  let hasTrinketTable = trinketTable !== null;\r\n\r\n  let hasTables = hasHarvestingTable || hasTrinketTable;\r\n\r\n  if (!hasTables) {\r\n    if (tabKey === TABLES_TAB_KEY) {\r\n      tabKey = COMBAT_TAB_KEY;\r\n    }\r\n  } else {\r\n    if (!hasHarvestingTable && tablesTabKey === HARVESTING_TAB_KEY) {\r\n      tablesTabKey = TRINKET_TAB_KEY;\r\n    } else if (!hasTrinketTable && tablesTabKey === TRINKET_TAB_KEY) {\r\n      tablesTabKey = HARVESTING_TAB_KEY;\r\n    }\r\n  }\r\n  //tabKey = COMBAT_TAB_KEY;\r\n\r\n  let otherSourcesOut = monster.otherSources.map((oSrc, idx) => {\r\n    let line = <span title={Sources[oSrc.source]}>{oSrc.source}</span>;\r\n    if (idx !== 0) {\r\n      return [<>{\", \"}</>, line];\r\n    } else {\r\n      return line;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col sm=\"9\">\r\n          <h4>{nameOut}</h4>\r\n          <div>\r\n            <i>\r\n              {stringFromSize(monster.size)} {typeOut}\r\n              {monster.alignment.length && (\r\n                <span>\r\n                  ,{\" \"}\r\n                  {monster.alignment\r\n                    .map((ali) => ali.convertedString)\r\n                    .join(\" or \")}\r\n                </span>\r\n              )}\r\n            </i>\r\n          </div>\r\n          <div>\r\n            <b>Card Size: </b>\r\n            {cardSize}\r\n          </div>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <div>\r\n            <b>Source</b>\r\n            <div title={Sources[monster.source]}>{monster.source}</div>\r\n            {otherSourcesOut.length > 0 && <i>{otherSourcesOut}</i>}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Tabs activeKey={tabKey} onSelect={(k) => setTabKey(k)}>\r\n        <Tab eventKey={COMBAT_TAB_KEY} title=\"Combat\">\r\n          <div>\r\n            <ACHPSpeed monster={monster} />\r\n          </div>\r\n          <div>\r\n            <StatBlock statBlock={monster.stats} />\r\n          </div>\r\n          <div className=\"border\" />\r\n          <div>\r\n            <SkillsAndSavesBlock monster={monster} />\r\n          </div>\r\n          {traitsAndSpellcastingOut}\r\n          {actionsOut}\r\n          {reactionsOut}\r\n        </Tab>\r\n        <Tab eventKey={TABLES_TAB_KEY} title=\"Tables\" disabled={!hasTables}>\r\n          <Tabs activeKey={tablesTabKey} onSelect={(k) => setTablesTabKey(k)}>\r\n            <Tab\r\n              eventKey={HARVESTING_TAB_KEY}\r\n              title=\"Harvesting\"\r\n              disabled={!hasHarvestingTable}\r\n            >\r\n              {\r\n                <HarvestingTableDisplay\r\n                  challengeRating={monster.challengeRating}\r\n                  creatureType={monster.type}\r\n                  harvestingTable={harvestingTable}\r\n                />\r\n              }\r\n              {/* {JSON.stringify(monster.HarvestingTable)} */}\r\n            </Tab>\r\n            <Tab\r\n              eventKey={TRINKET_TAB_KEY}\r\n              title=\"Trinkets\"\r\n              disabled={!hasTrinketTable}\r\n            >\r\n              <TrinketTableDisplay trinketTable={trinketTable} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Tab>\r\n      </Tabs>\r\n      {/* <div className=\"border\" /> */}\r\n      {/* {JSON.stringify(monster)} */}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ACHPSpeed(props) {\r\n  let monster = props.monster;\r\n  let topBlock = [];\r\n\r\n  let acOut = (\r\n    <>\r\n      {monster.armorClass\r\n        .map((ac) => {\r\n          if (ac.from) {\r\n            return ac.ac + \" (\" + ac.from.map(stripTags).join(\", \") + \")\";\r\n          } else if (ac.condition) {\r\n            return ac.ac + \" \" + stripTags(ac.condition);\r\n          } else return ac.ac;\r\n        })\r\n        .join(\", \")}\r\n    </>\r\n  );\r\n  topBlock.push(\r\n    <div key=\"ac\">\r\n      <b>AC:</b> {acOut}\r\n    </div>\r\n  );\r\n  let hpOut = (\r\n    <>\r\n      {monster.health.average} ({monster.health.formula})\r\n    </>\r\n  );\r\n  topBlock.push(\r\n    <div key=\"hp\">\r\n      <b>Health:</b> {hpOut}\r\n    </div>\r\n  );\r\n  let speedOut = <>{monster.speed.simpleDisplay}</>;\r\n  topBlock.push(\r\n    <div key=\"speed\">\r\n      <b>Speed:</b> {speedOut}\r\n    </div>\r\n  );\r\n  topBlock.push(<div key=\"borderTop\" className=\"border\" />);\r\n\r\n  return <>{topBlock}</>;\r\n}\r\n\r\nfunction SkillsAndSavesBlock(props) {\r\n  let monster = props.monster;\r\n\r\n  // let testFunction = function (mon) {\r\n  //   return JSON.stringify(mon[this.key]);\r\n  // };\r\n  let keyValueFunction = function (mon) {\r\n    return Object.keys(mon[this.key])\r\n      .map((inKey) => inKey + \" \" + mon[this.key][inKey])\r\n      .join(\", \");\r\n  };\r\n  let simpleJoinFunction = function (mon) {\r\n    return mon[this.key].join(\", \");\r\n  };\r\n  const SSE_PAIRS = [\r\n    {\r\n      key: \"saves\",\r\n      header: \"Saving Throws\",\r\n      disp: keyValueFunction,\r\n    },\r\n    {\r\n      key: \"skills\",\r\n      header: \"Skills\",\r\n      disp: keyValueFunction,\r\n    },\r\n    {\r\n      key: \"resistances\",\r\n      header: \"Resistances\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"immunity\",\r\n      header: \"Immunities\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"conditionImmunities\",\r\n      header: \"Condition Immunities\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"languages\",\r\n      header: \"Languages\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"senses\",\r\n      header: \"Senses\",\r\n      disp: function (mon) {\r\n        return (\r\n          mon[this.key].join(\", \") + \", passive Perception \" + mon.passivePerc\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  let skillsSavesEtcOut = [];\r\n  SSE_PAIRS.forEach((pair) => {\r\n    if (monster[pair.key]) {\r\n      skillsSavesEtcOut.push(\r\n        <div key={pair.key}>\r\n          <b>{pair.header}: </b>\r\n          {pair.disp(monster)}\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n  skillsSavesEtcOut.push(\r\n    <div key=\"cr\">\r\n      <b>Challenge Rating: </b>\r\n      {monster.challengeRating.displayString}\r\n    </div>\r\n  );\r\n  if (skillsSavesEtcOut.length > 0) {\r\n    skillsSavesEtcOut.push(<div key=\"border\" className=\"border\" />);\r\n  }\r\n\r\n  return <>{skillsSavesEtcOut}</>;\r\n}\r\n","export function getIdFromMonster(monster) {\r\n  let idReplaceRegex = /[\\s'\\-()]/g;\r\n  return (\r\n    monster.name.replace(idReplaceRegex, \"\") +\r\n    \"_\" +\r\n    monster.source\r\n  ).toLowerCase();\r\n}\r\n\r\nexport function stringFromSize(size) {\r\n  switch (size) {\r\n    case \"T\":\r\n      return \"Tiny\";\r\n    case \"S\":\r\n      return \"Small\";\r\n    case \"M\":\r\n      return \"Medium\";\r\n    case \"L\":\r\n      return \"Large\";\r\n    case \"H\":\r\n      return \"Huge\";\r\n    case \"G\":\r\n      return \"Gargantuan\";\r\n    default:\r\n      return `?[${size}]?`;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\r\n\r\nfunction BlockRow_Text(key, label, value, setter) {\r\n  return (\r\n    <Row key={key}>\r\n      <Col className=\"col-3\">{label}:</Col>\r\n      <Col>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          style={{\r\n            width: \"inherit\",\r\n          }}\r\n          onChange={(e) => {\r\n            e.preventDefault();\r\n            setter(e.target.value);\r\n          }}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction BlockRow_Select(key, label, value, setter, selectOpts, optLabels) {\r\n  return (\r\n    <Row key={key}>\r\n      <Col className=\"col-3\">{label}:</Col>\r\n      <Col>\r\n        <select\r\n          value={value}\r\n          style={{\r\n            width: \"inherit\",\r\n          }}\r\n          onChange={(e) => {\r\n            e.preventDefault();\r\n            setter(e.target.value);\r\n          }}\r\n        >\r\n          <option value={null}>Ignore</option>\r\n          {selectOpts.map((opt, idx) => {\r\n            return (\r\n              <option key={idx} value={opt}>\r\n                {optLabels[opt]}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport function MonsterFilterBlock(props) {\r\n  let [nameField, setNameField] = useState(\"\");\r\n  let [typeField, setTypeField] = useState(\"\");\r\n  let [cardSizeField, setCardSizeField] = useState();\r\n\r\n  let filterRows = [];\r\n\r\n  filterRows.push(\r\n    BlockRow_Text(filterRows.length, \"Name\", nameField, setNameField)\r\n  );\r\n  filterRows.push(\r\n    BlockRow_Text(filterRows.length, \"Creature Type\", typeField, setTypeField)\r\n  );\r\n  filterRows.push(\r\n    BlockRow_Select(\r\n      filterRows.length,\r\n      \"Card Size\",\r\n      cardSizeField,\r\n      setCardSizeField,\r\n      [0, 1, 2, 3],\r\n      CARD_SIZES\r\n    )\r\n  );\r\n\r\n  // TODO: add option to filter by having (or not) harvesting/trinket tables\r\n\r\n  const submitFunc = (e) => {\r\n    let obj = {};\r\n    if (nameField !== \"\") {\r\n      obj.Name = (obj) => {\r\n        return obj.name.toLowerCase().match(nameField.toLowerCase());\r\n      };\r\n    }\r\n    if (typeField !== \"\") {\r\n      obj.Type = (obj) => {\r\n        let crString = obj.type.displayString;\r\n        return crString.toLowerCase().match(typeField.toLowerCase());\r\n      };\r\n    }\r\n    if (cardSizeField >= 0) {\r\n      obj.CardSize = (obj) => {\r\n        return obj.ReferenceCardSize === Number(cardSizeField);\r\n      };\r\n    }\r\n\r\n    props.submitFilter(obj);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form id=\"filter\" className=\"border\" onSubmit={submitFunc}>\r\n      {filterRows}\r\n      <button type=\"submit\">Apply Filter</button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { DisplayList, DisplayColumn } from \"./DisplayList\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport { ChallengeRating, CreatureType } from \"../data/Monster\";\r\nimport { MonsterDisplay } from \"../components/MonsterDisplay\";\r\n\r\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\r\nimport { MonsterFilterBlock } from \"../components/MonsterFilterBlock\";\r\nimport \"./Columnable.css\";\r\nimport \"../LayoutControl/Layout.css\";\r\nimport Sources from \"../data/sources.json\";\r\n\r\nexport function Monsters(props) {\r\n  let [filterObj, setFilterObj] = useState({});\r\n\r\n  const pathWithId = \"/monsters/:id\";\r\n  let monster = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (Storage.monsterDict[selectedId] !== undefined) {\r\n      monster = Storage.monsterDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    new DisplayColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n    new DisplayColumn(\r\n      \"Type\",\r\n      (item) => {\r\n        return <>{item[\"type\"].displayString}</>;\r\n      },\r\n      (a, b) => {\r\n        return CreatureType.sortAscending(a.type, b.type);\r\n      }\r\n    ),\r\n    new DisplayColumn(\r\n      \"CR\",\r\n      (item) => {\r\n        return <>{item.challengeRating.displayString}</>;\r\n      },\r\n      (a, b) => {\r\n        return ChallengeRating.sortAscending(\r\n          a.challengeRating,\r\n          b.challengeRating\r\n        );\r\n      }\r\n    ),\r\n    new DisplayColumn(\r\n      \"Card Size\",\r\n      (item) => {\r\n        var subMon = Storage.subStateMonsterDict[item.id];\r\n        return <>{subMon ? CARD_SIZES[subMon.cardSize] : \"-\"}</>;\r\n      },\r\n      (a, b) => {\r\n        var subMonA = Storage.subStateMonsterDict[a.id];\r\n        var subMonB = Storage.subStateMonsterDict[b.id];\r\n\r\n        if (subMonA && subMonB) {\r\n          return subMonA.cardSize - subMonB.cardSize;\r\n        } else if (subMonA && !subMonB) {\r\n          return -1;\r\n        } else if (!subMonA && subMonB) {\r\n          return 1;\r\n        } else {\r\n          // TODO: Fix this\r\n          return -1;\r\n        }\r\n      }\r\n    ),\r\n    new DisplayColumn(\r\n      \"Source\",\r\n      (item) => {\r\n        return <span title={Sources[item[\"source\"]]}>{item[\"source\"]}</span>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.source, b.source);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let list = Object.values(Storage.monsterDict);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          <MonsterFilterBlock submitFilter={setFilterObj} />\r\n          <DisplayList\r\n            headers={headers}\r\n            items={list}\r\n            filterObject={filterObj}\r\n            pathRoot={props.match.path}\r\n            idFunction={(mon) => mon.id}\r\n            selectedId={selectedId}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">\r\n          <MonsterDisplay monster={monster} selectedId={selectedId} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { DisplayList, DisplayColumn } from \"./DisplayList\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport {\r\n  getIdFromItem,\r\n  CraftableItemDisplay,\r\n  EditingCraftableItemDisplay,\r\n} from \"../utility/craftableItemUtil\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\n\r\nimport \"./Columnable.css\";\r\nimport \"../LayoutControl/Layout.css\";\r\n\r\nexport function CraftableItems(props) {\r\n  // let [filterObj, setFilterObj] = useState({});\r\n\r\n  const pathWithId = \"/craftableitems/:id\";\r\n  let craftableItem = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (Storage.craftableItemDict[selectedId] !== undefined) {\r\n      craftableItem = Storage.craftableItemDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    new DisplayColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let displayOutput = [\"Select an item from the list\"];\r\n\r\n  if (craftableItem !== null) {\r\n    if (false && process.env.NODE_ENV === \"development\") {\r\n      displayOutput = [\r\n        <EditingCraftableItemDisplay craftableItem={craftableItem} key={0} />,\r\n      ];\r\n    } else {\r\n      displayOutput = [\r\n        <CraftableItemDisplay craftableItem={craftableItem} key={0} />,\r\n      ];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          {/* <MonsterFilterBlock submitFilter={setFilterObj} /> */}\r\n          <DisplayList\r\n            headers={headers}\r\n            items={Object.values(Storage.craftableItemDict)}\r\n            filterObject={{}}\r\n            pathRoot={props.match.path}\r\n            idFunction={getIdFromItem}\r\n            selectedId={selectedId}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">{displayOutput}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HarvestedItems } from \"./pages/HarvestedItems\";\r\nimport { Home } from \"./pages/Home\";\r\nimport { Monsters } from \"./pages/Monsters\";\r\nimport { CraftableItems } from \"./pages/CraftableItems\";\r\n\r\nexport const MENU = [\r\n    {\r\n        className: \"text-dark\",\r\n        linkName: \"Home\",\r\n        linkTarget: \"/\",\r\n        routePaths: [\"/\"],\r\n        exact: true,\r\n        renderFunction: (props) => {\r\n            return <Home {...props} />;\r\n        },\r\n    },\r\n    {\r\n        className: \"text-dark\",\r\n        linkName: \"Monsters\",\r\n        linkTarget: \"/monsters\",\r\n        routePaths: [\"/monsters\"],\r\n        exact: false,\r\n        renderFunction: (props) => {\r\n            return <Monsters {...props} />;\r\n        },\r\n    },\r\n    {\r\n        className: \"text-dark\",\r\n        linkName: \"Harvested Items\",\r\n        linkTarget: \"/harvesteditems\",\r\n        routePaths: [\"/harvesteditems\"],\r\n        exact: false,\r\n        renderFunction: (props) => {\r\n            return <HarvestedItems {...props} />;\r\n        },\r\n    },\r\n    {\r\n        className: \"text-dark\",\r\n        linkName: \"Trinket Tables\",\r\n        linkTarget: \"/trinkettables\",\r\n        routePaths: [\"/trinkettables\"],\r\n        exact: false,\r\n        renderFunction: (props) => {\r\n            return <span>Trinket Tables</span>;\r\n        },\r\n    },\r\n    {\r\n        className: \"text-dark\",\r\n        linkName: \"Craftable Items\",\r\n        linkTarget: \"/craftableitems\",\r\n        routePaths: [\"/craftableitems\"],\r\n        exact: false,\r\n        renderFunction: (props) => {\r\n            return <CraftableItems {...props} />;\r\n        },\r\n    },\r\n];\r\n","import React from \"react\";\r\nimport { Container, Navbar } from \"react-bootstrap\";\r\nimport { NavbarBrand, NavItem, NavLink } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { MENU } from \"../navigationConstants\";\r\n\r\nexport function NavMenu(props) {\r\n    let navOutput = [];\r\n    for (let i = 0; i < MENU.length; ++i) {\r\n        let linkDeets = MENU[i];\r\n        navOutput.push(\r\n            <NavItem key={i}>\r\n                <NavLink\r\n                    tag={Link}\r\n                    className={linkDeets.className}\r\n                    to={linkDeets.linkTarget}\r\n                >\r\n                    {linkDeets.linkName}\r\n                </NavLink>\r\n            </NavItem>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar className=\"border-bottom p-0\">\r\n                <Container>\r\n                    <NavbarBrand tag={Link} to=\"/\">\r\n                        Reactive RPG\r\n                    </NavbarBrand>\r\n                    <Container\r\n                        className=\"d-sm-inline-flex flex-sm-row-reverse\"\r\n                        navbar=\"true\"\r\n                    >\r\n                        <ul className=\"navbar-nav flex-grow\">{navOutput}</ul>\r\n                    </Container>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { NavMenu } from \"./NavMenu\";\r\nimport \"./Layout.css\";\r\n\r\nexport function Layout(props) {\r\n    return (\r\n        <div className=\"viewportWrapper\">\r\n            <NavMenu />\r\n            <Container fluid className=\"mainContentWrapper\">\r\n                {props.children}\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"./LayoutControl/Layout\";\r\nimport \"./App.css\";\r\n\r\nimport { MENU } from \"./navigationConstants\";\r\nfunction App() {\r\n    let routeOpts = [];\r\n    for (let i = 0; i < MENU.length; ++i) {\r\n        let linkDeets = MENU[i];\r\n        routeOpts.push(\r\n            <Route\r\n                key={i}\r\n                path={linkDeets.routePaths[0]}\r\n                render={(props) => linkDeets.renderFunction(props)}\r\n                exact={linkDeets.exact}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Switch>{routeOpts}</Switch>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Storage from \"./utility/StorageUtil\";\r\n\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nStorage.Init().then(() => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <Router basename={baseUrl}>\r\n        <App />\r\n      </Router>\r\n    </React.StrictMode>,\r\n    rootElement\r\n  );\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}