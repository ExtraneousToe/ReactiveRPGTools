{"version":3,"sources":["pages/DisplayList.js","components/HarvestedItemFilterBlock.js","utility/stringUtil.js","data/Monster.js","data/HarvestingTable.js","data/TrinketTable.js","data/CraftableItem.js","data/HarvestedItem.js","utility/StorageUtil.js","utility/harvestedItemUtil.js","pages/HarvestedItems.js","pages/Home.js","utility/saveFile.js","components/ChallengeRatingDisplay.js","data/referenceCardSizes.js","utility/creatureTypeUtil.js","components/MonsterFilterBlock.js","pages/Monsters.js","utility/challengeRatingUtil.js","utility/inputUtil.js","utility/descriptionUtil.js","utility/craftableItemUtil.js","pages/CraftableItems.js","navigationConstants.js","LayoutControl/NavMenu.js","LayoutControl/Layout.js","App.js","serviceWorker.js","index.js"],"names":["DisplayColumn","colDisplay","listDisplayFunc","ascendingSortFunction","this","sortFunc","bind","sortAscending","sortDescending","isAscending","a","b","DisplayList","props","headers","items","useState","sortByIdx","setSortByIdx","setSortAscending","headerRowContents","i","push","Col","key","onClick","e","preventDefault","className","length","filterObject","filterKeys","Object","keys","filter","sort","contentsRows","itemLen","map","item","idx","DisplayListRow","idFunction","pathRoot","isSelected","selectedId","Row","history","useHistory","innerCols","desiredId","headerLen","h","headerObj","pathRoute","activeName","HarvestedItemFilterBlock","label","value","setter","nameField","setNameField","filterRows","type","style","width","onChange","target","onSubmit","obj","Name","toLowerCase","match","submitFilter","display","x","y","Monster","name","referenceCardSize","source","otherSources","creatureSize","creatureType","stats","armorClass","challengeRating","health","passivePerc","languages","speed","saves","skills","senses","alignment","resistances","immunities","conditionImmunities","traits","spellcasting","actions","reactions","environments","legendaryHeader","legendaryActions","harvestingTable","trinketTableType","cardSize","size","fiveEState","feType","CreatureType","tags","console","log","feCR","cr","ChallengeRating","lair","coven","feACLines","ac","line","acObj","Number","parseInt","from","condition","ArmorClass","StatsBlock","HealthBlock","hp","passive","SpeedBlock","walk","fly","swim","climb","burrow","canHover","save","skill","resist","immune","conditionImmune","trait","action","reaction","environment","legendary","oldState","str","dex","con","int","wis","cha","HarvestingTable","TrinketTableType","replace","strOut","join","matches","exec","average","formula","SPEED_KEYS","undefined","SpeedEntry","ft","forEach","val","simpleDisplay","inObj","number","rows","HarvestingTableRow","dc","DifficultyClass","itemNameRef","ItemNameRef","qty","Quantity","notes","Notes","r","oldMonster","Rows","row","difficultyClass","itemNameReference","quantity","TrinketTable","TrinketTableRow","d8Roll","D8Roll","descriptionLine","DescriptionLine","ValueGP","weight","WeightLB","CraftableItem","crafter","rarity","requiresAttunement","description","materials","materialGrouping","attunementNote","oldItem","Crafter","Rarity","RequiresAttunement","Description","Materials","matRow","componentId","ComponentId","Type","MaterialGrouping","AttunementNote","HarvestedItem","craftingUsage","useText","requiredToolNames","CraftingUsage","UseText","RequiredToolNames","$","window","ajaxJson","fileName","Promise","resolve","reject","getJSON","data","Load5eMonsterFile","localKey","Storage","processedKeys","includes","processingKeys","_meta","meta","dependencies","monster","jdx","depKey","mon","_copy","from5eSource","monsterDict","id","err","error","_init","subStateMonsterDict","harvestingTableDict","harvestableItemDict","trinketTableDict","craftableItemDict","Init","Index","Data","monsters","SubStateMonster","harvestingTables","harvestedItems","harvestedItem","trinketTables","trinketTable","craftableItems","craftableItem","storage","harvestingTableGroup","getItemReference","simplePassthrough","joinArray","splitArray","split","HarvestedItemDisplay","hItem","para","React","Component","HarvestedItems","filterObj","setFilterObj","matchPath","location","pathname","path","params","sortStrAsc","harvestedOutput","xs","md","values","Home","filename","fileContent","link","document","createElement","download","href","encodeURIComponent","body","appendChild","click","removeChild","fileSaveAs","JSON","stringify","height","CRList","crOut","CARD_SIZES","SWARM_REGEX","CreatureTypeList","getCreatureTypeDisplayString","cType","toString","BlockRow_Text","MonsterFilterBlock","selectOpts","optLabels","typeField","setTypeField","cardSizeField","setCardSizeField","opt","CardSize","ReferenceCardSize","Monsters","outVal","sortCreatureTypeAsc","out","InLair","InCoven","sortCRAsc","subMon","subMonA","subMonB","list","ArrayInput","redraw","setRedraw","propObj","object","propKey","objKey","defaultInsert","insertLine","tarIndex","splice","arrayLines","subType","index","hideLabel","SelectInput","options","RadioButtonInput","onChangeFunc","checked","for","StringInput","propIdx","disabled","CheckboxInput","ModularDescription","desc","SimpleDescription","ListDescription","lines","ItemDescription","UnhandledDescription","entry","output","styleObj","listStyle","getIdFromItem","CraftableItemDisplay","materialOutput","mat","matItem","finalMaterialOutput","MaterialInput","CraftableItems","displayOutput","MENU","linkName","linkTarget","routePaths","exact","renderFunction","NavMenu","navOutput","linkDeets","NavItem","NavLink","tag","Link","to","Navbar","Container","NavbarBrand","navbar","Layout","fluid","children","App","routeOpts","render","Boolean","hostname","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","then","ReactDOM","StrictMode","basename","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e1ef10c6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"./DisplayList.css\";\n\nexport class DisplayColumn {\n  constructor(colDisplay, listDisplayFunc, ascendingSortFunction) {\n    this.colDisplay = colDisplay;\n    this.listDisplayFunc = listDisplayFunc;\n    this.ascendingSortFunction = ascendingSortFunction;\n\n    this.sortFunc = this.sortFunc.bind(this);\n    this.sortAscending = this.sortAscending.bind(this);\n    this.sortDescending = this.sortDescending.bind(this);\n  }\n\n  sortFunc(isAscending) {\n    return isAscending ? this.sortAscending : this.sortDescending;\n  }\n\n  sortAscending(a, b) {\n    return this.ascendingSortFunction(a, b);\n  }\n\n  sortDescending(a, b) {\n    return -this.ascendingSortFunction(a, b);\n  }\n}\n\nexport function DisplayList(props) {\n  // headers should be a collection of DisplayColumn instances\n  let headers = props.headers;\n  let items = props.items;\n\n  let [sortByIdx, setSortByIdx] = useState(0);\n  let [sortAscending, setSortAscending] = useState(true);\n\n  let headerRowContents = [];\n  for (let i = 0; i < headers.length; ++i) {\n    headerRowContents.push(\n      <Col\n        key={`dl-h-col-${i}`}\n        onClick={(e) => {\n          e.preventDefault();\n\n          if (i === sortByIdx) {\n            setSortAscending(!sortAscending);\n          } else {\n            setSortByIdx(i);\n            setSortAscending(true);\n          }\n        }}\n        className={`list-header ${i === sortByIdx && \"active\"}`}\n      >\n        {headers[i].colDisplay}{\" \"}\n        {i === sortByIdx && <>{sortAscending ? \"^\" : \"v\"}</>}\n      </Col>\n    );\n  }\n\n  let filterObject = props.filterObject;\n  let filterKeys = Object.keys(filterObject);\n\n  for (let i = 0; i < filterKeys.length; ++i) {\n    items = items.filter(filterObject[filterKeys[i]]);\n  }\n\n  items.sort(headers[sortByIdx].sortFunc(sortAscending));\n\n  let contentsRows = [];\n  let itemLen = items.length;\n  for (let i = 0; i < itemLen; ++i) {\n    contentsRows.push();\n  }\n\n  contentsRows = items.map((item, idx) => {\n    return (\n      <DisplayListRow\n        key={`row-${props.idFunction(item)}`}\n        headers={headers}\n        item={item}\n        idFunction={props.idFunction}\n        pathRoot={props.pathRoot}\n        isSelected={props.idFunction(item) === props.selectedId}\n      />\n    );\n  });\n\n  return (\n    <>\n      {/* <span>{items.length}</span> */}\n      <Row className=\"mx-0\">{headerRowContents}</Row>\n      <ul className=\"element-list\">{contentsRows}</ul>\n    </>\n  );\n}\n\nfunction DisplayListRow(props) {\n  let history = useHistory();\n\n  let { headers, item, idFunction, pathRoot, isSelected } = props;\n\n  let innerCols = [];\n\n  let desiredId = idFunction(item);\n\n  let headerLen = headers.length;\n  for (let h = 0; h < headerLen; ++h) {\n    let headerObj = headers[h];\n\n    innerCols.push(\n      <Col key={`${desiredId}-${h}`}>{headerObj.listDisplayFunc(item)}</Col>\n    );\n  }\n\n  let pathRoute = `${pathRoot}/${desiredId}`;\n\n  let activeName = isSelected ? \"active\" : \"\";\n\n  return (\n    <li\n      onClick={(e) => {\n        history.push(pathRoute);\n        e.preventDefault();\n      }}\n      className={activeName}\n    >\n      <Row>{innerCols}</Row>\n    </li>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nfunction BlockRow_Text(key, label, value, setter) {\n    return (\n        <Row key={key}>\n            <Col className=\"col-3\">{label}:</Col>\n            <Col>\n                <input\n                    type=\"text\"\n                    value={value}\n                    style={{\n                        width: \"inherit\",\n                    }}\n                    onChange={(e) => {\n                        e.preventDefault();\n                        setter(e.target.value);\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n}\n\nexport function HarvestedItemFilterBlock(props) {\n    let [nameField, setNameField] = useState(\"\");\n\n    let filterRows = [];\n\n    filterRows.push(\n        BlockRow_Text(filterRows.length, \"Name\", nameField, setNameField)\n    );\n\n    return (\n        <form\n            className=\"border\"\n            onSubmit={(e) => {\n                let obj = {};\n                if (nameField !== \"\") {\n                    obj.Name = (obj) => {\n                        return obj.Name.toLowerCase().match(\n                            nameField.toLowerCase()\n                        );\n                    };\n                }\n\n                props.submitFilter(obj);\n                e.preventDefault();\n            }}\n        >\n            {filterRows}\n            <button type=\"submit\" style={{ display: \"none\" }}>\n                Apply Filter\n            </button>\n        </form>\n    );\n}\n","export function sortAscending(a, b) {\n  let x = a.toLowerCase();\n  let y = b.toLowerCase();\n\n  if (y < x) {\n    return 1;\n  }\n  if (x < y) {\n    return -1;\n  }\n  return 0;\n}\n\n// function splitForTags(str) {\n//   if (str.includes(\"{@\")) {\n//     return str;\n//   } else {\n//     return str;\n//   }\n// }\n\nexport function stripTags(throughString) {\n  return throughString;\n\n  // const MAIN_PATTERN = /{(?<tag>@\\w+)(?<internal>.*?)}/;\n  // let matches = null;\n  // let matchGroups = null;\n\n  // do {\n  //   matches = MAIN_PATTERN.exec(throughString);\n\n  //   if (!matches) {\n  //     return throughString;\n  //   }\n\n  //   matchGroups = matches.groups;\n\n  //   switch (matchGroups.tag) {\n  //     case \"@b\":\n  //     case \"@bold\":\n  //     case \"@i\":\n  //     case \"@italic\":\n  //     case \"@s\":\n  //     case \"@strike\":\n  //     case \"@u\":\n  //     case \"@underline\":\n  //       return matchGroups.internal;\n\n  //     case \"@h\":\n  //       return \"Hit: \";\n\n  //     case \"@dc\":\n  //       return `DC ${matchGroups.internal}`;\n\n  //     case \"@atk\":\n  //     // return Renderer.attackTagToFull(text);\n\n  //     case \"@chance\":\n  //     case \"@d20\":\n  //     case \"@damage\":\n  //     case \"@dice\":\n  //     case \"@hit\":\n  //     case \"@recharge\": {\n  //       // const [rollText, displayText] = Renderer.splitTagByPipe(text);\n  //       switch (matchGroups.tag) {\n  //         case \"@damage\":\n  //         case \"@dice\": {\n  //           // return displayText || rollText.replace(/;/g, \"/\");\n  //         }\n  //         case \"@d20\":\n  //         case \"@hit\": {\n  //           // return (\n  //           //   displayText ||\n  //           //   (() => {\n  //           //     const n = Number(rollText);\n  //           //     if (isNaN(n)) {\n  //           //       throw new Error(`Could not parse \"${rollText}\" as a number!`);\n  //           //     }\n  //           //     return `${n >= 0 ? \"+\" : \"\"}${n}`;\n  //           //   })()\n  //           // );\n  //         }\n  //         case \"@recharge\": {\n  //           // const asNum = Number(rollText || 6);\n  //           // if (isNaN(asNum)) {\n  //           //   throw new Error(`Could not parse \"${rollText}\" as a number!`);\n  //           // }\n  //           // return `(Recharge ${asNum}${asNum < 6 ? `\\u20136` : \"\"})`;\n  //         }\n  //         case \"@chance\": {\n  //           // return displayText || `${rollText} percent`;\n  //         }\n  //       }\n  //       // throw new Error(`Unhandled tag: ${tag}`);\n  //     }\n\n  //     case \"@comic\":\n  //     case \"@comicH1\":\n  //     case \"@comicH2\":\n  //     case \"@comicH3\":\n  //     case \"@comicH4\":\n  //     case \"@comicNote\":\n  //     case \"@note\":\n  //     case \"@sense\":\n  //     case \"@skill\": {\n  //       // return text;\n  //     }\n\n  //     case \"@5etools\":\n  //     case \"@adventure\":\n  //     case \"@book\":\n  //     case \"@filter\":\n  //     case \"@footnote\":\n  //     case \"@link\":\n  //     case \"@scaledice\":\n  //     case \"@scaledamage\":\n  //     case \"@loader\":\n  //     case \"@color\":\n  //     case \"@highlight\": {\n  //       // const parts = Renderer.splitTagByPipe(text);\n  //       // return parts[0];\n  //     }\n\n  //     case \"@area\": {\n  //       // const [compactText, areaId, flags, ...others] = Renderer.splitTagByPipe(\n  //       //   text\n  //       // );\n  //       // return flags && flags.includes(\"x\")\n  //       //   ? compactText\n  //       //   : `${flags && flags.includes(\"u\") ? \"A\" : \"a\"}rea ${compactText}`;\n  //     }\n\n  //     case \"@action\":\n  //     case \"@background\":\n  //     case \"@boon\":\n  //     case \"@class\":\n  //     case \"@condition\":\n  //     case \"@creature\":\n  //     case \"@cult\":\n  //     case \"@disease\":\n  //     case \"@feat\":\n  //     case \"@hazard\":\n  //     case \"@item\":\n  //     case \"@language\":\n  //     case \"@object\":\n  //     case \"@optfeature\":\n  //     case \"@psionic\":\n  //     case \"@race\":\n  //     case \"@reward\":\n  //     case \"@vehicle\":\n  //     case \"@spell\":\n  //     case \"@status\":\n  //     case \"@table\":\n  //     case \"@trap\":\n  //     case \"@variantrule\": {\n  //       // const parts = Renderer.splitTagByPipe(text);\n  //       // return parts.length >= 3 ? parts[2] : parts[0];\n  //     }\n\n  //     case \"@deity\": {\n  //       // const parts = Renderer.splitTagByPipe(text);\n  //       // return parts.length >= 4 ? parts[3] : parts[0];\n  //     }\n\n  //     case \"@classFeature\": {\n  //       // const parts = Renderer.splitTagByPipe(text);\n  //       // return parts.length >= 6 ? parts[5] : parts[0];\n  //     }\n\n  //     case \"@subclassFeature\": {\n  //       // const parts = Renderer.splitTagByPipe(text);\n  //       // return parts.length >= 8 ? parts[7] : parts[0];\n  //     }\n\n  //     case \"@homebrew\": {\n  //     }\n  //     default:\n  //       break;\n  //   }\n\n  //   return matchGroups.internal.trim();\n\n  //   break;\n  // } while (true);\n\n  // const TAG_PATTERN = /(?<pre>.*){@(?<tag>\\S*) (?<text>[^|]*)(?<filters>|.*)?}(?<post>.*)/g;\n\n  // let matchGroup = TAG_PATTERN.exec(throughString);\n  // //console.log(throughString + \" => \" + JSON.stringify(matchGroup.groups));\n\n  // if (false && matchGroup) {\n  //   return matchGroup.groups.pre + \" \" + matchGroup.groups.text;\n  // } else {\n  //   return throughString;\n  // }\n}\n","export class Monster {\n  static from5eSource(fiveEState) {\n    let feType = null;\n\n    switch (typeof fiveEState.type) {\n      case \"string\":\n        feType = new CreatureType({ type: fiveEState.type });\n        break;\n      case \"object\":\n        feType = new CreatureType({\n          type: fiveEState.type.type,\n          tags: fiveEState.type.tags,\n        });\n        break;\n      default:\n        console.log(\n          `Unhandled creatureType type: ${typeof fiveEState.type} => ${\n            fiveEState.type\n          } of ${fiveEState.name}`\n        );\n        break;\n    }\n\n    let feCR = null;\n\n    switch (typeof fiveEState.cr) {\n      case \"string\":\n        feCR = new ChallengeRating({ cr: fiveEState.cr });\n        break;\n      case \"object\":\n        feCR = new ChallengeRating({\n          cr: fiveEState.cr.cr,\n          lair: fiveEState.cr.lair,\n          coven: fiveEState.cr.coven,\n        });\n        break;\n      case \"undefined\":\n        feCR = new ChallengeRating({});\n        break;\n      default:\n        console.log(\n          `Unhandled CR type: ${typeof fiveEState.cr} => ${fiveEState.cr} of ${\n            fiveEState.name\n          }`\n        );\n        break;\n    }\n\n    let feACLines = [];\n    for (let i = 0; i < fiveEState.ac.length; ++i) {\n      let line = fiveEState.ac[i];\n      let acObj = {};\n\n      switch (typeof line) {\n        case \"number\":\n          acObj.ac = line;\n          break;\n        case \"string\":\n          acObj.ac = Number.parseInt(line);\n          break;\n        case \"object\":\n          acObj.ac = Number.parseInt(line.ac);\n          acObj.from = line.from;\n          acObj.condition = line.condition;\n          break;\n        default:\n          console.log(\n            `Unhandled AC type: ${typeof fiveEState.ac} => ${\n              fiveEState.ac\n            } of ${fiveEState.name}`\n          );\n          break;\n      }\n\n      feACLines.push(new ArmorClass(acObj));\n    }\n\n    return new Monster({\n      name: fiveEState.name, //   name,\n      referenceCardSize: 0, // referenceCardSize,\n      source: fiveEState.source, // source,\n      otherSources: fiveEState.otherSources, // otherSources,\n      size: fiveEState.size, // creatureSize,\n      creatureType: feType, // creatureType,\n      stats: new StatsBlock(\n        fiveEState\n        // fiveEState.str,\n        // fiveEState.dex,\n        // fiveEState.con,\n        // fiveEState.int,\n        // fiveEState.wis,\n        // fiveEState.cha\n      ), // stats,\n      armorClass: feACLines, // armorClass,\n      challengeRating: feCR, // challengeRating,\n      health: new HealthBlock(fiveEState.hp), // health,\n      passivePerc: fiveEState.passive, // passivePerc,\n      languages: fiveEState.languages, // languages,\n      speed: new SpeedBlock({\n        walk: fiveEState.speed.walk,\n        fly: fiveEState.speed.fly,\n        swim: fiveEState.speed.swim,\n        climb: fiveEState.speed.climb,\n        burrow: fiveEState.speed.burrow,\n        canHover: fiveEState.speed.canHover,\n      }), // speed,\n      saves: fiveEState.save, // saves,\n      skills: fiveEState.skill, // skills,\n      senses: fiveEState.senses, // senses,\n      alignment: fiveEState.alignment, // alignment\n      resistances: fiveEState.resist, // resistances\n      immunities: fiveEState.immune, // immunity\n      conditionImmunities: fiveEState.conditionImmune, // conditionImmunities\n      traits: fiveEState.trait, //traits\n      spellcasting: fiveEState.spellcasting, //spellcasting\n      actions: fiveEState.action, //actions\n      reactions: fiveEState.reaction, //reactions\n      environments: fiveEState.environment, //environments\n      legendaryHeader: fiveEState.legendaryHeader, //legendaryHeader\n      legendaryActions: fiveEState.legendary, //legendaryActions\n    });\n  }\n\n  static fromCombinedSources(oldState, fiveEState) {\n    let feType = null;\n\n    switch (typeof fiveEState.type) {\n      case \"string\":\n        feType = new CreatureType({ type: fiveEState.type });\n        break;\n      case \"object\":\n        feType = new CreatureType({\n          type: fiveEState.type.type,\n          tags: fiveEState.type.tags,\n        });\n        break;\n      default:\n        console.log(`Unhandled creatureType type: ${typeof fiveEState.type}`);\n        break;\n    }\n\n    let feCR = null;\n\n    switch (typeof fiveEState.cr) {\n      case \"string\":\n        feCR = new ChallengeRating({ cr: fiveEState.cr });\n        break;\n      case \"object\":\n        feCR = new ChallengeRating({\n          cr: fiveEState.cr.cr,\n          lair: fiveEState.cr.lair,\n          coven: fiveEState.cr.coven,\n        });\n        break;\n      default:\n        console.log(`Unhandled CR type: ${typeof fiveEState.type}`);\n        break;\n    }\n\n    let feACLines = [];\n    for (let i = 0; i < fiveEState.ac.length; ++i) {\n      let line = fiveEState.ac[i];\n      let acObj = {};\n\n      switch (typeof fiveEState.cr) {\n        case \"number\":\n          acObj.ac = line;\n          break;\n        case \"string\":\n          acObj.ac = Number(line);\n          break;\n        case \"object\":\n          acObj.ac = line.ac;\n          acObj.from = line.from;\n          break;\n        default:\n          console.log(`Unhandled AC type: ${typeof fiveEState.type}`);\n          break;\n      }\n\n      feACLines.push(new ArmorClass(acObj));\n    }\n\n    return new Monster(\n      fiveEState.name, //   name,\n      oldState ? oldState.referenceCardSize : 0, // referenceCardSize,\n      fiveEState.source, // source,\n      fiveEState.otherSources, // otherSources,\n      fiveEState.size, // creatureSize,\n      feType, // creatureType,\n      new StatsBlock(\n        fiveEState.str,\n        fiveEState.dex,\n        fiveEState.con,\n        fiveEState.int,\n        fiveEState.wis,\n        fiveEState.cha\n      ), // stats,\n      feACLines, // armorClass,\n      feCR, // challengeRating,\n      new HealthBlock(fiveEState.hp), // health,\n      fiveEState.passive, // passivePerc,\n      fiveEState.languages, // languages,\n      new SpeedBlock(fiveEState.speed), // speed,\n      fiveEState.save, // saves,\n      fiveEState.skill, // skills,\n      fiveEState.senses, // senses,\n      fiveEState.alignment, // alignment\n      fiveEState.resist, // resistance\n      fiveEState.immune, // immunity\n      fiveEState.conditionImmune, // condition immunity\n      [], //traits, //traits\n      [], //spellcasting, //spellcasting\n      [], //actions, //actions\n      [], //reactions, //reactions\n      [], //environments, //environments\n      [], //legendaryHeader, //legendaryHeader\n      [], //legendaryActions, //legendaryActions\n      oldState ? new HarvestingTable(oldState.HarvestingTable) : null, // harvestingTable\n      oldState ? oldState.TrinketTableType : null // trinketTableType\n    );\n  }\n\n  constructor({\n    name,\n    referenceCardSize,\n    source,\n    otherSources,\n    creatureSize,\n    creatureType,\n    stats,\n    armorClass,\n    challengeRating,\n    health,\n    passivePerc,\n    languages,\n    speed,\n    saves,\n    skills,\n    senses,\n    alignment,\n    resistances,\n    immunities,\n    conditionImmunities,\n    traits,\n    spellcasting,\n    actions,\n    reactions,\n    environments,\n    legendaryHeader,\n    legendaryActions,\n    harvestingTable,\n    trinketTableType,\n  }) {\n    this.name = name;\n    this.cardSize = referenceCardSize;\n    this.source = source;\n    this.otherSources = otherSources || [];\n    this.size = creatureSize;\n    this.type = creatureType;\n    this.speed = speed;\n    this.stats = stats;\n    this.saves = saves || null;\n    this.skills = skills;\n    this.senses = senses;\n    this.armorClass = armorClass;\n    this.health = health;\n    this.passivePerc = passivePerc;\n    this.languages = languages;\n    this.challengeRating = challengeRating;\n    this.resistances = resistances || null;\n    this.immunities = immunities || null;\n    this.conditionImmunities = conditionImmunities || null;\n    this.alignment = alignment;\n    this.traits = traits || [];\n    this.spellcasting = spellcasting || [];\n    this.actions = actions || [];\n    this.reactions = reactions || [];\n    this.environments = environments || [];\n    this.legendaryHeader = legendaryHeader;\n    this.legendaryActions = legendaryActions || [];\n    this.harvestingTable = harvestingTable || null;\n    this.trinketTableType = trinketTableType || null;\n  }\n\n  get id() {\n    return (\n      this.name.replace(/[\\s'\\-()]/g, \"\") +\n      \"_\" +\n      this.source\n    ).toLowerCase();\n  }\n}\n\n// Monster Bits\nclass ArmorClass {\n  constructor({ ac, from, condition }) {\n    this.ac = ac;\n    this.from = from;\n    this.condition = condition;\n  }\n\n  get simpleDisplay() {\n    //return JSON.stringify(this);\n    var strOut = this.ac;\n\n    if (this.from) {\n      strOut = `${this.ac} (${this.from.join(\", \")})`;\n    } else if (this.condition) {\n      strOut = `${this.ac} (${this.condition.join(\", \")})`;\n    }\n\n    return strOut;\n  }\n}\n\nclass CreatureType {\n  constructor({ type, tags }) {\n    this.type = type;\n    this.tags = tags || [];\n  }\n}\n\nclass ChallengeRating {\n  constructor({ cr, lair, coven }) {\n    this.cr = cr || null;\n    var matches = /\\d+\\/(\\d+)/g.exec(this.cr);\n    if (matches !== null && matches.length > 0) {\n      this.cr = 1 / Number.parseInt(matches[1]);\n    } else this.cr = Number.parseInt(this.cr);\n    this.lair = lair || null;\n    this.coven = coven || null;\n  }\n}\n\nclass HealthBlock {\n  constructor({ average, formula }) {\n    this.average = average;\n    this.formula = formula;\n  }\n}\n\nconst SPEED_KEYS = [\"fly\", \"climb\", \"swim\", \"burrow\"];\nclass SpeedBlock {\n  constructor({ walk, fly, climb, swim, burrow, canHover }) {\n    this.walk = walk !== undefined ? new SpeedEntry(walk) : null;\n    this.fly = fly !== undefined ? new SpeedEntry(fly) : null;\n    this.climb = climb !== undefined ? new SpeedEntry(climb) : null;\n    this.swim = swim !== undefined ? new SpeedEntry(swim) : null;\n    this.burrow = burrow !== undefined ? new SpeedEntry(burrow) : null;\n    this.canHover = canHover !== undefined ? canHover : false;\n  }\n\n  get simpleDisplay() {\n    let strOut = `${this.walk.ft} ft.`;\n\n    SPEED_KEYS.forEach((val) => {\n      if (this[val]) {\n        strOut += `, ${val} ${this[val].simpleDisplay}`;\n      }\n    });\n\n    return strOut;\n  }\n}\n\nclass SpeedEntry {\n  constructor(inObj) {\n    if (typeof inObj === \"number\" || inObj === 0) {\n      this.ft = inObj;\n      this.condition = null;\n    } else {\n      this.ft = inObj.number;\n      this.condition = inObj.condition;\n    }\n  }\n\n  get simpleDisplay() {\n    if (!this.condition) {\n      return `${this.ft} ft.`;\n    } else {\n      return `${this.ft} ft. ${this.condition}`;\n    }\n  }\n}\n\nclass StatsBlock {\n  constructor({ str, dex, con, int, wis, cha }) {\n    this.str = str;\n    this.dex = dex;\n    this.con = con;\n    this.int = int;\n    this.wis = wis;\n    this.cha = cha;\n  }\n}\n\n// HarvestingTables\nclass HarvestingTable {\n  constructor(inObj) {\n    this.rows = [];\n    for (let i = 0; i < inObj.rows; ++i) {\n      this.rows.push(new HarvestingTableRow(inObj.rows[i]));\n    }\n  }\n}\n\nclass HarvestingTableRow {\n  constructor(inObj) {\n    this.dc = inObj.DifficultyClass;\n    this.itemNameRef = inObj.ItemNameRef;\n    this.qty = inObj.Quantity;\n    this.notes = inObj.Notes;\n  }\n}\n","export class HarvestingTable {\n  static fromOld(oldMonster) {\n    if (!oldMonster.HarvestingTable.Rows) return null;\n\n    return new HarvestingTable({\n      name: oldMonster.Name,\n      rows: oldMonster.HarvestingTable.Rows.map(\n        (row) =>\n          new HarvestingTableRow({\n            difficultyClass: row.DifficultyClass,\n            itemNameReference: row.ItemNameRef,\n            quantity: row.Quantity,\n            notes: row.Notes,\n          })\n      ),\n    });\n  }\n\n  constructor({ name, rows }) {\n    this.name = name;\n    this.rows = rows.map((r) => new HarvestingTableRow(r));\n  }\n}\n\nclass HarvestingTableRow {\n  constructor({ difficultyClass, itemNameReference, quantity, notes }) {\n    this.difficultyClass = difficultyClass;\n    this.itemNameReference = itemNameReference;\n    this.quantity = quantity;\n    this.notes = notes;\n  }\n}\n","export class TrinketTable {\n  static fromOld({ TrinketTableType, Rows }) {\n    return new TrinketTable({\n      trinketTableType: TrinketTableType,\n      rows: Rows.map(\n        (row) =>\n          new TrinketTableRow({\n            d8Roll: row.D8Roll,\n            descriptionLine: row.DescriptionLine,\n            value: row.ValueGP,\n            weight: row.WeightLB,\n          })\n      ),\n    });\n  }\n\n  constructor({ trinketTableType, rows }) {\n    this.trinketTableType = trinketTableType;\n    this.rows = rows;\n  }\n}\n\nclass TrinketTableRow {\n  constructor({ d8Roll, descriptionLine, value, weight }) {\n    this.d8Roll = d8Roll;\n    this.descriptionLine = descriptionLine;\n    this.value = value;\n    this.weight = weight;\n  }\n}\n","export class CraftableItem {\n  static fromOld(oldItem) {\n    return new CraftableItem({\n      name: oldItem.Name,\n      crafter: oldItem.Crafter,\n      rarity: oldItem.Rarity,\n      requiresAttunement: oldItem.RequiresAttunement,\n      description: oldItem.Description,\n      materials: oldItem.Materials.map((matRow) => {\n        return { componentId: matRow.ComponentId, quantity: matRow.Quantity };\n      }),\n      type: oldItem.Type,\n      materialGrouping: oldItem.MaterialGrouping,\n      attunementNote: oldItem.AttunementNote,\n    });\n  }\n\n  constructor({\n    name,\n    crafter,\n    rarity,\n    requiresAttunement,\n    description,\n    materials,\n    type,\n    materialGrouping,\n    attunementNote,\n  }) {\n    this.name = name;\n    this.crafter = crafter;\n    this.rarity = rarity;\n    this.requiresAttunement = requiresAttunement;\n    this.description = description;\n    this.materials = materials;\n    this.type = type;\n    this.materialGrouping = materialGrouping;\n    this.attunementNote = attunementNote;\n  }\n\n  get id() {\n    return this.name.toLowerCase().replace(/\\s+/g, \"_\");\n  }\n}\n","export class HarvestedItem {\n  static fromOld(oldItem) {\n    return new HarvestedItem({\n      name: oldItem.Name,\n      value: oldItem.ValueGP,\n      weight: oldItem.WeightLB,\n      craftingUsage: oldItem.CraftingUsage,\n      description: oldItem.Description,\n      useText: oldItem.UseText,\n      requiredToolNames: oldItem.RequiredToolNames,\n    });\n  }\n\n  constructor({\n    name,\n    value,\n    weight,\n    craftingUsage,\n    description,\n    useText,\n    requiredToolNames,\n  }) {\n    this.name = name;\n    this.value = value;\n    this.weight = weight;\n    this.craftingUsage = craftingUsage;\n    this.description = description;\n    this.useText = useText;\n    this.requiredToolNames = requiredToolNames;\n  }\n\n  get id() {\n    return this.name.replace(/\\s+/gi, \"_\").replace(/\\//gi, \"-\").toLowerCase();\n  }\n}\n","import Data from \"../data/system-state.json\";\nimport Index from \"../data/bestiary/index.json\";\nimport { Monster } from \"../data/Monster\";\nimport { HarvestingTable } from \"../data/HarvestingTable\";\nimport { TrinketTable } from \"../data/TrinketTable\";\nimport { CraftableItem } from \"../data/CraftableItem\";\nimport { HarvestedItem } from \"../data/HarvestedItem\";\n\nconst $ = window.$;\n\nasync function ajaxJson(fileName) {\n  return new Promise((resolve, reject) => {\n    $.getJSON(`data/bestiary/${fileName}`, (data) => {\n      resolve(data);\n    });\n  });\n}\n\nasync function Load5eMonsterFile({ key, fileName }) {\n  let localKey = key;\n\n  // check if already processed or already being processed\n  if (Storage.processedKeys.includes(localKey.toLowerCase())) {\n    console.log(`[${localKey}] already done.`);\n    return;\n  } else if (Storage.processingKeys.includes(localKey.toLowerCase())) {\n    console.log(`[${localKey}] being processed.`);\n    return;\n  }\n\n  Storage.processingKeys.push(localKey.toLowerCase());\n\n  console.log(`Starting on key[${localKey.toLowerCase()}]`);\n\n  var data = await ajaxJson(fileName);\n  if (data._meta) {\n    var meta = data._meta;\n    // await for any dependencies to be loaded in\n    if (meta.dependencies && meta.dependencies.monster) {\n      for (let jdx = 0; jdx < meta.dependencies.monster.length; ++jdx) {\n        var depKey = meta.dependencies.monster[jdx];\n        console.log(\n          `Starting on key[${depKey.toLowerCase()}] required as a dependency of [${localKey.toLowerCase()}]`\n        );\n        await Load5eMonsterFile({\n          key: depKey,\n          fileName: `bestiary-${depKey.toLowerCase()}.json`,\n        });\n      }\n    }\n  }\n\n  for (let idx = 0; idx < data.monster.length; ++idx) {\n    let mon = data.monster[idx];\n\n    if (mon._copy) {\n      // console.log(\n      //   `For now, skipping _copy prop monsters ... on ${mon.name}`\n      // );\n      continue;\n    }\n\n    try {\n      mon = Monster.from5eSource(mon);\n\n      if (!Storage.monsterDict[mon.id]) {\n        Storage.monsterDict[mon.id] = mon;\n      }\n    } catch (err) {\n      console.error(\n        `Loading on monster: ${mon.name} in file: ${fileName} failed.`\n      );\n    }\n  }\n\n  console.log(`${localKey} processed.`);\n  Storage.processedKeys.push(localKey.toLowerCase());\n}\n\n// let initialised = false;\nconst Storage = {\n  _init: false,\n\n  // dictionaries\n  monsterDict: {},\n  subStateMonsterDict: {},\n  harvestingTableDict: {},\n  harvestableItemDict: {},\n  trinketTableDict: {},\n  craftableItemDict: {},\n\n  processingKeys: [],\n  processedKeys: [],\n\n  Init: async () => {\n    if (Storage._init) {\n      console.log(\"Storage already initialised\");\n      return;\n    }\n\n    for (let key in Index) {\n      console.log(`${key} :: ${Index[key]}`);\n\n      await Load5eMonsterFile({ key: key, fileName: Index[key] });\n    }\n\n    for (let idx = 0; idx < Data.monsters.length; ++idx) {\n      let monster = new SubStateMonster(Data.monsters[idx]);\n      Storage.subStateMonsterDict[monster.id] = monster;\n    }\n\n    for (let idx = 0; idx < Data.harvestingTables.length; ++idx) {\n      let harvestingTable = new HarvestingTable(Data.harvestingTables[idx]);\n      Storage.harvestingTableDict[harvestingTable.name] = harvestingTable;\n    }\n\n    for (let idx = 0; idx < Data.harvestedItems.length; ++idx) {\n      let harvestedItem = new HarvestedItem(Data.harvestedItems[idx]);\n      Storage.harvestableItemDict[harvestedItem.id] = harvestedItem;\n    }\n\n    for (let idx = 0; idx < Data.trinketTables.length; ++idx) {\n      let trinketTable = new TrinketTable(Data.trinketTables[idx]);\n      Storage.trinketTableDict[trinketTable.trinketTableType] = trinketTable;\n    }\n\n    for (let idx = 0; idx < Data.craftableItems.length; ++idx) {\n      let craftableItem = new CraftableItem(Data.craftableItems[idx]);\n      Storage.craftableItemDict[craftableItem.id] = craftableItem;\n    }\n\n    Storage._init = true;\n  },\n};\n\nwindow.storage = Storage;\nexport default Storage;\n\nclass SubStateMonster {\n  constructor({\n    name,\n    cardSize,\n    source,\n    trinketTableType,\n    harvestingTableGroup,\n  }) {\n    this.name = name;\n    this.cardSize = cardSize;\n    this.source = source;\n    this.trinketTableType = trinketTableType;\n    this.harvestingTableGroup = harvestingTableGroup;\n  }\n\n  get id() {\n    return (\n      this.name.replace(/[\\s'\\-()]/g, \"\") +\n      \"_\" +\n      this.source\n    ).toLowerCase();\n  }\n}\n","import React from \"react\";\nimport { Container, Col, Row, Form } from \"react-bootstrap\";\n\nexport function getItemReferenceFromName(name) {\n  return name.replace(/\\s+/gi, \"_\").replace(/\\//gi, \"-\").toLowerCase();\n}\n\nexport function getItemReference(harvestedItem) {\n  return harvestedItem.id;\n}\n\nfunction simplePassthrough(val) {\n  return val;\n}\n\nconst ARRAY_CONC = \";;\";\nfunction joinArray(val) {\n  return val.join(ARRAY_CONC);\n}\nfunction splitArray(val) {\n  return val.split(ARRAY_CONC);\n}\n\nexport function HarvestedItemDisplay(props) {\n  let hItem = props.harvestedItem;\n\n  return (\n    <>\n      {/* {JSON.stringify(hItem)} */}\n      {/* <Row>\n                <Col className=\"col-3 font-weight-bold\">ReferenceId:</Col>\n                <Col>{hItem.ReferenceId}</Col>\n            </Row> */}\n      <Row>\n        <Col className=\"col-3 font-weight-bold\">Name:</Col>\n        <Col>{hItem.name}</Col>\n      </Row>\n      <Row>\n        <Col className=\"col-3 font-weight-bold\">Value:</Col>\n        <Col>{hItem.value}</Col>\n      </Row>\n      <Row>\n        <Col className=\"col-3 font-weight-bold\">Weight:</Col>\n        <Col>{hItem.weight}</Col>\n      </Row>\n      <Row>\n        <Col className=\"col-3 font-weight-bold\">Required Tools:</Col>\n        <Col>\n          {hItem.requiredToolNames.length === 0\n            ? \"-\"\n            : hItem.requiredToolNames.join(\" and \")}\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"col-3 font-weight-bold\">CraftingUsage:</Col>\n        <Col>\n          {hItem.craftingUsage.length === 0\n            ? \"-\"\n            : hItem.craftingUsage.join(\" and \")}\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"col-3 font-weight-bold\">Description:</Col>\n        <Col>\n          {hItem.description.map((para, idx) => {\n            return <p key={idx}>{para}</p>;\n          })}\n        </Col>\n      </Row>\n      {hItem.useText.length !== 0 && (\n        <Row>\n          <Col className=\"col-3 font-weight-bold\">UseText:</Col>\n          <Col>\n            {hItem.useText.map((para, idx) => {\n              return <p key={idx}>{para}</p>;\n            })}\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n}\n\nexport class EditingHarvestedItemDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.stringKeys = [\n      {\n        key: \"id\",\n        type: \"text\",\n        retrieve: simplePassthrough,\n        store: simplePassthrough,\n      },\n      {\n        key: \"name\",\n        type: \"text\",\n        retrieve: simplePassthrough,\n        store: simplePassthrough,\n      },\n      {\n        key: \"value\",\n        type: \"text\",\n        retrieve: simplePassthrough,\n        store: simplePassthrough,\n      },\n      {\n        key: \"weight\",\n        type: \"text\",\n        retrieve: simplePassthrough,\n        store: simplePassthrough,\n      },\n      {\n        key: \"craftingUsage\",\n        type: \"text\",\n        retrieve: joinArray,\n        store: splitArray,\n      },\n      {\n        key: \"requiredToolNames\",\n        type: \"text\",\n        retrieve: joinArray,\n        store: splitArray,\n      },\n      {\n        key: \"description\",\n        type: \"text\",\n        retrieve: joinArray,\n        store: splitArray,\n      },\n      {\n        key: \"useText\",\n        type: \"text\",\n        retrieve: joinArray,\n        store: splitArray,\n      },\n    ];\n\n    this.state = this.generateStateObject(this.props.harvestedItem);\n\n    this.applyStateToItem = this.applyStateToItem.bind(this);\n  }\n\n  generateStateObject(harvestedItem) {\n    let obj = {};\n    for (let i = 0; i < this.stringKeys.length; ++i) {\n      let targetValue = harvestedItem[this.stringKeys[i].key];\n\n      obj[this.stringKeys[i].key] = this.stringKeys[i].retrieve(targetValue);\n    }\n    return obj;\n  }\n\n  handleInput(event, key) {\n    event.preventDefault();\n\n    console.log(`${key}: ${event.target.value}`);\n\n    let partialObject = {};\n    partialObject[key] = event.target.value;\n    this.setState(partialObject);\n  }\n\n  applyStateToItem(event) {\n    event.preventDefault();\n    console.log(\"applyStateToItem\");\n\n    for (let i = 0; i < this.stringKeys.length; ++i) {\n      let targetValue = this.state[this.stringKeys[i].key];\n\n      this.props.harvestedItem[this.stringKeys[i].key] = this.stringKeys[\n        i\n      ].store(targetValue);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.harvestedItem.ReferenceId !==\n      prevProps.harvestedItem.ReferenceId\n    ) {\n      this.setState(this.generateStateObject(this.props.harvestedItem));\n    }\n  }\n\n  componentWillUnmount() {\n    let partialObject = {};\n    for (let i = 0; i < this.stringKeys.length; ++i) {\n      partialObject[this.stringKeys[i]] = \"\";\n    }\n    this.setState(partialObject);\n  }\n\n  render() {\n    let output = [];\n\n    for (let i = 0; i < this.stringKeys.length; ++i) {\n      let key = this.stringKeys[i];\n      output.push(\n        <Row key={output.length}>\n          <Col className=\"col-3 font-weight-bold\">{key.key}: </Col>\n          <Col className=\"border\">\n            <input\n              type={key.type}\n              value={this.state[key.key]}\n              style={{ width: \"inherit\" }}\n              onChange={(e) => {\n                e.preventDefault();\n                this.handleInput(e, key.key);\n              }}\n              disabled={key.key === \"ReferenceId\"}\n            />\n          </Col>\n        </Row>\n      );\n    }\n\n    return (\n      <Container fluid>\n        <Form onSubmit={this.applyStateToItem}>\n          {output}\n          <input type=\"submit\" value=\"Apply Changes\" />\n        </Form>\n      </Container>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { matchPath } from \"react-router\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { DisplayList, DisplayColumn } from \"./DisplayList\";\nimport { HarvestedItemFilterBlock } from \"../components/HarvestedItemFilterBlock\";\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\nimport Storage from \"../utility/StorageUtil\";\nimport {\n  EditingHarvestedItemDisplay,\n  HarvestedItemDisplay,\n  getItemReference,\n} from \"../utility/harvestedItemUtil\";\n\nexport function HarvestedItems(props) {\n  let [filterObj, setFilterObj] = useState({});\n\n  const pathWithId = \"/harvesteditems/:id\";\n  let harvestedItem = null;\n\n  // extract monster id from the path\n  let match = matchPath(props.location.pathname, { path: pathWithId });\n  let selectedId = \"\";\n  if (match !== null) {\n    // if there is an id, search for the monster\n    selectedId = match.params.id;\n    if (Storage.harvestableItemDict[selectedId] !== undefined) {\n      harvestedItem = Storage.harvestableItemDict[selectedId];\n    }\n  }\n\n  const headers = [\n    new DisplayColumn(\n      \"Name\",\n      (item) => {\n        return <>{item[\"name\"]}</>;\n      },\n      (a, b) => {\n        return sortStrAsc(a.name, b.name);\n      }\n    ),\n  ];\n\n  let harvestedOutput = [\"Select an item from the list\"];\n\n  if (harvestedItem !== null) {\n    if (false && process.env.NODE_ENV === \"development\") {\n      harvestedOutput = [\n        <EditingHarvestedItemDisplay harvestedItem={harvestedItem} />,\n      ];\n    } else {\n      harvestedOutput = [\n        <HarvestedItemDisplay harvestedItem={harvestedItem} />,\n      ];\n    }\n  }\n\n  return (\n    <>\n      <Row className=\"h-100\" xs={1} md={2}>\n        <Col className=\"border h-100\">\n          <HarvestedItemFilterBlock submitFilter={setFilterObj} />\n          <DisplayList\n            headers={headers}\n            items={Object.values(Storage.harvestableItemDict)}\n            filterObject={filterObj}\n            pathRoot={props.match.path}\n            idFunction={getItemReference}\n            selectedId={selectedId}\n          />\n        </Col>\n        <Col className=\"border scrollableColumn\">{harvestedOutput}</Col>\n      </Row>\n    </>\n  );\n}\n","import React from \"react\";\nimport { fileSaveAs } from \"../utility/saveFile\";\nimport Storage from \"../utility/StorageUtil\";\nimport { sortAscending } from \"../utility/stringUtil\";\n\nexport function Home(props) {\n  return (\n    <div>\n      <h1>Home</h1>\n      <div>\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n\n            let monsters = Object.values(Storage.subStateMonsterDict);\n            monsters.sort((a, b) => sortAscending(a.id, b.id));\n\n            let harvestedItems = Object.values(Storage.harvestableItemDict);\n            harvestedItems.sort((a, b) => sortAscending(a.id, b.id));\n\n            let harvestingTables = Object.values(Storage.harvestingTableDict);\n            harvestingTables.sort((a, b) => sortAscending(a.name, b.name));\n\n            let trinketTables = Object.values(Storage.trinketTableDict);\n            trinketTables.sort((a, b) =>\n              sortAscending(a.trinketTableType, b.trinketTableType)\n            );\n\n            let craftableItems = Object.values(Storage.craftableItemDict);\n            craftableItems.sort((a, b) => sortAscending(a.id, b.id));\n\n            fileSaveAs(\n              \"system-state.json\",\n              JSON.stringify({\n                monsters: monsters,\n                harvestingTables: harvestingTables,\n                harvestedItems: harvestedItems,\n                trinketTables: trinketTables,\n                craftableItems: craftableItems,\n              })\n            );\n          }}\n        >\n          Save State\n        </button>\n      </div>\n      <div>\n        <input type=\"text\" style={{ width: \"100%\", height: \"4em\" }} />\n      </div>\n      {/* <div>{JSON.stringify(props)}</div> */}\n      {/* <div>{JSON.stringify(process.env)}</div> */}\n    </div>\n  );\n}\n","export function fileSaveAs(filename, fileContent) {\n    var link = document.createElement(\"a\");\n    link.download = filename;\n    link.href =\n        \"data:text/plain;charset=utf-8,\" + encodeURIComponent(fileContent);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\n","import React from \"react\";\n\nexport function CRList(props) {\n  let cr = props.cr;\n\n  if (!cr) {\n    return <>-</>;\n  } else {\n    let crOut = cr.cr;\n\n    if (typeof crOut === \"number\" && crOut < 1 && crOut !== 0) {\n      crOut = `1/${1 / crOut}`;\n    }\n\n    if (cr.coven !== null) {\n      crOut += ` (${cr.coven} in coven)`;\n    }\n\n    if (cr.lair !== null) {\n      crOut += ` (${cr.lair} in lair)`;\n    }\n\n    return <>{crOut}</>;\n  }\n}\n","export const CARD_SIZES = [\"None\", \"Small\", \"Medium\", \"Large\"];\n","import React from \"react\";\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\n\nconst SWARM_REGEX = /swarm:(\\w)/i;\n\nexport function CreatureTypeList(props) {\n  return <>{getCreatureTypeDisplayString(props.creatureType)}</>;\n}\n\nexport function getCreatureTypeDisplayString(creatureType) {\n  let cType = creatureType;\n\n  if (!cType) {\n    return \"-\";\n  } else {\n    let crOut = \"\";\n\n    let matches = SWARM_REGEX.exec(cType.tags.toString());\n    if (matches !== null && matches.length > 0) {\n      let size = \"\";\n      switch (matches[1]) {\n        case \"T\":\n          size = \"tiny\";\n          break;\n        case \"M\":\n          size = \"medium\";\n          break;\n        default:\n          size = \"[unknown size]\";\n          break;\n      }\n      crOut = `swarm of ${size} ${cType.type}s`;\n    } else {\n      crOut = cType.type;\n\n      if (cType.tags.length !== 0) {\n        crOut += ` (${cType.tags.join(\", \")})`;\n      }\n    }\n\n    return crOut;\n  }\n}\n\nexport function sortCreatureTypeAsc(a, b) {\n  let outVal = sortStrAsc(a.type, b.type);\n\n  if (outVal !== 0) {\n    return outVal;\n  }\n\n  outVal = a.tags.length - b.tags.length;\n\n  if (outVal !== 0) {\n    return outVal;\n  }\n\n  for (let i = 0; i < a.tags.length; ++i) {\n    outVal = sortStrAsc(a.tags[i], b.tags[i]);\n\n    if (outVal !== 0) {\n      return outVal;\n    }\n  }\n\n  return 0;\n}\n","import React, { useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { getCreatureTypeDisplayString } from \"../utility/creatureTypeUtil\";\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\n\nfunction BlockRow_Text(key, label, value, setter) {\n  return (\n    <Row key={key}>\n      <Col className=\"col-3\">{label}:</Col>\n      <Col>\n        <input\n          type=\"text\"\n          value={value}\n          style={{\n            width: \"inherit\",\n          }}\n          onChange={(e) => {\n            e.preventDefault();\n            setter(e.target.value);\n          }}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nfunction BlockRow_Select(key, label, value, setter, selectOpts, optLabels) {\n  return (\n    <Row key={key}>\n      <Col className=\"col-3\">{label}:</Col>\n      <Col>\n        <select\n          value={value}\n          style={{\n            width: \"inherit\",\n          }}\n          onChange={(e) => {\n            e.preventDefault();\n            setter(e.target.value);\n          }}\n        >\n          <option value={null}>Ignore</option>\n          {selectOpts.map((opt, idx) => {\n            return (\n              <option key={idx} value={opt}>\n                {optLabels[opt]}\n              </option>\n            );\n          })}\n        </select>\n      </Col>\n    </Row>\n  );\n}\n\nexport function MonsterFilterBlock(props) {\n  let [nameField, setNameField] = useState(\"\");\n  let [typeField, setTypeField] = useState(\"\");\n  let [cardSizeField, setCardSizeField] = useState();\n\n  let filterRows = [];\n\n  filterRows.push(\n    BlockRow_Text(filterRows.length, \"Name\", nameField, setNameField)\n  );\n  filterRows.push(\n    BlockRow_Text(filterRows.length, \"Creature Type\", typeField, setTypeField)\n  );\n  filterRows.push(\n    BlockRow_Select(\n      filterRows.length,\n      \"Card Size\",\n      cardSizeField,\n      setCardSizeField,\n      [0, 1, 2, 3],\n      CARD_SIZES\n    )\n  );\n\n  // TODO: add option to filter by having (or not) harvesting/trinket tables\n\n  const submitFunc = (e) => {\n    let obj = {};\n    if (nameField !== \"\") {\n      obj.Name = (obj) => {\n        return obj.name.toLowerCase().match(nameField.toLowerCase());\n      };\n    }\n    if (typeField !== \"\") {\n      obj.Type = (obj) => {\n        let crString = getCreatureTypeDisplayString(obj.type);\n        return crString.toLowerCase().match(typeField.toLowerCase());\n      };\n    }\n    if (cardSizeField >= 0) {\n      obj.CardSize = (obj) => {\n        return obj.ReferenceCardSize === Number(cardSizeField);\n      };\n    }\n\n    props.submitFilter(obj);\n    e.preventDefault();\n  };\n\n  return (\n    <form id=\"filter\" className=\"border\" onSubmit={submitFunc}>\n      {filterRows}\n      <button type=\"submit\">Apply Filter</button>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { matchPath } from \"react-router\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { DisplayList, DisplayColumn } from \"./DisplayList\";\nimport { CRList } from \"../components/ChallengeRatingDisplay\";\nimport Storage from \"../utility/StorageUtil\";\n// import { getIdFromMonster } from \"../utility/monsterUtil\";\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\nimport { sortAscending as sortCRAsc } from \"../utility/challengeRatingUtil\";\n// import { MonsterDisplay } from \"../components/MonsterDisplay\";\n\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\nimport {\n  CreatureTypeList,\n  sortCreatureTypeAsc,\n} from \"../utility/creatureTypeUtil\";\nimport { MonsterFilterBlock } from \"../components/MonsterFilterBlock\";\nimport \"./Columnable.css\";\nimport \"../LayoutControl/Layout.css\";\n\nexport function Monsters(props) {\n  let [filterObj, setFilterObj] = useState({});\n\n  const pathWithId = \"/monsters/:id\";\n  //let monster = null;\n\n  // extract monster id from the path\n  let match = matchPath(props.location.pathname, { path: pathWithId });\n  let selectedId = \"\";\n  if (match !== null) {\n    // if there is an id, search for the monster\n    selectedId = match.params.id;\n    if (Storage.monsterDict[selectedId] !== undefined) {\n      // monster = Storage.monsterDict[selectedId];\n    }\n  }\n\n  const headers = [\n    new DisplayColumn(\n      \"Name\",\n      (item) => {\n        return <>{item[\"name\"]}</>;\n      },\n      (a, b) => {\n        return sortStrAsc(a.name, b.name);\n      }\n    ),\n    new DisplayColumn(\n      \"Type\",\n      (item) => {\n        return <CreatureTypeList creatureType={item[\"type\"]} />;\n      },\n      (a, b) => {\n        return sortCreatureTypeAsc(a.creatureType, b.creatureType);\n      }\n    ),\n    new DisplayColumn(\n      \"CR\",\n      (item) => {\n        return <CRList cr={item[\"challengeRating\"]} />;\n      },\n      (a, b) => {\n        return sortCRAsc(a.challengeRating, b.challengeRating);\n      }\n    ),\n    new DisplayColumn(\n      \"Card Size\",\n      (item) => {\n        var subMon = Storage.subStateMonsterDict[item.id];\n        return <>{subMon ? CARD_SIZES[subMon.cardSize] : \"-\"}</>;\n      },\n      (a, b) => {\n        var subMonA = Storage.subStateMonsterDict[a.id];\n        var subMonB = Storage.subStateMonsterDict[b.id];\n\n        if (subMonA && subMonB) {\n          return subMonA.cardSize - subMonB.cardSize;\n        } else if (subMonA && !subMonB) {\n          return -1;\n        } else if (!subMonA && subMonB) {\n          return 1;\n        } else {\n          // TODO: Fix this\n          return -1;\n        }\n      }\n    ),\n    new DisplayColumn(\n      \"Source\",\n      (item) => {\n        return <>{item[\"source\"]}</>;\n      },\n      (a, b) => {\n        return sortStrAsc(a.source, b.source);\n      }\n    ),\n  ];\n\n  let list = Object.values(Storage.monsterDict);\n\n  return (\n    <>\n      <Row className=\"h-100\" xs={1} md={2}>\n        <Col className=\"border h-100\">\n          <MonsterFilterBlock submitFilter={setFilterObj} />\n          <DisplayList\n            headers={headers}\n            items={list}\n            filterObject={filterObj}\n            pathRoot={props.match.path}\n            idFunction={(mon) => mon.id}\n            selectedId={selectedId}\n          />\n        </Col>\n        <Col className=\"border scrollableColumn\">\n          {/* <MonsterDisplay monster={monster} selectedId={selectedId} /> */}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport function CRList(props) {\n  return <>{getChallengeRatingDisplayString(props.cr)}</>;\n}\n\nexport function getChallengeRatingDisplayString(challengeRating) {\n  let cr = challengeRating;\n\n  if (!cr) {\n    return \"-\";\n  } else {\n    let crOut = cr.cr;\n\n    if (typeof crOut === \"number\" && crOut < 1 && crOut !== 0) {\n      crOut = `1/${1 / crOut}`;\n    }\n\n    if (cr.coven !== null) {\n      crOut += ` (${cr.coven} in coven)`;\n    }\n\n    if (cr.lair !== null) {\n      crOut += ` (${cr.lair} in lair)`;\n    }\n\n    return crOut;\n  }\n}\n\nexport function sortAscending(a, b) {\n  if (a === null) return -1;\n  if (b === null) return 1;\n\n  let out = a.cr - b.cr;\n\n  if (out !== 0) {\n    return out;\n  }\n\n  out = a.InLair - b.InLair;\n\n  if (out !== 0) {\n    return out;\n  }\n\n  out = a.InCoven - b.InCoven;\n\n  return out;\n}\n","import React, { useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport function ArrayInput(props) {\n  let [redraw, setRedraw] = useState(true);\n  let propObj = props.object;\n  let propKey = props.objKey;\n  let defaultInsert = props.defaultInsert;\n  if (defaultInsert === undefined) defaultInsert = \"\";\n\n  const addLine = (e) => {\n    propObj[propKey].push(defaultInsert);\n    setRedraw(!redraw);\n  };\n  const insertLine = (e, tarIndex) => {\n    propObj[propKey].splice(tarIndex, 0, defaultInsert);\n    setRedraw(!redraw);\n  };\n\n  const removeLine = (e, idx) => {\n    propObj[propKey].splice(idx, 1);\n    setRedraw(!redraw);\n  };\n\n  let arrayLines = [];\n  for (let i = 0; i < propObj[propKey].length; ++i) {\n    arrayLines.push(\n      <Row key={i}>\n        <Col className=\"col-2 border\">\n          <button\n            onClick={(e) => {\n              insertLine(e, i);\n            }}\n            // disabled={i === 0}\n          >\n            ^\n          </button>\n          <button\n            onClick={(e) => {\n              removeLine(e, i);\n            }}\n          >\n            -\n          </button>\n          <button\n            onClick={(e) => {\n              insertLine(e, i + 1);\n            }}\n            // disabled={i === propObj[propKey].length - 1}\n          >\n            v\n          </button>\n        </Col>\n        <Col>\n          <props.subType\n            object={propObj}\n            objKey={propKey}\n            index={i}\n            hideLabel={true}\n          />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <>\n      <Row>\n        <Col className=\"col-3\">\n          {propKey}: <button onClick={addLine}>+</button>\n        </Col>\n      </Row>\n\n      {arrayLines}\n    </>\n  );\n}\n\nexport function SelectInput(props) {\n  let [redraw, setRedraw] = useState(true);\n  let propObj = props.object;\n  let propKey = props.objKey;\n\n  const onChangeFunc = (e) => {\n    propObj[propKey] = e.target.value;\n    setRedraw(!redraw);\n  };\n\n  let options = props.options.map((opt, idx) => {\n    return (\n      <option value={opt} key={idx}>\n        {opt}\n      </option>\n    );\n  });\n\n  return (\n    <>\n      <Row>\n        <Col className=\"col-3\">{propKey}: </Col>{\" \"}\n        <Col>\n          <select\n            style={{ width: \"inherit\" }}\n            value={propObj[propKey]}\n            onChange={onChangeFunc}\n          >\n            {options}\n          </select>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport function RadioButtonInput(props) {\n  let [redraw, setRedraw] = useState(true);\n  let propObj = props.object;\n  let propKey = props.objKey;\n\n  const onChangeFunc = (e) => {\n    if (e.target.checked) {\n      propObj[propKey] = e.target.value;\n      setRedraw(!redraw);\n    }\n  };\n\n  let options = props.options.map((opt, idx) => {\n    return (\n      <div>\n        <input\n          type=\"radio\"\n          value={opt}\n          key={idx}\n          name={propKey}\n          id={opt}\n          checked={propObj[propKey] === opt}\n          onChange={onChangeFunc}\n        />{\" \"}\n        <label for={opt}>{opt}</label>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <Row className=\"border\">\n        <Col className=\"col-3\">{propKey}: </Col> <Col>{options}</Col>\n      </Row>\n    </>\n  );\n}\n\nexport function StringInput(props) {\n  let [redraw, setRedraw] = useState(true);\n  let propObj = props.object;\n  let propKey = props.objKey;\n  let propIdx = props.index;\n\n  let {\n    disabled,\n    hideLabel, //, ...otherProps\n  } = props;\n\n  const onChangeFunc = (e) => {\n    if (propIdx !== undefined) {\n      propObj[propKey][propIdx] = e.target.value;\n    } else {\n      propObj[propKey] = e.target.value;\n    }\n    setRedraw(!redraw);\n  };\n\n  let value = propObj[propKey];\n  if (propIdx !== undefined) {\n    value = propObj[propKey][propIdx];\n  }\n\n  return (\n    <>\n      <Row>\n        {!hideLabel && <Col className=\"col-3\">{propKey}: </Col>}\n        <Col>\n          <input\n            type=\"text\"\n            style={{ width: \"inherit\" }}\n            value={value}\n            onChange={onChangeFunc}\n            disabled={disabled}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport function CheckboxInput(props) {\n  let [redraw, setRedraw] = useState(true);\n  let propObj = props.object;\n  let propKey = props.objKey;\n\n  const onChangeFunc = (e) => {\n    propObj[propKey] = e.target.checked;\n    setRedraw(!redraw);\n  };\n\n  return (\n    <>\n      <Row>\n        <Col className=\"col-3\">{propKey}: </Col>{\" \"}\n        <Col>\n          <input\n            type=\"checkbox\"\n            style={{ width: \"inherit\" }}\n            onChange={onChangeFunc}\n            checked={propObj[propKey] ? \"checked\" : \"\"}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport function ModularDescription(props) {\n  let desc = props.description;\n\n  if (typeof desc === \"string\") {\n    return <SimpleDescription description={desc} />;\n  } else {\n    if (!desc.type) return <>ERROR on: {JSON.stringify(desc)}</>;\n    switch (desc.type) {\n      case \"list\":\n        let style = desc.style;\n        return (\n          <ListDescription items={desc.lines || desc.items} style={style} />\n        );\n      case \"item\":\n        return <ItemDescription description={desc} />;\n      default:\n        return <UnhandledDescription description={desc} />;\n    }\n  }\n}\n\nfunction SimpleDescription(props) {\n  return <p>{props.description}</p>;\n}\n\nfunction ItemDescription(props) {\n  return (\n    <p>\n      <b>{props.description.name}</b> {props.description.entry}\n    </p>\n  );\n}\n\nfunction UnhandledDescription(props) {\n  return <p>{JSON.stringify(props.description)}</p>;\n}\n\nfunction ListDescription(props) {\n  let output = [];\n\n  for (let i = 0; i < props.items.length; ++i) {\n    output.push(\n      <li key={i}>\n        <ModularDescription description={props.items[i]} />\n      </li>\n    );\n  }\n\n  let styleObj = {};\n  if (props.style) {\n    styleObj.listStyle = props.style;\n  }\n\n  return <ul style={styleObj}>{output}</ul>;\n}\n","import React from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport {\n  StringInput,\n  CheckboxInput,\n  SelectInput,\n  ArrayInput,\n  RadioButtonInput,\n} from \"./inputUtil\";\nimport Storage from \"./StorageUtil\";\nimport { ModularDescription } from \"./descriptionUtil\";\n\nexport function getIdFromItemName(name) {\n  return name.toLowerCase().replace(/\\s+/g, \"_\");\n}\n\nexport function getIdFromItem(item) {\n  if (item.id !== undefined) return item.id;\n  else return getIdFromItemName(item.name);\n}\n\nexport function CraftableItemDisplay(props) {\n  let craftableItem = props.craftableItem;\n\n  let materialOutput = craftableItem.materials.map((mat, idx) => {\n    let matItem = Storage.harvestableItemDict[mat.componentId];\n\n    return (\n      <span key={idx}>\n        {matItem ? matItem.name : mat.componentId} ({mat.quantity})\n      </span>\n    );\n  });\n  let finalMaterialOutput = [];\n  for (let i = 0; i < materialOutput.length; ++i) {\n    if (finalMaterialOutput.length !== 0) {\n      finalMaterialOutput.push(\" \" + craftableItem.materialGrouping + \" \");\n    }\n    finalMaterialOutput.push(materialOutput[i]);\n  }\n\n  return (\n    <>\n      <Row>\n        <Col className=\"font-weight-bold\">{craftableItem.name}</Col>\n      </Row>\n      <Row>\n        <Col>\n          <i>\n            {craftableItem.type},{\" \"}\n            {(craftableItem.rarity !== null\n              ? craftableItem.rarity\n              : \"\"\n            ).toLowerCase()}{\" \"}\n            {craftableItem.requiresAttunement && \"(requires attunement)\"}\n          </i>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <i>\n            Crafted by: {finalMaterialOutput} ({craftableItem.crafter})\n          </i>\n        </Col>\n      </Row>\n      &nbsp;\n      <Row>\n        <Col className=\"col-3 font-weight-bold\">Description:</Col>\n      </Row>\n      <Row>\n        <Col>\n          {craftableItem.description.length > 0 &&\n            craftableItem.description.map((para, idx) => {\n              return <ModularDescription key={idx} description={para} />;\n            })}\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport class EditingCraftableItemDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.generateStateObject(this.props.craftableItem);\n    this.applyStateToItem = this.applyStateToItem.bind(this);\n  }\n\n  generateStateObject(craftableItem) {\n    let obj = {};\n    return obj;\n  }\n\n  handleInput(event, key) {\n    event.preventDefault();\n\n    console.log(`${key}: ${event.target.value}`);\n\n    let partialObject = {};\n    partialObject[key] = event.target.value;\n    this.setState(partialObject);\n  }\n\n  applyStateToItem(event) {\n    event.preventDefault();\n\n    for (let i = 0; i < this.stringKeys.length; ++i) {\n      let targetValue = this.state[this.stringKeys[i].key];\n\n      this.props.craftableItem[this.stringKeys[i].key] = this.stringKeys[\n        i\n      ].store(targetValue);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.craftableItem.Id !== prevProps.craftableItem.Id) {\n      this.setState(this.generateStateObject(this.props.craftableItem));\n    }\n  }\n\n  componentWillUnmount() {\n    let partialObject = {};\n    this.setState(partialObject);\n  }\n\n  render() {\n    let craftableItem = this.props.craftableItem;\n\n    return (\n      <Container fluid>\n        {/* <div>propObj :: {JSON.stringify(craftableItem)}</div> */}\n        <StringInput object={craftableItem} objKey=\"Id\" disabled />\n        <StringInput object={craftableItem} objKey=\"Name\" />\n        <StringInput object={craftableItem} objKey=\"Type\" />\n        <Row>\n          <Col>\n            <CheckboxInput object={craftableItem} objKey=\"RequiresAttunement\" />\n          </Col>\n          <Col>\n            <StringInput\n              object={craftableItem}\n              objKey=\"AttunementNote\"\n              hideLabel={true}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <RadioButtonInput // SelectInput\n              object={craftableItem}\n              objKey=\"Crafter\"\n              options={[\n                \"Alchemist\",\n                \"Artificer\",\n                \"Blacksmith\",\n                \"Leatherworker\",\n                \"Tinker\",\n                \"Thaumaturge\",\n              ]}\n            />\n          </Col>\n          <Col>\n            <RadioButtonInput //SelectInput\n              object={craftableItem}\n              objKey=\"Rarity\"\n              options={[\n                \"Mundane\",\n                \"Common\",\n                \"Uncommon\",\n                \"Rare\",\n                \"Very Rare\",\n                \"Legendary\",\n                \"Mixed\",\n              ]}\n            />\n          </Col>\n        </Row>\n        <ArrayInput\n          object={craftableItem}\n          objKey=\"Description\"\n          subType={StringInput}\n        />\n        <SelectInput\n          object={craftableItem}\n          objKey=\"MaterialGrouping\"\n          options={[\"OR\", \"AND\"]}\n        />\n        <ArrayInput\n          object={craftableItem}\n          objKey=\"Materials\"\n          subType={MaterialInput}\n          defaultInsert={{ ComponentId: \"\", Quantity: \"\" }}\n        />\n      </Container>\n    );\n  }\n}\n\nfunction MaterialInput(props) {\n  //   let [redraw, setRedraw] = useState(true);\n  let propObj = props.object;\n  let propKey = props.objKey;\n  let propIdx = props.index;\n\n  // const onChangeFunc = (e) => {\n  //     if (propIdx !== undefined) {\n  //         propObj[propKey][propIdx] = e.target.value;\n  //     } else {\n  //         propObj[propKey] = e.target.value;\n  //     }\n  //     setRedraw(!redraw);\n  // };\n\n  return (\n    <>\n      <StringInput object={propObj[propKey][propIdx]} objKey=\"ComponentId\" />\n      <StringInput object={propObj[propKey][propIdx]} objKey=\"Quantity\" />\n    </>\n  );\n}\n","import React from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { DisplayList, DisplayColumn } from \"./DisplayList\";\r\nimport Storage from \"../utility/StorageUtil\";\r\nimport {\r\n  getIdFromItem,\r\n  CraftableItemDisplay,\r\n  EditingCraftableItemDisplay,\r\n} from \"../utility/craftableItemUtil\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\n\r\nimport \"./Columnable.css\";\r\nimport \"../LayoutControl/Layout.css\";\r\n\r\nexport function CraftableItems(props) {\r\n  // let [filterObj, setFilterObj] = useState({});\r\n\r\n  const pathWithId = \"/craftableitems/:id\";\r\n  let craftableItem = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (Storage.craftableItemDict[selectedId] !== undefined) {\r\n      craftableItem = Storage.craftableItemDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    new DisplayColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let displayOutput = [\"Select an item from the list\"];\r\n\r\n  if (craftableItem !== null) {\r\n    if (false && process.env.NODE_ENV === \"development\") {\r\n      displayOutput = [\r\n        <EditingCraftableItemDisplay craftableItem={craftableItem} key={0} />,\r\n      ];\r\n    } else {\r\n      displayOutput = [\r\n        <CraftableItemDisplay craftableItem={craftableItem} key={0} />,\r\n      ];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          {/* <MonsterFilterBlock submitFilter={setFilterObj} /> */}\r\n          <DisplayList\r\n            headers={headers}\r\n            items={Object.values(Storage.craftableItemDict)}\r\n            filterObject={{}}\r\n            pathRoot={props.match.path}\r\n            idFunction={getIdFromItem}\r\n            selectedId={selectedId}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">{displayOutput}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { HarvestedItems } from \"./pages/HarvestedItems\";\nimport { Home } from \"./pages/Home\";\nimport { Monsters } from \"./pages/Monsters\";\nimport { CraftableItems } from \"./pages/CraftableItems\";\n\nexport const MENU = [\n    {\n        className: \"text-dark\",\n        linkName: \"Home\",\n        linkTarget: \"/\",\n        routePaths: [\"/\"],\n        exact: true,\n        renderFunction: (props) => {\n            return <Home {...props} />;\n        },\n    },\n    {\n        className: \"text-dark\",\n        linkName: \"Monsters\",\n        linkTarget: \"/monsters\",\n        routePaths: [\"/monsters\"],\n        exact: false,\n        renderFunction: (props) => {\n            return <Monsters {...props} />;\n        },\n    },\n    {\n        className: \"text-dark\",\n        linkName: \"Harvested Items\",\n        linkTarget: \"/harvesteditems\",\n        routePaths: [\"/harvesteditems\"],\n        exact: false,\n        renderFunction: (props) => {\n            return <HarvestedItems {...props} />;\n        },\n    },\n    {\n        className: \"text-dark\",\n        linkName: \"Trinket Tables\",\n        linkTarget: \"/trinkettables\",\n        routePaths: [\"/trinkettables\"],\n        exact: false,\n        renderFunction: (props) => {\n            return <span>Trinket Tables</span>;\n        },\n    },\n    {\n        className: \"text-dark\",\n        linkName: \"Craftable Items\",\n        linkTarget: \"/craftableitems\",\n        routePaths: [\"/craftableitems\"],\n        exact: false,\n        renderFunction: (props) => {\n            return <CraftableItems {...props} />;\n        },\n    },\n];\n","import React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\nimport { NavbarBrand, NavItem, NavLink } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { MENU } from \"../navigationConstants\";\n\nexport function NavMenu(props) {\n    let navOutput = [];\n    for (let i = 0; i < MENU.length; ++i) {\n        let linkDeets = MENU[i];\n        navOutput.push(\n            <NavItem key={i}>\n                <NavLink\n                    tag={Link}\n                    className={linkDeets.className}\n                    to={linkDeets.linkTarget}\n                >\n                    {linkDeets.linkName}\n                </NavLink>\n            </NavItem>\n        );\n    }\n\n    return (\n        <header>\n            <Navbar className=\"border-bottom p-0\">\n                <Container>\n                    <NavbarBrand tag={Link} to=\"/\">\n                        Reactive RPG\n                    </NavbarBrand>\n                    <Container\n                        className=\"d-sm-inline-flex flex-sm-row-reverse\"\n                        navbar=\"true\"\n                    >\n                        <ul className=\"navbar-nav flex-grow\">{navOutput}</ul>\n                    </Container>\n                </Container>\n            </Navbar>\n        </header>\n    );\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { NavMenu } from \"./NavMenu\";\nimport \"./Layout.css\";\n\nexport function Layout(props) {\n    return (\n        <div className=\"viewportWrapper\">\n            <NavMenu />\n            <Container fluid className=\"mainContentWrapper\">\n                {props.children}\n            </Container>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Layout } from \"./LayoutControl/Layout\";\nimport \"./App.css\";\n\nimport { MENU } from \"./navigationConstants\";\nfunction App() {\n    let routeOpts = [];\n    for (let i = 0; i < MENU.length; ++i) {\n        let linkDeets = MENU[i];\n        routeOpts.push(\n            <Route\n                key={i}\n                path={linkDeets.routePaths[0]}\n                render={(props) => linkDeets.renderFunction(props)}\n                exact={linkDeets.exact}\n            />\n        );\n    }\n\n    return (\n        <Layout>\n            <Switch>{routeOpts}</Switch>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Storage from \"./utility/StorageUtil\";\n\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\nconst rootElement = document.getElementById(\"root\");\n\nStorage.Init().then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Router basename={baseUrl}>\n        <App />\n      </Router>\n    </React.StrictMode>,\n    rootElement\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}