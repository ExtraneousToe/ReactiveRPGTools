{"version":3,"sources":["utility/stringUtil.js","redux/selectors.js","pages/Home.js","utility/saveFile.js","data/referenceCardSizes.js","data/BaseDataItem.js","data/Monster.js","redux/actionTypes.js","themeContext.js","components/ModularDisplayList.js","components/MonsterDisplayList.js","redux/actions.js","utility/statsUtil.js","components/TrinketTableDisplay.js","components/HarvestingTableDisplay.js","components/RenderBlocks.js","components/MonsterDisplay.js","utility/monsterUtil.js","pages/Monsters.js","components/HarvestedItemDisplay.js","pages/HarvestedItems.js","utility/descriptionUtil.js","components/CraftableItemDisplay.js","pages/CraftableItems.js","navigationConstants.js","LayoutControl/NavMenu.js","LayoutControl/Layout.js","App.js","serviceWorker.js","data/HarvestingTable.js","data/TrinketTable.js","data/CraftableItem.js","data/HarvestedItem.js","data/SubStateMonster.js","redux/reducers/monstersReducer.js","redux/reducers/tablesReducer.js","redux/reducers/itemReducers.js","redux/reducers/index.js","redux/store.js","utility/StorageUtil.js","index.js"],"names":["sortAscending","a","b","x","toLowerCase","y","Array","prototype","last","arg","undefined","this","length","String","leadingCharacter","splitByTags","string","char","char2","tagDepth","out","curStr","isLastOpen","len","i","push","replace","splitTagByPipe","_splitByPipeBase","_stripTagLayer","str","includes","filter","it","map","startsWith","firstIndex","indexOf","substr","splitFirstSpace","slice","tag","text","tagStr","tagGroups","split","trim","seen","Set","has","add","tags","join","attackTagToFull","rollText","displayText","n","Number","isNaN","Error","asNum","compactText","flags","parts","newText","oldText","stripTags","nxtStr","err","console","error","getMonsterDict","store","monsters","monsterDict","getSubMonsterDict","subMonsterDict","getSelectedMonsterId","selectedMonsterId","getHarvestingTableDict","tables","harvestingTableDict","getTrinketTableDict","trinketTableDict","getHarvestedItemDict","items","harvestedItemDict","getCraftableItemDict","craftableItemDict","connect","subStateMonsterDict","props","onClick","e","preventDefault","Object","values","sort","id","harvestedItems","harvestingTables","name","trinketTables","trinketTableType","craftableItems","filename","fileContent","link","document","createElement","download","href","encodeURIComponent","body","appendChild","click","removeChild","fileSaveAs","JSON","stringify","CARD_SIZES","BaseDataItem","source","filterString","convertToId","outString","Monster","referenceCardSize","otherSources","creatureSize","creatureType","stats","armorClass","challengeRating","health","passivePerc","languages","speed","saves","skills","senses","alignment","resistances","immunities","conditionImmunities","traits","spellcasting","actions","reactions","environments","legendaryHeader","legendaryActions","harvestingTable","cardSize","size","type","fiveEState","feType","CreatureType","inObj","swarmSize","tg","prefix","log","feCR","cr","ChallengeRating","feACLines","ac","line","acObj","parseInt","from","condition","ArmorClass","feAlignment","every","ent","Alignment","ali","StatsBlock","HealthBlock","hp","passive","SpeedBlock","walk","fly","swim","climb","burrow","canHover","save","skill","resist","immune","conditionImmune","trait","action","reaction","environment","legendary","displayString","chance","k","strOut","stringFromSize","tagOut","outVal","sortStrAsc","lair","coven","matches","exec","crOut","average","formula","SPEED_KEYS","SpeedEntry","val","simpleDisplay","spd","ft","number","dex","con","int","wis","cha","TYPES","freeze","ADD_MONSTER","ADD_MONSTERS","ADD_SUB_MONSTER","ADD_SUB_MONSTERS","SELECT_MONSTER","ADD_HARVESTING_TABLE","ADD_HARVESTING_TABLES","ADD_TRINKET_TABLE","ADD_TRINKET_TABLES","ADD_HARVESTED_ITEM","ADD_HARVESTED_ITEMS","SELECT_HARVESTED_ITEM","ADD_CRAFTABLE_ITEM","ADD_CRAFTABLE_ITEMS","SELECT_CRAFTABLE_ITEM","themes","dark","styleName","navbarLightDark","light","navbarColour","navbarTextClass","AppTheme","React","createContext","theme","cycleTheme","currentState","MDColumn","colDisplay","listDisplayFunc","ascendingSortFunction","sortFunc","bind","sortDescending","isAscending","DefaultModularRow","index","data","style","headers","pathRoot","selectedId","history","item","innerCols","desiredId","isSelected","headerLen","h","headerObj","key","pathRoute","activeName","className","ModularDisplayList","ListItemSlot","CustomFilterSlot","height","itemSize","appTheme","useContext","useHistory","useState","simpleFilter","setSimpleFilter","sortByIdx","setSortByIdx","setSortAscending","doSimpleFilter","placeholder","value","width","onInput","target","idx","itemCount","itemData","overflowX","subMon","subMonA","subMonB","title","Sources","headerRowContents","Col","ListRow","DisplayListRow","disp","selectMonster","monId","monsterId","payload","stateProps","dispatchProps","ownProps","pure","areMergedPropsEqual","next","prev","itemChanged","selectedChanged","Row","PureComponent","StatBlock","statBlock","Container","getModifierDisplayString","stat","mod","Math","floor","getModifier","TrinketTableDisplay","trinketTable","rowsOut","rows","row","d8Roll","descriptionLine","weight","fluid","itemNameReference","nameOut","descriptionOut","valueOut","weightOut","craftingOut","lines","j","description","requiredToolNames","useText","craftingUsage","NavLink","Link","to","quantity","notes","difficultyClass","apprasialTarget","DynamicRender","toRender","entries","ListRender","list","ItemRender","entry","SpellcastingBlock","headerEntries","spells","will","daily","footerEntries","output","head","dailyKeys","keys","num","each","lead","spellKeys","spellsBlock","slots","numCount","spellLevel","foot","ACHPSpeed","monster","topBlock","acOut","hpOut","speedOut","SkillsAndSavesBlock","keyValueFunction","mon","inKey","simpleJoinFunction","resistImmuneFunction","note","SSE_PAIRS","header","skillsSavesEtcOut","forEach","pair","state","tabKey","setTabKey","tablesTabKey","setTablesTabKey","typeOut","subMonster","traitsAndSpellcastingOut","actionsOut","reactionsOut","harvestingTableGroup","hasHarvestingTable","hasTrinketTable","hasTables","otherSourcesOut","oSrc","sm","convertedString","Tabs","activeKey","onSelect","Tab","eventKey","disabled","HarvestingTableDisplay","match","matchPath","location","pathname","path","params","xs","md","MonsterDisplayList","hItem","harvestedItem","cu","para","harvestedOutput","HarvestedItemDisplay","ModularDescription","desc","SimpleDescription","ListDescription","ItemDescription","UnhandledDescription","styleObj","listStyle","craftableItem","materialOutput","materials","mat","matItem","componentId","finalMaterialOutput","materialGrouping","rarity","requiresAttunement","crafter","displayOutput","CraftableItemDisplay","MENU","linkName","linkTarget","routePaths","exact","renderFunction","Home","Monsters","HarvestedItems","CraftableItems","NavMenu","navOutput","linkDeets","NavItem","nav","Navbar","expand","color","NavbarBrand","Nav","navbar","Layout","context","toggleTheme","children","App","themeState","setThemeState","newTheme","routeOpts","render","Provider","Boolean","window","hostname","HarvestingTable","r","HarvestingTableRow","TrinketTable","TrinketTableRow","CraftableItem","attunementNote","HarvestedItem","SubStateMonster","initialState","selectedHarvestedItemId","selectedCraftableItemId","combineReducers","noChange","hTable","tTable","cItem","createStore","rootReducer","$","ajaxJson","fileName","Promise","resolve","reject","getJSON","Load5eMonsterFile","localKey","Storage","processedKeys","processingKeys","_meta","meta","dependencies","jdx","depKey","_copy","from5eSource","process","_init","delayedMonsters","Init","Data","dispatch","Index","subMonsters","storage","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","StrictMode","basename","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.84c19d77.chunk.js","sourcesContent":["// eslint-disable-next-line\r\nArray.prototype.last =\r\n  Array.prototype.last ||\r\n  function (arg) {\r\n    if (arg !== undefined) this[this.length - 1] = arg;\r\n    else return this[this.length - 1];\r\n  };\r\n// eslint-disable-next-line\r\nString.prototype.last =\r\n  String.prototype.last ||\r\n  function () {\r\n    return this[this.length - 1];\r\n  };\r\n\r\nexport function sortAscending(a, b) {\r\n  let x = a.toLowerCase();\r\n  let y = b.toLowerCase();\r\n\r\n  if (y < x) {\r\n    return 1;\r\n  }\r\n  if (x < y) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nconst splitFirstSpace = function (string) {\r\n  const firstIndex = string.indexOf(\" \");\r\n  return firstIndex === -1\r\n    ? [string, \"\"]\r\n    : [string.substr(0, firstIndex), string.substr(firstIndex + 1)];\r\n};\r\n\r\nfunction _splitByTagsBase(leadingCharacter) {\r\n  return function (string) {\r\n    let tagDepth = 0;\r\n    let char, char2;\r\n    const out = [];\r\n    let curStr = \"\";\r\n    let isLastOpen = false;\r\n\r\n    const len = string.length;\r\n    for (let i = 0; i < len; ++i) {\r\n      char = string[i];\r\n      char2 = string[i + 1];\r\n\r\n      switch (char) {\r\n        case \"{\":\r\n          isLastOpen = true;\r\n          if (char2 === leadingCharacter) {\r\n            if (tagDepth++ > 0) {\r\n              curStr += \"{\";\r\n            } else {\r\n              out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n              curStr = `{${leadingCharacter}`;\r\n              ++i;\r\n            }\r\n          } else curStr += \"{\";\r\n          break;\r\n\r\n        case \"}\":\r\n          isLastOpen = false;\r\n          curStr += \"}\";\r\n          if (tagDepth !== 0 && --tagDepth === 0) {\r\n            out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n            curStr = \"\";\r\n          }\r\n          break;\r\n\r\n        case leadingCharacter: {\r\n          if (!isLastOpen) curStr += \"<VE_LEAD>\";\r\n          else curStr += leadingCharacter;\r\n          break;\r\n        }\r\n\r\n        default:\r\n          isLastOpen = false;\r\n          curStr += char;\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (curStr) out.push(curStr.replace(/<VE_LEAD>/g, leadingCharacter));\r\n\r\n    return out;\r\n  };\r\n}\r\n\r\nconst splitByTags = _splitByTagsBase(\"@\");\r\n\r\nconst attackTagToFull = function (tagStr) {\r\n  function renderTag(tags) {\r\n    return `${\r\n      tags.includes(\"m\")\r\n        ? \"Melee \"\r\n        : tags.includes(\"r\")\r\n        ? \"Ranged \"\r\n        : tags.includes(\"g\")\r\n        ? \"Magical \"\r\n        : tags.includes(\"a\")\r\n        ? \"Area \"\r\n        : \"\"\r\n    }${tags.includes(\"w\") ? \"Weapon \" : tags.includes(\"s\") ? \"Spell \" : \"\"}`;\r\n  }\r\n\r\n  const tagGroups = tagStr\r\n    .toLowerCase()\r\n    .split(\",\")\r\n    .map((it) => it.trim())\r\n    .filter((it) => it)\r\n    .map((it) => it.split(\"\"));\r\n  if (tagGroups.length > 1) {\r\n    const seen = new Set(tagGroups.last());\r\n    for (let i = tagGroups.length - 2; i >= 0; --i) {\r\n      tagGroups[i] = tagGroups[i].filter((it) => {\r\n        const out = !seen.has(it);\r\n        seen.add(it);\r\n        return out;\r\n      });\r\n    }\r\n  }\r\n  return `${tagGroups.map((it) => renderTag(it)).join(\" or \")}Attack:`;\r\n};\r\n\r\nconst _splitByPipeBase = function (leadingCharacter) {\r\n  return function (string) {\r\n    let tagDepth = 0;\r\n    let char, char2;\r\n    const out = [];\r\n    let curStr = \"\";\r\n\r\n    const len = string.length;\r\n    for (let i = 0; i < len; ++i) {\r\n      char = string[i];\r\n      char2 = string[i + 1];\r\n\r\n      switch (char) {\r\n        case \"{\":\r\n          if (char2 === leadingCharacter) tagDepth++;\r\n          curStr += \"{\";\r\n\r\n          break;\r\n\r\n        case \"}\":\r\n          if (tagDepth) tagDepth--;\r\n          curStr += \"}\";\r\n\r\n          break;\r\n\r\n        case \"|\": {\r\n          if (tagDepth) curStr += \"|\";\r\n          else {\r\n            out.push(curStr);\r\n            curStr = \"\";\r\n          }\r\n          break;\r\n        }\r\n\r\n        default: {\r\n          curStr += char;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (curStr) out.push(curStr);\r\n    return out;\r\n  };\r\n};\r\n\r\nconst splitTagByPipe = _splitByPipeBase(\"@\");\r\n\r\nconst _stripTagLayer = function (str) {\r\n  if (str.includes(\"{@\")) {\r\n    const tagSplit = splitByTags(str);\r\n    return tagSplit\r\n      .filter((it) => it)\r\n      .map((it) => {\r\n        if (it.startsWith(\"{@\")) {\r\n          let [tag, text] = splitFirstSpace(it.slice(1, -1));\r\n          text = text.replace(/<\\$([^$]+)\\$>/gi, \"\"); // remove any variable tags\r\n          switch (tag) {\r\n            case \"@b\":\r\n            case \"@bold\":\r\n            case \"@i\":\r\n            case \"@italic\":\r\n            case \"@s\":\r\n            case \"@strike\":\r\n            case \"@u\":\r\n            case \"@underline\":\r\n              return text;\r\n\r\n            case \"@h\":\r\n              return \"Hit: \";\r\n\r\n            case \"@dc\":\r\n              return `DC ${text}`;\r\n\r\n            case \"@atk\":\r\n              return attackTagToFull(text);\r\n\r\n            case \"@chance\":\r\n            case \"@d20\":\r\n            case \"@damage\":\r\n            case \"@dice\":\r\n            case \"@hit\":\r\n            case \"@recharge\": {\r\n              const [rollText, displayText] = splitTagByPipe(text);\r\n              switch (tag) {\r\n                case \"@damage\":\r\n                case \"@dice\": {\r\n                  return displayText || rollText.replace(/;/g, \"/\");\r\n                }\r\n                case \"@d20\":\r\n                case \"@hit\": {\r\n                  return (\r\n                    displayText ||\r\n                    (() => {\r\n                      const n = Number(rollText);\r\n                      if (isNaN(n)) {\r\n                        throw new Error(\r\n                          `Could not parse \"${rollText}\" as a number!`\r\n                        );\r\n                      }\r\n                      return `${n >= 0 ? \"+\" : \"\"}${n}`;\r\n                    })()\r\n                  );\r\n                }\r\n                case \"@recharge\": {\r\n                  const asNum = Number(rollText || 6);\r\n                  if (isNaN(asNum)) {\r\n                    throw new Error(\r\n                      `Could not parse \"${rollText}\" as a number!`\r\n                    );\r\n                  }\r\n                  return `(Recharge ${asNum}${asNum < 6 ? `\\u20136` : \"\"})`;\r\n                }\r\n                case \"@chance\": {\r\n                  return displayText || `${rollText} percent`;\r\n                }\r\n                default:\r\n                  throw new Error(`Unhandled tag: ${tag}`);\r\n              }\r\n            }\r\n\r\n            case \"@comic\":\r\n            case \"@comicH1\":\r\n            case \"@comicH2\":\r\n            case \"@comicH3\":\r\n            case \"@comicH4\":\r\n            case \"@comicNote\":\r\n            case \"@note\":\r\n            case \"@sense\":\r\n            case \"@skill\": {\r\n              return text;\r\n            }\r\n\r\n            case \"@5etools\":\r\n            case \"@adventure\":\r\n            case \"@book\":\r\n            case \"@filter\":\r\n            case \"@footnote\":\r\n            case \"@link\":\r\n            case \"@scaledice\":\r\n            case \"@scaledamage\":\r\n            case \"@loader\":\r\n            case \"@color\":\r\n            case \"@highlight\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts[0];\r\n            }\r\n\r\n            case \"@area\": {\r\n              const [\r\n                compactText,\r\n                /*areaId,*/ flags,\r\n                //...others\r\n              ] = splitTagByPipe(text);\r\n\r\n              return flags && flags.includes(\"x\")\r\n                ? compactText\r\n                : `${\r\n                    flags && flags.includes(\"u\") ? \"A\" : \"a\"\r\n                  }rea ${compactText}`;\r\n            }\r\n\r\n            case \"@action\":\r\n            case \"@background\":\r\n            case \"@boon\":\r\n            case \"@class\":\r\n            case \"@condition\":\r\n            case \"@creature\":\r\n            case \"@cult\":\r\n            case \"@disease\":\r\n            case \"@feat\":\r\n            case \"@hazard\":\r\n            case \"@item\":\r\n            case \"@language\":\r\n            case \"@object\":\r\n            case \"@optfeature\":\r\n            case \"@psionic\":\r\n            case \"@race\":\r\n            case \"@reward\":\r\n            case \"@vehicle\":\r\n            case \"@spell\":\r\n            case \"@status\":\r\n            case \"@table\":\r\n            case \"@trap\":\r\n            case \"@variantrule\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 3 ? parts[2] : parts[0];\r\n            }\r\n\r\n            case \"@deity\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 4 ? parts[3] : parts[0];\r\n            }\r\n\r\n            case \"@classFeature\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 6 ? parts[5] : parts[0];\r\n            }\r\n\r\n            case \"@subclassFeature\": {\r\n              const parts = splitTagByPipe(text);\r\n              return parts.length >= 8 ? parts[7] : parts[0];\r\n            }\r\n\r\n            case \"@homebrew\": {\r\n              const [newText, oldText] = splitTagByPipe(text);\r\n              if (newText && oldText) {\r\n                return `${newText} [this is a homebrew addition, replacing the following: \"${oldText}\"]`;\r\n              } else if (newText) {\r\n                return `${newText} [this is a homebrew addition]`;\r\n              } else if (oldText) {\r\n                return `[the following text has been removed due to homebrew: ${oldText}]`;\r\n              } else\r\n                throw new Error(`Homebrew tag had neither old nor new text!`);\r\n            }\r\n\r\n            default:\r\n              throw new Error(`Unhandled tag: \"${tag}\"`);\r\n          }\r\n        } else return it;\r\n      })\r\n      .join(\"\");\r\n  }\r\n  return str;\r\n};\r\n\r\nexport function stripTags(str) {\r\n  try {\r\n    if (!str) return str;\r\n    let nxtStr = _stripTagLayer(str);\r\n    while (nxtStr.length !== str.length) {\r\n      str = nxtStr;\r\n      nxtStr = _stripTagLayer(str);\r\n    }\r\n    return nxtStr;\r\n  } catch (err) {\r\n    console.error(`On [${str}]: ${err}`);\r\n    return str;\r\n  }\r\n}\r\n","// monsters\r\nexport const getMonsterDict = (store) => store.monsters.monsterDict;\r\nexport const getSubMonsterDict = (store) => store.monsters.subMonsterDict;\r\nexport const getSelectedMonsterId = (store) => store.monsters.selectedMonsterId;\r\n\r\nexport const getHarvestingTableDict = (store) =>\r\n  store.tables.harvestingTableDict;\r\nexport const getTrinketTableDict = (store) => store.tables.trinketTableDict;\r\n\r\nexport const getHarvestedItemDict = (store) => store.items.harvestedItemDict;\r\nexport const getSelectedHarvestedItemId = (store) =>\r\n  store.items.selectedHarvestedItemId;\r\n\r\nexport const getCraftableItemDict = (store) => store.items.craftableItemDict;\r\nexport const getSelectedCraftableItemId = (store) =>\r\n  store.items.selectedCraftableItemId;\r\n","import React from \"react\";\r\nimport { fileSaveAs } from \"../utility/saveFile\";\r\n// import Storage from \"../utility/StorageUtil\";\r\nimport { sortAscending } from \"../utility/stringUtil\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getSubMonsterDict,\r\n  getHarvestedItemDict,\r\n  getHarvestingTableDict,\r\n  getTrinketTableDict,\r\n  getCraftableItemDict,\r\n} from \"../redux/selectors\";\r\n\r\nexport default connect((store) => ({\r\n  subStateMonsterDict: getSubMonsterDict(store),\r\n  harvestedItemDict: getHarvestedItemDict(store),\r\n  harvestingTableDict: getHarvestingTableDict(store),\r\n  trinketTableDict: getTrinketTableDict(store),\r\n  craftableItemDict: getCraftableItemDict(store),\r\n}))(Home);\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n      <div>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n\r\n            let monsters = Object.values(props.subStateMonsterDict);\r\n            monsters.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            let harvestedItems = Object.values(props.harvestedItemDict);\r\n            harvestedItems.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            let harvestingTables = Object.values(props.harvestingTableDict);\r\n            harvestingTables.sort((a, b) => sortAscending(a.name, b.name));\r\n\r\n            let trinketTables = Object.values(props.trinketTableDict);\r\n            trinketTables.sort((a, b) =>\r\n              sortAscending(a.trinketTableType, b.trinketTableType)\r\n            );\r\n\r\n            let craftableItems = Object.values(props.craftableItemDict);\r\n            craftableItems.sort((a, b) => sortAscending(a.id, b.id));\r\n\r\n            fileSaveAs(\r\n              \"system-state.json\",\r\n              JSON.stringify({\r\n                monsters: monsters,\r\n                harvestingTables: harvestingTables,\r\n                harvestedItems: harvestedItems,\r\n                trinketTables: trinketTables,\r\n                craftableItems: craftableItems,\r\n              })\r\n            );\r\n          }}\r\n        >\r\n          Save State\r\n        </button>\r\n      </div>\r\n      {/* <div>\r\n        <input type=\"text\" style={{ width: \"100%\", height: \"4em\" }} />\r\n      </div> */}\r\n      {/* <div>{JSON.stringify(props)}</div> */}\r\n      {/* <div>{JSON.stringify(process.env)}</div> */}\r\n    </div>\r\n  );\r\n}\r\n","export function fileSaveAs(filename, fileContent) {\r\n    var link = document.createElement(\"a\");\r\n    link.download = filename;\r\n    link.href =\r\n        \"data:text/plain;charset=utf-8,\" + encodeURIComponent(fileContent);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n","export const CARD_SIZES = [\"None\", \"Small\", \"Medium\", \"Large\"];\r\n","export default class BaseDataItem {\r\n  constructor(name, source) {\r\n    this.name = name;\r\n    this.source = source;\r\n  }\r\n\r\n  get id() {\r\n    return BaseDataItem.convertToId(this.name, this.source);\r\n  }\r\n\r\n  doSimpleFilter(filterString) {\r\n    return this.name.toLowerCase().includes(filterString.toLowerCase());\r\n  }\r\n\r\n  static convertToId(name, source) {\r\n    let outString = name.replace(/[\\s'\\-()/]/g, \"\");\r\n    if (source) outString += `_${source}`;\r\n    return outString.toLowerCase();\r\n  }\r\n}\r\n","import { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class Monster extends BaseDataItem {\r\n  static from5eSource(fiveEState) {\r\n    let feType = null;\r\n\r\n    switch (typeof fiveEState.type) {\r\n      case \"string\":\r\n        feType = new CreatureType({ type: fiveEState.type });\r\n        break;\r\n      case \"object\":\r\n        let { type, tags, swarmSize } = fiveEState.type;\r\n\r\n        let inObj = {\r\n          type: type,\r\n          swarmSize: swarmSize,\r\n        };\r\n        if (tags) {\r\n          inObj.tags = tags.map((tg) =>\r\n            typeof tg === \"string\" ? { tag: tg, prefix: \"\" } : tg\r\n          );\r\n        }\r\n\r\n        feType = new CreatureType(inObj);\r\n\r\n        break;\r\n      default:\r\n        console.log(\r\n          `Unhandled creatureType type: ${typeof fiveEState.type} => ${\r\n            fiveEState.type\r\n          } of ${fiveEState.name}`\r\n        );\r\n        break;\r\n    }\r\n\r\n    let feCR = null;\r\n\r\n    switch (typeof fiveEState.cr) {\r\n      case \"string\":\r\n        feCR = new ChallengeRating({ cr: fiveEState.cr });\r\n        break;\r\n      case \"object\":\r\n        feCR = new ChallengeRating(fiveEState.cr);\r\n        break;\r\n      case \"undefined\":\r\n        feCR = new ChallengeRating({ cr: \"-\" });\r\n        break;\r\n      default:\r\n        console.log(\r\n          `Unhandled CR type: ${typeof fiveEState.cr} => ${fiveEState.cr} of ${\r\n            fiveEState.name\r\n          }`\r\n        );\r\n        break;\r\n    }\r\n\r\n    let feACLines = [];\r\n    for (let i = 0; i < fiveEState.ac.length; ++i) {\r\n      let line = fiveEState.ac[i];\r\n      let acObj = {};\r\n\r\n      switch (typeof line) {\r\n        case \"number\":\r\n          acObj.ac = line;\r\n          break;\r\n        case \"string\":\r\n          acObj.ac = Number.parseInt(line);\r\n          break;\r\n        case \"object\":\r\n          acObj.ac = Number.parseInt(line.ac);\r\n          acObj.from = line.from;\r\n          acObj.condition = line.condition;\r\n          break;\r\n        default:\r\n          console.log(\r\n            `Unhandled AC type: ${typeof fiveEState.ac} => ${\r\n              fiveEState.ac\r\n            } of ${fiveEState.name}`\r\n          );\r\n          break;\r\n      }\r\n\r\n      feACLines.push(new ArmorClass(acObj));\r\n    }\r\n\r\n    let feAlignment = [];\r\n    if (!fiveEState.alignment) {\r\n      // nothing\r\n    } else if (fiveEState.alignment.every((ent) => typeof ent === \"string\")) {\r\n      feAlignment.push(new Alignment({ alignment: fiveEState.alignment }));\r\n    } else {\r\n      feAlignment = fiveEState.alignment.map((ali) => new Alignment(ali));\r\n    }\r\n\r\n    return new Monster({\r\n      name: fiveEState.name, //   name,\r\n      referenceCardSize: 0, // referenceCardSize,\r\n      source: fiveEState.source, // source,\r\n      otherSources: fiveEState.otherSources, // otherSources,\r\n      creatureSize: fiveEState.size, // creatureSize,\r\n      creatureType: feType, // creatureType,\r\n      stats: new StatsBlock(\r\n        fiveEState\r\n        // fiveEState.str,\r\n        // fiveEState.dex,\r\n        // fiveEState.con,\r\n        // fiveEState.int,\r\n        // fiveEState.wis,\r\n        // fiveEState.cha\r\n      ), // stats,\r\n      armorClass: feACLines, // armorClass,\r\n      challengeRating: feCR, // challengeRating,\r\n      health: new HealthBlock(fiveEState.hp), // health,\r\n      passivePerc: fiveEState.passive, // passivePerc,\r\n      languages: fiveEState.languages, // languages,\r\n      speed: new SpeedBlock({\r\n        walk: fiveEState.speed.walk,\r\n        fly: fiveEState.speed.fly,\r\n        swim: fiveEState.speed.swim,\r\n        climb: fiveEState.speed.climb,\r\n        burrow: fiveEState.speed.burrow,\r\n        canHover: fiveEState.speed.canHover,\r\n      }), // speed,\r\n      saves: fiveEState.save, // saves,\r\n      skills: fiveEState.skill, // skills,\r\n      senses: fiveEState.senses, // senses,\r\n      alignment: feAlignment, // alignment\r\n      resistances: fiveEState.resist, // resistances\r\n      immunities: fiveEState.immune, // immunity\r\n      conditionImmunities: fiveEState.conditionImmune, // conditionImmunities\r\n      traits: fiveEState.trait, //traits\r\n      spellcasting: fiveEState.spellcasting, //spellcasting\r\n      actions: fiveEState.action, //actions\r\n      reactions: fiveEState.reaction, //reactions\r\n      environments: fiveEState.environment, //environments\r\n      legendaryHeader: fiveEState.legendaryHeader, //legendaryHeader\r\n      legendaryActions: fiveEState.legendary, //legendaryActions\r\n    });\r\n  }\r\n\r\n  constructor({\r\n    name,\r\n    referenceCardSize,\r\n    source,\r\n    otherSources,\r\n    creatureSize,\r\n    creatureType,\r\n    stats,\r\n    armorClass,\r\n    challengeRating,\r\n    health,\r\n    passivePerc,\r\n    languages,\r\n    speed,\r\n    saves,\r\n    skills,\r\n    senses,\r\n    alignment,\r\n    resistances,\r\n    immunities,\r\n    conditionImmunities,\r\n    traits,\r\n    spellcasting,\r\n    actions,\r\n    reactions,\r\n    environments,\r\n    legendaryHeader,\r\n    legendaryActions,\r\n    harvestingTable,\r\n    trinketTableType,\r\n  }) {\r\n    super(name, source);\r\n    this.cardSize = referenceCardSize;\r\n    this.otherSources = otherSources || [];\r\n    this.size = creatureSize;\r\n    this.type = creatureType;\r\n    this.speed = speed;\r\n    this.stats = stats;\r\n    this.saves = saves || null;\r\n    this.skills = skills;\r\n    this.senses = senses;\r\n    this.armorClass = armorClass;\r\n    this.health = health;\r\n    this.passivePerc = passivePerc;\r\n    this.languages = languages;\r\n    this.challengeRating = challengeRating;\r\n    this.resistances = resistances || null;\r\n    this.immunities = immunities || null;\r\n    this.conditionImmunities = conditionImmunities || null;\r\n    this.alignment = alignment;\r\n    this.traits = traits || [];\r\n    this.spellcasting = spellcasting || [];\r\n    this.actions = actions || [];\r\n    this.reactions = reactions || [];\r\n    this.environments = environments || [];\r\n    this.legendaryHeader = legendaryHeader;\r\n    this.legendaryActions = legendaryActions || [];\r\n    this.harvestingTable = harvestingTable || null;\r\n    this.trinketTableType = trinketTableType || null;\r\n  }\r\n\r\n  static stringFromSize(size) {\r\n    switch (size) {\r\n      case \"T\":\r\n        return \"Tiny\";\r\n      case \"S\":\r\n        return \"Small\";\r\n      case \"M\":\r\n        return \"Medium\";\r\n      case \"L\":\r\n        return \"Large\";\r\n      case \"H\":\r\n        return \"Huge\";\r\n      case \"G\":\r\n        return \"Gargantuan\";\r\n      default:\r\n        return `?[${size}]?`;\r\n    }\r\n  }\r\n\r\n  doSimpleFilter(filterString) {\r\n    return (\r\n      super.doSimpleFilter(filterString) ||\r\n      this.type.displayString.toLowerCase().includes(filterString)\r\n    );\r\n  }\r\n}\r\n\r\nclass Alignment {\r\n  constructor({ alignment, chance = 100 }) {\r\n    this.alignment = alignment;\r\n    this.chance = chance;\r\n  }\r\n\r\n  get convertedString() {\r\n    let str = this.alignment\r\n      .map((k) => {\r\n        switch (k) {\r\n          case \"N\":\r\n            return \"neutral\";\r\n          case \"C\":\r\n            return \"chaotic\";\r\n          case \"G\":\r\n            return \"good\";\r\n          case \"L\":\r\n            return \"lawful\";\r\n          case \"E\":\r\n            return \"evil\";\r\n          case \"A\":\r\n            return \"any alignment\";\r\n          case \"U\":\r\n            return \"unaligned\";\r\n          default:\r\n            return `?${k}?`;\r\n        }\r\n      })\r\n      .join(\" \");\r\n\r\n    if (this.chance !== 100) {\r\n      str += ` (${this.chance}%)`;\r\n    }\r\n    return str;\r\n  }\r\n}\r\n\r\n// Monster Bits\r\nclass ArmorClass {\r\n  constructor({ ac, from, condition }) {\r\n    this.ac = ac;\r\n    this.from = from;\r\n    this.condition = condition;\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    var strOut = this.ac;\r\n\r\n    if (this.from) {\r\n      strOut = `${this.ac} (${this.from.join(\", \")})`;\r\n    } else if (this.condition) {\r\n      strOut = `${this.ac} (${this.condition.join(\", \")})`;\r\n    }\r\n\r\n    return strOut;\r\n  }\r\n}\r\n\r\nexport class CreatureType {\r\n  constructor({ type, tags, swarmSize }) {\r\n    this.type = type;\r\n    this.tags = tags || [];\r\n    this.swarmSize = swarmSize;\r\n  }\r\n\r\n  get displayString() {\r\n    let str = this.type;\r\n\r\n    if (this.swarmSize) {\r\n      return `Swarm of ${Monster.stringFromSize(\r\n        this.swarmSize\r\n      ).toLowerCase()} ${this.type}${this.type !== \"undead\" ? \"s\" : \"\"}`;\r\n    }\r\n\r\n    if (this.tags.length > 0) {\r\n      str += ` (${this.tags\r\n        .map((tg) => {\r\n          var tagOut = tg.tag;\r\n          if (tg.prefix) tagOut = tg.prefix + \" \" + tagOut;\r\n          return tagOut;\r\n        })\r\n        .join(\", \")})`;\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n  static sortAscending(a, b) {\r\n    let outVal = sortStrAsc(a.type, b.type);\r\n\r\n    if (outVal !== 0) {\r\n      return outVal;\r\n    }\r\n\r\n    outVal = a.tags.length - b.tags.length;\r\n\r\n    if (outVal !== 0) {\r\n      return outVal;\r\n    }\r\n\r\n    for (let i = 0; i < a.tags.length; ++i) {\r\n      outVal = sortStrAsc(a.tags[i].tag, b.tags[i].tag);\r\n\r\n      if (outVal !== 0) {\r\n        return outVal;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport class ChallengeRating {\r\n  static sortAscending(a, b) {\r\n    if (a === null) return -1;\r\n    if (b === null) return 1;\r\n\r\n    let out = a.cr - b.cr;\r\n\r\n    if (out !== 0) {\r\n      return out;\r\n    }\r\n\r\n    out = a.lair - b.lair;\r\n\r\n    if (out !== 0) {\r\n      return out;\r\n    }\r\n\r\n    out = a.coven - b.coven;\r\n\r\n    return out;\r\n  }\r\n\r\n  constructor({ cr, lair, coven }) {\r\n    this.cr = cr || null;\r\n    var matches = /\\d+\\/(\\d+)/g.exec(this.cr);\r\n    if (matches !== null && matches.length > 0) {\r\n      this.cr = 1 / Number.parseInt(matches[1]);\r\n    } else this.cr = Number.parseInt(this.cr);\r\n    if (Number.isNaN(this.cr)) {\r\n      this.cr = -1;\r\n    }\r\n    this.lair = lair || null;\r\n    this.coven = coven || null;\r\n  }\r\n\r\n  get displayString() {\r\n    if (this.cr === -1) {\r\n      return \"-\";\r\n    }\r\n\r\n    let crOut = this.cr;\r\n\r\n    if (typeof crOut === \"number\" && crOut < 1 && crOut !== 0) {\r\n      crOut = `1/${1 / crOut}`;\r\n    }\r\n\r\n    if (this.coven !== null) {\r\n      crOut += ` (${this.coven} in coven)`;\r\n    }\r\n\r\n    if (this.lair !== null) {\r\n      crOut += ` (${this.lair} in lair)`;\r\n    }\r\n\r\n    return crOut;\r\n  }\r\n}\r\n\r\nclass HealthBlock {\r\n  constructor({ average, formula }) {\r\n    this.average = average;\r\n    this.formula = formula;\r\n  }\r\n}\r\n\r\nconst SPEED_KEYS = [\"walk\", \"fly\", \"climb\", \"swim\", \"burrow\"];\r\nclass SpeedBlock {\r\n  constructor({ walk, fly, climb, swim, burrow, canHover }) {\r\n    this.walk = walk !== undefined ? new SpeedEntry(walk) : null;\r\n    this.fly = fly !== undefined ? new SpeedEntry(fly) : null;\r\n    this.climb = climb !== undefined ? new SpeedEntry(climb) : null;\r\n    this.swim = swim !== undefined ? new SpeedEntry(swim) : null;\r\n    this.burrow = burrow !== undefined ? new SpeedEntry(burrow) : null;\r\n    this.canHover = canHover !== undefined ? canHover : false;\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    let strOut = SPEED_KEYS.map((val) => {\r\n      if (this[val]) {\r\n        if (val !== \"walk\") return `${val} ${this[val].simpleDisplay}`;\r\n        else return `${this[val].simpleDisplay}`;\r\n      }\r\n      return \"\";\r\n    })\r\n      .filter((spd) => spd)\r\n      .join(\", \");\r\n\r\n    return strOut;\r\n  }\r\n}\r\n\r\nclass SpeedEntry {\r\n  constructor(inObj) {\r\n    if (typeof inObj === \"number\" || inObj === 0) {\r\n      this.ft = inObj;\r\n      this.condition = null;\r\n    } else {\r\n      this.ft = inObj.number;\r\n      this.condition = inObj.condition;\r\n    }\r\n  }\r\n\r\n  get simpleDisplay() {\r\n    if (!this.condition) {\r\n      return `${this.ft} ft.`;\r\n    } else {\r\n      return `${this.ft} ft. ${this.condition}`;\r\n    }\r\n  }\r\n}\r\n\r\nclass StatsBlock {\r\n  constructor({ str, dex, con, int, wis, cha }) {\r\n    this.str = str;\r\n    this.dex = dex;\r\n    this.con = con;\r\n    this.int = int;\r\n    this.wis = wis;\r\n    this.cha = cha;\r\n  }\r\n}\r\n","const TYPES = Object.freeze({\r\n  // monster related\r\n  ADD_MONSTER: \"beastiary/add-monster\",\r\n  ADD_MONSTERS: \"beastiary/add-monsters\",\r\n  ADD_SUB_MONSTER: \"beastiary/add-sub-monster\",\r\n  ADD_SUB_MONSTERS: \"beastiary/add-sub-monsters\",\r\n  SELECT_MONSTER: \"beastiary/select-monster\",\r\n  // table related\r\n  ADD_HARVESTING_TABLE: \"tables/add-harvesting-table\",\r\n  ADD_HARVESTING_TABLES: \"tables/add-harvesting-tables\",\r\n  ADD_TRINKET_TABLE: \"tables/add-trinket-table\",\r\n  ADD_TRINKET_TABLES: \"tables/add-trinket-tables\",\r\n  // item related\r\n  ADD_HARVESTED_ITEM: \"items/add-harvested-item\",\r\n  ADD_HARVESTED_ITEMS: \"items/add-harvested-items\",\r\n  SELECT_HARVESTED_ITEM: \"items/select-harvested-item\",\r\n  ADD_CRAFTABLE_ITEM: \"items/add-craftable-item\",\r\n  ADD_CRAFTABLE_ITEMS: \"items/add-craftable-items\",\r\n  SELECT_CRAFTABLE_ITEM: \"items/select-craftable-item\",\r\n});\r\n\r\nexport default TYPES;\r\n","import React from \"react\";\r\n\r\nexport const themes = Object.freeze({\r\n  dark: {\r\n    styleName: \"night\",\r\n    navbarLightDark: { light: false, dark: true },\r\n    navbarColour: \"dark\",\r\n    navbarTextClass: \"text-light\",\r\n  },\r\n  light: {\r\n    styleName: \"\",\r\n    navbarLightDark: { light: true, dark: false },\r\n    navbarColour: \"light\",\r\n    navbarTextClass: \"text-dark\",\r\n  },\r\n});\r\n\r\nexport const AppTheme = React.createContext({\r\n  theme: themes.dark,\r\n  cycleTheme: (currentState) => {},\r\n});\r\n\r\nexport default AppTheme;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FixedSizeList as List } from \"react-window\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport BaseDataItem from \"../data/BaseDataItem\";\r\nimport AppTheme from \"../themeContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class MDColumn {\r\n  constructor(colDisplay, listDisplayFunc, ascendingSortFunction) {\r\n    this.colDisplay = colDisplay;\r\n    this.listDisplayFunc = listDisplayFunc;\r\n    this.ascendingSortFunction = ascendingSortFunction;\r\n\r\n    this.sortFunc = this.sortFunc.bind(this);\r\n    this.sortAscending = this.sortAscending.bind(this);\r\n    this.sortDescending = this.sortDescending.bind(this);\r\n  }\r\n\r\n  sortFunc(isAscending) {\r\n    return isAscending ? this.sortAscending : this.sortDescending;\r\n  }\r\n\r\n  sortAscending(a, b) {\r\n    return this.ascendingSortFunction(a, b);\r\n  }\r\n\r\n  sortDescending(a, b) {\r\n    return -this.ascendingSortFunction(a, b);\r\n  }\r\n}\r\n\r\nexport function DefaultModularRow(props) {\r\n  const { index, data, style } = props;\r\n  const { headers, pathRoot, selectedId, history } = data;\r\n  const item = data.items[index];\r\n\r\n  let innerCols = [];\r\n\r\n  let desiredId = item.id;\r\n  const isSelected = selectedId === desiredId;\r\n\r\n  let headerLen = headers.length;\r\n  for (let h = 0; h < headerLen; ++h) {\r\n    let headerObj = headers[h];\r\n\r\n    innerCols.push(\r\n      <Col key={`${desiredId}-${h}`}>{headerObj.listDisplayFunc(item)}</Col>\r\n    );\r\n  }\r\n\r\n  let pathRoute = `${pathRoot}/${desiredId}`;\r\n\r\n  let activeName = isSelected ? \"active\" : \"\";\r\n\r\n  return (\r\n    <li\r\n      onClick={(e) => {\r\n        history.push(pathRoute);\r\n        e.preventDefault();\r\n      }}\r\n      className={activeName + (index % 2 === 0 ? \" even\" : \"\")}\r\n      style={style}\r\n    >\r\n      <Row>{innerCols}</Row>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport function ModularDisplayList(props) {\r\n  let {\r\n    ListItemSlot,\r\n    CustomFilterSlot,\r\n    headers,\r\n    items,\r\n    pathRoot,\r\n    height,\r\n    selectedId,\r\n    itemSize,\r\n    //...otherProps\r\n  } = props;\r\n  const appTheme = useContext(AppTheme);\r\n  let history = useHistory();\r\n  let [simpleFilter, setSimpleFilter] = useState(\"\");\r\n  let [sortByIdx, setSortByIdx] = useState(0);\r\n  let [sortAscending, setSortAscending] = useState(true);\r\n\r\n  // TODO: Filter items in the list against a simple string filter\r\n\r\n  if (!ListItemSlot) {\r\n    ListItemSlot = DefaultModularRow;\r\n    // function ({ style, index }) {\r\n    //   return <div style={style}>Row: {index}</div>;\r\n    // };\r\n  }\r\n\r\n  items = items.filter((i) => i.doSimpleFilter(simpleFilter));\r\n\r\n  items.sort(headers[sortByIdx].sortFunc(sortAscending));\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mx-0 w-100\">\r\n        <input\r\n          placeholder=\"Filter\"\r\n          type=\"text\"\r\n          value={simpleFilter}\r\n          style={{\r\n            width: \"100%\",\r\n          }}\r\n          onInput={(e) => {\r\n            setSimpleFilter(e.target.value);\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row className=\"mx-0\">{CustomFilterSlot && <CustomFilterSlot />}</Row>\r\n      <Row className=\"mx-0\">\r\n        {headers.map((h, idx) => {\r\n          return (\r\n            <Col\r\n              key={`dl-h-col-${idx}`}\r\n              onClick={(e) => {\r\n                // e.preventDefault();\r\n                if (idx === sortByIdx) {\r\n                  setSortAscending(!sortAscending);\r\n                } else {\r\n                  setSortByIdx(idx);\r\n                  setSortAscending(true);\r\n                }\r\n              }}\r\n              className={`list-header ${idx === sortByIdx && \"active\"}`}\r\n            >\r\n              {h.colDisplay}{\" \"}\r\n              {idx === sortByIdx && <>{sortAscending ? \"^\" : \"v\"}</>}\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n      <List\r\n        className={`element-list ${appTheme.theme.styleName}`}\r\n        height={height}\r\n        width={\"100%\"}\r\n        itemCount={items.length}\r\n        itemData={{ items, headers, pathRoot, history, selectedId }}\r\n        itemSize={itemSize}\r\n        headers={headers}\r\n        style={{ overflowX: \"hidden\" }}\r\n      >\r\n        {ListItemSlot}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nModularDisplayList.propTypes = {\r\n  ListItemSlot: PropTypes.element,\r\n  CustomFilterSlot: PropTypes.element,\r\n  headers: PropTypes.arrayOf(MDColumn),\r\n  items: PropTypes.arrayOf(BaseDataItem),\r\n  height: PropTypes.number,\r\n};\r\n","import \"../css/Columnable.css\";\r\nimport \"../css/DisplayList.css\";\r\nimport \"../css/Layout.css\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getMonsterDict,\r\n  getSelectedMonsterId,\r\n  getSubMonsterDict,\r\n} from \"../redux/selectors\";\r\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport { ChallengeRating, CreatureType } from \"../data/Monster\";\r\nimport Sources from \"../data/sources.json\";\r\nimport { selectMonster } from \"../redux/actions\";\r\nimport { ModularDisplayList, MDColumn } from \"../components/ModularDisplayList\";\r\n\r\nconst listSelector = (store) => ({\r\n  monsterDict: getMonsterDict(store),\r\n  subMonsterDict: getSubMonsterDict(store),\r\n});\r\n\r\nexport default connect(listSelector)(MonsterDisplayList);\r\n\r\nfunction MonsterDisplayList(props) {\r\n  let [sortByIdx, setSortByIdx] = useState(0);\r\n  let [sortAscending, setSortAscending] = useState(true);\r\n\r\n  // headers should be a collection of DisplayColumn instances\r\n  let items = Object.values(props.monsterDict);\r\n  let headers = [\r\n    new MDColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n    new MDColumn(\r\n      \"Type\",\r\n      (item) => {\r\n        return <>{item[\"type\"].displayString}</>;\r\n      },\r\n      (a, b) => {\r\n        return CreatureType.sortAscending(a.type, b.type);\r\n      }\r\n    ),\r\n    new MDColumn(\r\n      \"CR\",\r\n      (item) => {\r\n        return <>{item.challengeRating.displayString}</>;\r\n      },\r\n      (a, b) => {\r\n        return ChallengeRating.sortAscending(\r\n          a.challengeRating,\r\n          b.challengeRating\r\n        );\r\n      }\r\n    ),\r\n    new MDColumn(\r\n      \"Card Size\",\r\n      (item) => {\r\n        var subMon = props.subMonsterDict[item.id];\r\n        return <>{subMon ? CARD_SIZES[subMon.cardSize] : \"-\"}</>;\r\n      },\r\n      (a, b) => {\r\n        var subMonA = props.subMonsterDict[a.id];\r\n        var subMonB = props.subMonsterDict[b.id];\r\n\r\n        if (subMonA && subMonB) {\r\n          return subMonA.cardSize - subMonB.cardSize;\r\n        } else if (subMonA && !subMonB) {\r\n          return -1;\r\n        } else if (!subMonA && subMonB) {\r\n          return 1;\r\n        } else {\r\n          // TODO: Fix this\r\n          return -1;\r\n        }\r\n      }\r\n    ),\r\n    new MDColumn(\r\n      \"Source\",\r\n      (item) => {\r\n        return <span title={Sources[item[\"source\"]]}>{item[\"source\"]}</span>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.source, b.source);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let headerRowContents = [];\r\n  for (let i = 0; i < headers.length; ++i) {\r\n    headerRowContents.push(\r\n      <Col\r\n        key={`dl-h-col-${i}`}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n\r\n          if (i === sortByIdx) {\r\n            setSortAscending(!sortAscending);\r\n          } else {\r\n            setSortByIdx(i);\r\n            setSortAscending(true);\r\n          }\r\n        }}\r\n        className={`list-header ${i === sortByIdx && \"active\"}`}\r\n      >\r\n        {headers[i].colDisplay}{\" \"}\r\n        {i === sortByIdx && <>{sortAscending ? \"^\" : \"v\"}</>}\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  items.sort(headers[sortByIdx].sortFunc(sortAscending));\r\n\r\n  return (\r\n    <>\r\n      <ModularDisplayList\r\n        headers={headers}\r\n        items={items}\r\n        pathRoot={props.pathRoot}\r\n        selectedId={props.selectedId}\r\n        height={600}\r\n        itemSize={40}\r\n        ListItemSlot={ListRow}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ListRow(props) {\r\n  const { index, data, style } = props;\r\n  let item = data.items[index];\r\n  // return <div style={style}>{Object.keys(props).join(\",\")}</div>;\r\n  return (\r\n    <DisplayListRow\r\n      key={`row-${item.id}`}\r\n      headers={data.headers}\r\n      item={item}\r\n      pathRoot={data.pathRoot}\r\n      style={style}\r\n      history={data.history}\r\n      index={index}\r\n    />\r\n  );\r\n}\r\n\r\nconst idSelector = (store) => ({\r\n  selectedMonsterId: getSelectedMonsterId(store),\r\n});\r\n\r\nconst dispatchProps = (disp) => ({\r\n  selectMonster: (monId) => disp(selectMonster(monId)),\r\n});\r\n\r\nconst areMergedPropsEqual = (next, prev) => {\r\n  let itemChanged = prev.item.id !== next.item.id;\r\n  let selectedChanged = prev.selectedMonsterId !== next.selectedMonsterId;\r\n\r\n  if (selectedChanged && itemChanged) {\r\n    return false; // redraw\r\n  } else if (selectedChanged && !itemChanged) {\r\n    // if it equals either, redraw\r\n    return !(\r\n      next.item.id === prev.selectedMonsterId ||\r\n      next.item.id === next.selectedMonsterId\r\n    );\r\n  } else if (!selectedChanged && itemChanged) {\r\n    // if it equals either, redraw\r\n    return !(\r\n      prev.selectedMonsterId === next.item.id ||\r\n      prev.selectedMonsterId === prev.item.id\r\n    );\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\nconst DisplayListRow = connect(\r\n  idSelector,\r\n  dispatchProps,\r\n  (stateProps, dispatchProps, ownProps) => ({\r\n    ...stateProps,\r\n    ...ownProps,\r\n    ...dispatchProps,\r\n  }),\r\n  {\r\n    pure: true,\r\n    areMergedPropsEqual,\r\n  }\r\n)(\r\n  class DisplayListRowInner extends React.PureComponent {\r\n    render() {\r\n      let history = this.props.history; //useHistory();\r\n\r\n      let {\r\n        headers,\r\n        item,\r\n        pathRoot,\r\n        selectedMonsterId,\r\n        index,\r\n        style,\r\n      } = this.props;\r\n\r\n      let isSelected = item.id === selectedMonsterId;\r\n\r\n      let innerCols = [\r\n        //  <Col key=\"id\">{selectedMonsterId + \"|\" + item.id}</Col>\r\n      ];\r\n\r\n      let desiredId = item.id;\r\n\r\n      let headerLen = headers.length;\r\n      for (let h = 0; h < headerLen; ++h) {\r\n        let headerObj = headers[h];\r\n\r\n        innerCols.push(\r\n          <Col key={`${desiredId}-${h}`}>{headerObj.listDisplayFunc(item)}</Col>\r\n        );\r\n      }\r\n\r\n      let pathRoute = `${pathRoot}/${desiredId}`;\r\n\r\n      let activeName = isSelected ? \"active\" : \"\";\r\n\r\n      return (\r\n        <li\r\n          onClick={(e) => {\r\n            history.push(pathRoute);\r\n            this.props.selectMonster(desiredId);\r\n            e.preventDefault();\r\n          }}\r\n          className={activeName + (index % 2 === 0 ? \" even\" : \"\")}\r\n          style={style}\r\n        >\r\n          <Row>{innerCols}</Row>\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import TYPES from \"./actionTypes\";\r\n\r\n// Monsters\r\nexport const addMonster = (monster) => ({\r\n  type: TYPES.ADD_MONSTER,\r\n  payload: monster,\r\n});\r\n\r\nexport const addMonsters = (monsters) => ({\r\n  type: TYPES.ADD_MONSTERS,\r\n  payload: monsters,\r\n});\r\n\r\nexport const addSubMonster = (subMonster) => ({\r\n  type: TYPES.ADD_SUB_MONSTER,\r\n  payload: subMonster,\r\n});\r\n\r\nexport const addSubMonsters = (subMonsters) => ({\r\n  type: TYPES.ADD_SUB_MONSTERS,\r\n  payload: subMonsters,\r\n});\r\n\r\nexport const selectMonster = (monsterId) => ({\r\n  type: TYPES.SELECT_MONSTER,\r\n  payload: monsterId,\r\n});\r\n\r\n// Tables\r\nexport const addHarvestingTable = (harvestingTable) => ({\r\n  type: TYPES.ADD_HARVESTING_TABLE,\r\n  payload: harvestingTable,\r\n});\r\n\r\nexport const addHarvestingTables = (harvestingTables) => ({\r\n  type: TYPES.ADD_HARVESTING_TABLES,\r\n  payload: harvestingTables,\r\n});\r\n\r\nexport const addTrinketTable = (trinketTable) => ({\r\n  type: TYPES.ADD_TRINKET_TABLE,\r\n  payload: trinketTable,\r\n});\r\n\r\nexport const addTrinketTables = (trinketTables) => ({\r\n  type: TYPES.ADD_TRINKET_TABLES,\r\n  payload: trinketTables,\r\n});\r\n\r\n// Items\r\nexport const addHarvestedItem = (harvestedItem) => ({\r\n  type: TYPES.ADD_HARVESTED_ITEM,\r\n  payload: harvestedItem,\r\n});\r\n\r\nexport const addHarvestedItems = (harvestedItems) => ({\r\n  type: TYPES.ADD_HARVESTED_ITEMS,\r\n  payload: harvestedItems,\r\n});\r\n\r\nexport const selectHarvestedItem = (harvestedItemId) => ({\r\n  type: TYPES.SELECT_HARVESTED_ITEM,\r\n  payload: harvestedItemId,\r\n});\r\n\r\nexport const addCraftableItem = (craftableItem) => ({\r\n  type: TYPES.ADD_CRAFTABLE_ITEM,\r\n  payload: craftableItem,\r\n});\r\n\r\nexport const addCraftableItems = (craftableItems) => ({\r\n  type: TYPES.ADD_CRAFTABLE_ITEMS,\r\n  payload: craftableItems,\r\n});\r\n\r\nexport const selectCraftableItem = (craftableItemId) => ({\r\n  type: TYPES.SELECT_CRAFTABLE_ITEM,\r\n  payload: craftableItemId,\r\n});\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport function StatBlock(props) {\r\n  let statBlock = props.statBlock;\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"text-center\">\r\n        <Row key=\"head\" className=\"font-weight-bold\">\r\n          <Col>STR</Col>\r\n          <Col>DEX</Col>\r\n          <Col>CON</Col>\r\n          <Col>INT</Col>\r\n          <Col>WIS</Col>\r\n          <Col>CHA</Col>\r\n        </Row>\r\n        <Row key=\"statVals\">\r\n          <Col key=\"str\">\r\n            {statBlock.str} ({getModifierDisplayString(statBlock.str)})\r\n          </Col>\r\n          <Col key=\"dex\">\r\n            {statBlock.dex} ({getModifierDisplayString(statBlock.dex)})\r\n          </Col>\r\n          <Col key=\"con\">\r\n            {statBlock.con} ({getModifierDisplayString(statBlock.con)})\r\n          </Col>\r\n          <Col key=\"int\">\r\n            {statBlock.int} ({getModifierDisplayString(statBlock.int)})\r\n          </Col>\r\n          <Col key=\"wis\">\r\n            {statBlock.wis} ({getModifierDisplayString(statBlock.wis)})\r\n          </Col>\r\n          <Col key=\"cha\">\r\n            {statBlock.cha} ({getModifierDisplayString(statBlock.cha)})\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function getModifierDisplayString(stat) {\r\n  let mod = getModifier(stat);\r\n\r\n  if (mod > 0) mod = `+${mod}`;\r\n\r\n  return mod;\r\n}\r\n\r\nexport function getModifier(stat) {\r\n  return Math.floor((stat - 10) / 2);\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport \"../css/HamundsTables.css\";\r\n\r\nexport function TrinketTableDisplay(props) {\r\n  let trinketTable = props.trinketTable;\r\n\r\n  if (trinketTable === null || trinketTable === undefined) {\r\n    return <></>;\r\n  }\r\n\r\n  let rowsOut = [];\r\n\r\n  rowsOut.push(\r\n    <Row className=\"text-center font-weight-bold\" key={\"trinketTableHeader\"}>\r\n      <Col className=\"col-1\">D8</Col>\r\n      <Col className=\"text-left\">Description</Col>\r\n      <Col className=\"col-1\">Value</Col>\r\n      <Col className=\"col-1\">Weight</Col>\r\n    </Row>\r\n  );\r\n\r\n  for (let i = 0; i < trinketTable.rows.length; ++i) {\r\n    let row = trinketTable.rows[i];\r\n    rowsOut.push(\r\n      <Row key={`tt-r${i}`}>\r\n        <Col className=\"col-1 text-center\">{row.d8Roll}</Col>\r\n        <Col>{row.descriptionLine}</Col>\r\n        <Col className=\"col-1\">{row.value}</Col>\r\n        <Col className=\"col-1\">{row.weight}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"hamund-table\" fluid>\r\n      {rowsOut}\r\n    </Container>\r\n  );\r\n}\r\n","import \"../css/HamundsTables.css\";\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { NavLink } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppTheme } from \"../themeContext\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCraftableItemDict, getHarvestedItemDict } from \"../redux/selectors\";\r\n\r\nconst selectors = (store) => ({\r\n  harvestedItemDict: getHarvestedItemDict(store),\r\n  craftableItemDict: getCraftableItemDict(store),\r\n});\r\nexport default connect(selectors)(HarvestingTableDisplay);\r\n\r\nfunction HarvestingTableDisplay(props) {\r\n  const appTheme = useContext(AppTheme);\r\n\r\n  let challengeRating = props.challengeRating;\r\n  let creatureType = props.creatureType;\r\n  let harvestingTable = props.harvestingTable;\r\n\r\n  if (!harvestingTable) return <></>;\r\n\r\n  let rowsOut = [];\r\n\r\n  rowsOut.push(\r\n    <Row\r\n      className={`text-center hamund-header ${appTheme.theme.styleName}`}\r\n      key={-1}\r\n    >\r\n      <Col className=\"col-1\">DC</Col>\r\n      <Col className=\"col-2 text-left\">Item</Col>\r\n      <Col className=\"\">Description</Col>\r\n      <Col className=\"col-1\">Value</Col>\r\n      <Col className=\"col-1\">Weight</Col>\r\n      <Col className=\"col-2\">Crafting</Col>\r\n    </Row>\r\n  );\r\n\r\n  for (let i = 0; i < harvestingTable.rows.length; ++i) {\r\n    let row = harvestingTable.rows[i];\r\n\r\n    let item = props.harvestedItemDict[row.itemNameReference];\r\n\r\n    let nameOut = row.itemNameReference;\r\n    let descriptionOut = [];\r\n    let valueOut = \"\";\r\n    let weightOut = \"\";\r\n    let craftingOut = [];\r\n\r\n    if (item !== null && item !== undefined) {\r\n      nameOut = item.name;\r\n\r\n      let lines = 0;\r\n\r\n      for (let j = 0; j < item.description.length; ++j) {\r\n        descriptionOut.push(<p key={lines++}>{item.description[j]}</p>);\r\n      }\r\n\r\n      // output tools, if any\r\n      if (\r\n        item.requiredToolNames !== undefined &&\r\n        item.requiredToolNames.length > 0\r\n      ) {\r\n        descriptionOut.push(\r\n          <p key={lines++} className=\"font-weight-bold\">\r\n            Requires {item.requiredToolNames.join(\" and \").toLowerCase()}.\r\n          </p>\r\n        );\r\n      }\r\n\r\n      for (let j = 0; j < item.useText.length; ++j) {\r\n        descriptionOut.push(\r\n          <p key={lines++}>\r\n            {j === 0 && <b>Use: </b>} {item.useText[j]}\r\n          </p>\r\n        );\r\n      }\r\n\r\n      valueOut = item.value;\r\n      weightOut = item.weight;\r\n\r\n      // craftingOut = item.CraftingUsage.join(\" or \");\r\n      for (let k = 0; k < item.craftingUsage.length; ++k) {\r\n        if (craftingOut.length !== 0) {\r\n          craftingOut.push(<span key={\"or-\" + k}> or </span>);\r\n        }\r\n        craftingOut.push(\r\n          <NavLink\r\n            key={k}\r\n            tag={Link}\r\n            // TODO: Fix this\r\n            to={`/craftableitems/${item.craftingUsage[k]}`}\r\n          >\r\n            {props.craftableItemDict[item.craftingUsage[k]] &&\r\n              props.craftableItemDict[item.craftingUsage[k]].name}\r\n          </NavLink>\r\n        );\r\n      }\r\n    }\r\n\r\n    if (row.quantity !== \"\") {\r\n      nameOut += ` (${row.quantity})`;\r\n    }\r\n    if (row.notes !== \"\") {\r\n      nameOut += ` (${row.notes})`;\r\n    }\r\n\r\n    rowsOut.push(\r\n      <Row key={i} className={`hamund-row ${appTheme.theme.styleName}`}>\r\n        <Col className=\"col-1 text-center\">{row.difficultyClass}</Col>\r\n        <Col className=\"col-2\">{nameOut}</Col>\r\n        <Col className=\"\">{descriptionOut}</Col>\r\n        <Col className=\"col-1\">{valueOut}</Col>\r\n        <Col className=\"col-1\">{weightOut}</Col>\r\n        <Col className=\"col-2\">{craftingOut}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  let skill = \"\";\r\n\r\n  switch (creatureType.type) {\r\n    case \"aberration\":\r\n    case \"celestial\":\r\n    case \"elemental\":\r\n    case \"fey\":\r\n    case \"fiend\":\r\n    case \"undead\":\r\n      skill = \"Arcana\";\r\n      break;\r\n    case \"beast\":\r\n    case \"dragon\":\r\n    case \"monstrosity\":\r\n    case \"plant\":\r\n      skill = \"Nature\";\r\n      break;\r\n    case \"construct\":\r\n    case \"ooze\":\r\n      skill = \"Investigation\";\r\n      break;\r\n    case \"giant\":\r\n    case \"humanoid\":\r\n      skill = \"Medicine\";\r\n      break;\r\n    default:\r\n      skill = \"[\" + creatureType.type + \"]\";\r\n      break;\r\n  }\r\n\r\n  let apprasialTarget = \"unknown\";\r\n\r\n  if (challengeRating !== null) {\r\n    apprasialTarget = 8 + challengeRating.cr;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <b>Relevant skill:</b>&nbsp;{skill}\r\n      </Row>\r\n      <Row>\r\n        <b>Appraisal Target:</b>&nbsp;{apprasialTarget}\r\n      </Row>\r\n      <div className=\"border\" />\r\n      <Container className=\"hamund-table\">{rowsOut}</Container>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { stripTags } from \"../utility/stringUtil\";\r\n\r\nexport function DynamicRender(props) {\r\n  let toRender = props.toRender;\r\n  let { name, entries, type } = toRender;\r\n\r\n  if (typeof toRender === \"string\") {\r\n    return <>{stripTags(toRender)}</>;\r\n  }\r\n\r\n  if (type === undefined) {\r\n    return (\r\n      <div>\r\n        {entries.map((ent, idx) => {\r\n          return (\r\n            <div key={idx}>\r\n              {idx === 0 && (\r\n                <>\r\n                  <b>{stripTags(name)}.</b>{\" \"}\r\n                </>\r\n              )}\r\n              <DynamicRender toRender={ent} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    switch (type) {\r\n      case \"list\":\r\n        return <ListRender list={toRender} />;\r\n      case \"item\":\r\n        return <ItemRender item={toRender} />;\r\n      default:\r\n        return <>[UNH {type} UNH]</>;\r\n    }\r\n  }\r\n}\r\n\r\nfunction ListRender(props) {\r\n  let {\r\n    //type,\r\n    style,\r\n    items,\r\n    //...others\r\n  } = props.list;\r\n\r\n  return (\r\n    <ul className={style}>\r\n      {items.map((it, idx) => (\r\n        <DynamicRender toRender={it} key={idx} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction ItemRender(props) {\r\n  let {\r\n    //type,\r\n    name,\r\n    entry,\r\n    //...others\r\n  } = props.item;\r\n\r\n  return (\r\n    <li>\r\n      <b>{stripTags(name)}</b> {stripTags(entry)}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport function SpellcastingBlock(props) {\r\n  var entry = props.spellcasting;\r\n\r\n  var { name, headerEntries, spells, will, daily, footerEntries } = entry;\r\n\r\n  var output = [];\r\n  var idx = 0;\r\n  if (headerEntries && headerEntries.length > 0) {\r\n    output.push(\r\n      <div key={\"header\"}>\r\n        {headerEntries.map((head, idx) => {\r\n          if (idx === 0) {\r\n            return (\r\n              <div key={idx}>\r\n                <b>{stripTags(name)}.</b> {stripTags(head)}\r\n              </div>\r\n            );\r\n          } else {\r\n            return <div key={idx}>{stripTags(head)}</div>;\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n    //   for (idx = 0; idx < headerEntries.length; ++idx) {\r\n    //     if (idx === 0) {\r\n    //       output.push(\r\n    //         <div key={idx}>\r\n    //           <b>{stripTags(name)}.</b> {stripTags(headerEntries[idx])}\r\n    //         </div>\r\n    //       );\r\n    //     } else {\r\n    //       output.push(<div key={idx}>{stripTags(headerEntries[idx])}</div>);\r\n    //     }\r\n    //   }\r\n    // } else {\r\n    //   output.push(\r\n    //     <div key={\"header\"}>\r\n    //       <b>{stripTags(name)}.</b>\r\n    //     </div>\r\n    //   );\r\n  }\r\n\r\n  if (will && will.length > 0) {\r\n    output.push(\r\n      <div key={\"will\"}>\r\n        <i>At will:</i> {will.map(stripTags).join(\", \")}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (daily) {\r\n    let dailyKeys = Object.keys(daily);\r\n\r\n    for (idx = 0; idx < dailyKeys.length; ++idx) {\r\n      let [num, each] = dailyKeys[idx].split(\"\");\r\n      let lead = `${num}/day${each ? \" each\" : \"\"}`;\r\n\r\n      output.push(\r\n        <div key={\"daily\"}>\r\n          <i>{lead}:</i> {daily[dailyKeys[idx]].map(stripTags).join(\", \")}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (spells) {\r\n    let spellKeys = Object.keys(spells);\r\n    let spellsBlock = spells;\r\n\r\n    for (idx = 0; idx < spellKeys.length; ++idx) {\r\n      let { slots, spells } = spellsBlock[spellKeys[idx]];\r\n\r\n      let numCount = \"\";\r\n      if (slots !== undefined) {\r\n        numCount = `${slots} slot${Number.parseInt(slots) > 1 ? \"s\" : \"\"}`;\r\n      } else {\r\n        numCount = \"at will\";\r\n      }\r\n\r\n      let spellLevel = Number.parseInt(spellKeys[idx]);\r\n      if (spellLevel === 0) {\r\n        spellLevel = \"Cantrips\";\r\n      } else if (spellLevel >= 4) {\r\n        spellLevel = `${spellLevel}th level`;\r\n      } else if (spellLevel === 1) {\r\n        spellLevel = `${spellLevel}st level`;\r\n      } else if (spellLevel === 2) {\r\n        spellLevel = `${spellLevel}nd level`;\r\n      } else if (spellLevel === 3) {\r\n        spellLevel = `${spellLevel}rd level`;\r\n      }\r\n\r\n      let lead = `${spellLevel} (${numCount}): `;\r\n\r\n      output.push(\r\n        <div key={`spells-${idx}`}>\r\n          <i>{lead}</i>\r\n          {spells.map(stripTags).join(\", \")}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (footerEntries && footerEntries.length > 0) {\r\n    output.push(\r\n      <div key=\"footer\">\r\n        {footerEntries.map((foot, idx) => {\r\n          return <div key={idx}>{stripTags(foot)}</div>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div key={name}>{output}</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StatBlock } from \"../utility/statsUtil\";\r\nimport { Tabs, Tab, Row, Col } from \"react-bootstrap\";\r\nimport { CARD_SIZES } from \"../data/referenceCardSizes\";\r\nimport { TrinketTableDisplay } from \"./TrinketTableDisplay\";\r\nimport HarvestingTableDisplay from \"./HarvestingTableDisplay\";\r\nimport { stripTags } from \"../utility/stringUtil\";\r\nimport { DynamicRender, SpellcastingBlock } from \"./RenderBlocks\";\r\nimport { stringFromSize } from \"../utility/monsterUtil\";\r\nimport Sources from \"../data/sources.json\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getHarvestingTableDict,\r\n  getMonsterDict,\r\n  getSubMonsterDict,\r\n  getTrinketTableDict,\r\n} from \"../redux/selectors\";\r\n\r\nconst COMBAT_TAB_KEY = \"combat\";\r\nconst TABLES_TAB_KEY = \"tables\";\r\n\r\nconst HARVESTING_TAB_KEY = \"harvesting\";\r\nconst TRINKET_TAB_KEY = \"trinkets\";\r\n\r\nfunction MonsterDisplay(props) {\r\n  let [tabKey, setTabKey] = useState(COMBAT_TAB_KEY);\r\n  let [tablesTabKey, setTablesTabKey] = useState(HARVESTING_TAB_KEY);\r\n  let monster = props.monster;\r\n\r\n  if (monster === null) {\r\n    return (\r\n      <>\r\n        <div>Select an item from the list to see stats ...</div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  let nameOut = monster.name;\r\n  let typeOut = monster.type.displayString;\r\n\r\n  // TODO: Connect this component\r\n  let subMonster = props.subMonsterDict[monster.id];\r\n\r\n  let cardSize = subMonster ? CARD_SIZES[subMonster.cardSize] : \"-\";\r\n\r\n  let traitsAndSpellcastingOut = [];\r\n  monster.traits.forEach((entry, i) => {\r\n    traitsAndSpellcastingOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  monster.spellcasting.forEach((entry, i) => {\r\n    traitsAndSpellcastingOut.push(\r\n      <SpellcastingBlock\r\n        spellcasting={entry}\r\n        key={entry.name ? entry.name : i}\r\n      />\r\n    );\r\n  });\r\n  if (traitsAndSpellcastingOut.length > 0) {\r\n    traitsAndSpellcastingOut.push(\r\n      <div key=\"traitsBorder\" className=\"border\" />\r\n    );\r\n  }\r\n\r\n  let actionsOut = [];\r\n  monster.actions.forEach((entry, i) => {\r\n    actionsOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  if (actionsOut.length > 0) {\r\n    actionsOut.push(<div key=\"actionBorder\" className=\"border\" />);\r\n  }\r\n\r\n  let reactionsOut = [];\r\n  monster.reactions.forEach((entry, i) => {\r\n    reactionsOut.push(<DynamicRender toRender={entry} key={i} />);\r\n  });\r\n  if (reactionsOut.length > 0) {\r\n    reactionsOut.push(<div key=\"reactionBorder\" className=\"border\" />);\r\n  }\r\n\r\n  let harvestingTable =\r\n    subMonster !== undefined && subMonster.harvestingTableGroup !== null\r\n      ? props.harvestingTableDict[subMonster.harvestingTableGroup]\r\n      : null;\r\n  let trinketTable =\r\n    subMonster !== undefined && subMonster.trinketTableType !== null\r\n      ? props.trinketTableDict[subMonster.trinketTableType]\r\n      : null;\r\n\r\n  let hasHarvestingTable = harvestingTable !== null;\r\n  let hasTrinketTable = trinketTable !== null;\r\n\r\n  let hasTables = hasHarvestingTable || hasTrinketTable;\r\n\r\n  if (!hasTables) {\r\n    if (tabKey === TABLES_TAB_KEY) {\r\n      tabKey = COMBAT_TAB_KEY;\r\n    }\r\n  } else {\r\n    if (!hasHarvestingTable && tablesTabKey === HARVESTING_TAB_KEY) {\r\n      tablesTabKey = TRINKET_TAB_KEY;\r\n    } else if (!hasTrinketTable && tablesTabKey === TRINKET_TAB_KEY) {\r\n      tablesTabKey = HARVESTING_TAB_KEY;\r\n    }\r\n  }\r\n  //tabKey = COMBAT_TAB_KEY;\r\n\r\n  let otherSourcesOut = monster.otherSources.map((oSrc, idx) => {\r\n    let line = (\r\n      <span key={idx} title={Sources[oSrc.source]}>\r\n        {oSrc.source}\r\n      </span>\r\n    );\r\n    if (idx !== 0) {\r\n      return [<span key={idx + \",\"}>{\", \"}</span>, line];\r\n    } else {\r\n      return line;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col sm=\"9\">\r\n          <h4>{nameOut}</h4>\r\n          <div>\r\n            <i>\r\n              {stringFromSize(monster.size)} {typeOut}\r\n              {monster.alignment.length && (\r\n                <span>\r\n                  ,{\" \"}\r\n                  {monster.alignment\r\n                    .map((ali) => ali.convertedString)\r\n                    .join(\" or \")}\r\n                </span>\r\n              )}\r\n            </i>\r\n          </div>\r\n          <div>\r\n            <b>Card Size: </b>\r\n            {cardSize}\r\n          </div>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <div>\r\n            <b>Source</b>\r\n            <div title={Sources[monster.source]}>{monster.source}</div>\r\n            {otherSourcesOut.length > 0 && <i>{otherSourcesOut}</i>}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Tabs activeKey={tabKey} onSelect={(k) => setTabKey(k)}>\r\n        <Tab eventKey={COMBAT_TAB_KEY} title=\"Combat\">\r\n          <div>\r\n            <ACHPSpeed monster={monster} />\r\n          </div>\r\n          <div>\r\n            <StatBlock statBlock={monster.stats} />\r\n          </div>\r\n          <div className=\"border\" />\r\n          <div>\r\n            <SkillsAndSavesBlock monster={monster} />\r\n          </div>\r\n          {traitsAndSpellcastingOut}\r\n          {actionsOut}\r\n          {reactionsOut}\r\n        </Tab>\r\n        <Tab eventKey={TABLES_TAB_KEY} title=\"Tables\" disabled={!hasTables}>\r\n          <Tabs activeKey={tablesTabKey} onSelect={(k) => setTablesTabKey(k)}>\r\n            <Tab\r\n              eventKey={HARVESTING_TAB_KEY}\r\n              title=\"Harvesting\"\r\n              disabled={!hasHarvestingTable}\r\n            >\r\n              {\r\n                <HarvestingTableDisplay\r\n                  challengeRating={monster.challengeRating}\r\n                  creatureType={monster.type}\r\n                  harvestingTable={harvestingTable}\r\n                />\r\n              }\r\n              {/* {JSON.stringify(monster.HarvestingTable)} */}\r\n            </Tab>\r\n            <Tab\r\n              eventKey={TRINKET_TAB_KEY}\r\n              title=\"Trinkets\"\r\n              disabled={!hasTrinketTable}\r\n            >\r\n              <TrinketTableDisplay trinketTable={trinketTable} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Tab>\r\n      </Tabs>\r\n      {/* <div className=\"border\" /> */}\r\n      {/* {JSON.stringify(monster)} */}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ACHPSpeed(props) {\r\n  let monster = props.monster;\r\n  let topBlock = [];\r\n\r\n  let acOut = (\r\n    <>\r\n      {monster.armorClass\r\n        .map((ac) => {\r\n          if (ac.from) {\r\n            return ac.ac + \" (\" + ac.from.map(stripTags).join(\", \") + \")\";\r\n          } else if (ac.condition) {\r\n            return ac.ac + \" \" + stripTags(ac.condition);\r\n          } else return ac.ac;\r\n        })\r\n        .join(\", \")}\r\n    </>\r\n  );\r\n  topBlock.push(\r\n    <div key=\"ac\">\r\n      <b>AC:</b> {acOut}\r\n    </div>\r\n  );\r\n  let hpOut = (\r\n    <>\r\n      {monster.health.average} ({monster.health.formula})\r\n    </>\r\n  );\r\n  topBlock.push(\r\n    <div key=\"hp\">\r\n      <b>Health:</b> {hpOut}\r\n    </div>\r\n  );\r\n  let speedOut = <>{monster.speed.simpleDisplay}</>;\r\n  topBlock.push(\r\n    <div key=\"speed\">\r\n      <b>Speed:</b> {speedOut}\r\n    </div>\r\n  );\r\n  topBlock.push(<div key=\"borderTop\" className=\"border\" />);\r\n\r\n  return <>{topBlock}</>;\r\n}\r\n\r\nfunction SkillsAndSavesBlock(props) {\r\n  let monster = props.monster;\r\n\r\n  // let testFunction = function (mon) {\r\n  //   return JSON.stringify(mon[this.key]);\r\n  // };\r\n  let keyValueFunction = function (mon) {\r\n    return Object.keys(mon[this.key])\r\n      .map((inKey) => inKey + \" \" + mon[this.key][inKey])\r\n      .join(\", \");\r\n  };\r\n  let simpleJoinFunction = function (mon) {\r\n    return mon[this.key].join(\", \");\r\n  };\r\n  let resistImmuneFunction = function (type) {\r\n    return function (mon) {\r\n      return mon[this.key]\r\n        .map((val) => {\r\n          switch (typeof val) {\r\n            case \"string\":\r\n              return val;\r\n            case \"object\": {\r\n              let out = \"\";\r\n              if (val[type]) {\r\n                if (typeof val[type] === \"string\") {\r\n                  out = val[type];\r\n                } else {\r\n                  out = val[type].join(\", \");\r\n                }\r\n              }\r\n\r\n              return `${out} ${val.note}`;\r\n            }\r\n            default:\r\n              return JSON.stringify(val);\r\n          }\r\n        })\r\n        .join(\", \");\r\n    };\r\n  };\r\n  const SSE_PAIRS = [\r\n    {\r\n      key: \"saves\",\r\n      header: \"Saving Throws\",\r\n      disp: keyValueFunction,\r\n    },\r\n    {\r\n      key: \"skills\",\r\n      header: \"Skills\",\r\n      disp: keyValueFunction,\r\n    },\r\n    {\r\n      key: \"resistances\",\r\n      header: \"Resistances\",\r\n      disp: resistImmuneFunction(\"resist\"),\r\n    },\r\n    {\r\n      key: \"immunities\",\r\n      header: \"Immunities\",\r\n      disp: resistImmuneFunction(\"immune\"),\r\n    },\r\n    {\r\n      key: \"conditionImmunities\",\r\n      header: \"Condition Immunities\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"languages\",\r\n      header: \"Languages\",\r\n      disp: simpleJoinFunction,\r\n    },\r\n    {\r\n      key: \"senses\",\r\n      header: \"Senses\",\r\n      disp: function (mon) {\r\n        return (\r\n          mon[this.key].join(\", \") + \", passive Perception \" + mon.passivePerc\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  let skillsSavesEtcOut = [];\r\n  SSE_PAIRS.forEach((pair) => {\r\n    if (monster[pair.key]) {\r\n      skillsSavesEtcOut.push(\r\n        <div key={pair.key}>\r\n          <b>{pair.header}: </b>\r\n          {pair.disp(monster)}\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n  skillsSavesEtcOut.push(\r\n    <div key=\"cr\">\r\n      <b>Challenge Rating: </b>\r\n      {monster.challengeRating.displayString}\r\n    </div>\r\n  );\r\n  if (skillsSavesEtcOut.length > 0) {\r\n    skillsSavesEtcOut.push(<div key=\"border\" className=\"border\" />);\r\n  }\r\n\r\n  return <>{skillsSavesEtcOut}</>;\r\n}\r\n\r\nconst monstersSelector = (state) => ({\r\n  monsterDict: getMonsterDict(state),\r\n  subMonsterDict: getSubMonsterDict(state),\r\n  harvestingTableDict: getHarvestingTableDict(state),\r\n  trinketTableDict: getTrinketTableDict(state),\r\n});\r\n\r\nexport default connect(monstersSelector)(MonsterDisplay);\r\n","export function getIdFromMonster(monster) {\r\n  let idReplaceRegex = /[\\s'\\-()]/g;\r\n  return (\r\n    monster.name.replace(idReplaceRegex, \"\") +\r\n    \"_\" +\r\n    monster.source\r\n  ).toLowerCase();\r\n}\r\n\r\nexport function stringFromSize(size) {\r\n  switch (size) {\r\n    case \"T\":\r\n      return \"Tiny\";\r\n    case \"S\":\r\n      return \"Small\";\r\n    case \"M\":\r\n      return \"Medium\";\r\n    case \"L\":\r\n      return \"Large\";\r\n    case \"H\":\r\n      return \"Huge\";\r\n    case \"G\":\r\n      return \"Gargantuan\";\r\n    default:\r\n      return `?[${size}]?`;\r\n  }\r\n}\r\n","import \"../css/Columnable.css\";\r\nimport \"../css/Layout.css\";\r\n\r\nimport React from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport MonsterDisplayList from \"../components/MonsterDisplayList\";\r\nimport MonsterDisplay from \"../components/MonsterDisplay\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getMonsterDict, getSubMonsterDict } from \"../redux/selectors\";\r\n\r\nconst monstersSelector = (state) => ({\r\n  monsterDict: getMonsterDict(state),\r\n  subMonsterDict: getSubMonsterDict(state),\r\n});\r\n\r\nexport default connect(monstersSelector)(Monsters);\r\n\r\nfunction Monsters(props) {\r\n  const pathWithId = \"/monsters/:id\";\r\n  let monster = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (props.monsterDict[selectedId] !== undefined) {\r\n      monster = props.monsterDict[selectedId];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          {/* <MonsterFilterBlock submitFilter={setFilterObj} /> */}\r\n          <MonsterDisplayList\r\n            // filterObject={filterObj}\r\n            pathRoot={props.match.path}\r\n            selectedId={selectedId}\r\n          />\r\n        </Col>\r\n        <Col className=\"border\">\r\n          <MonsterDisplay monster={monster} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCraftableItemDict } from \"../redux/selectors\";\r\n\r\nconst selectors = (store) => ({\r\n  craftableItemDict: getCraftableItemDict(store),\r\n});\r\n\r\nexport default connect(selectors)(HarvestedItemDisplay);\r\n\r\nfunction HarvestedItemDisplay(props) {\r\n  let hItem = props.harvestedItem;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Name:</Col>\r\n        <Col>{hItem.name}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Value:</Col>\r\n        <Col>{hItem.value}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Weight:</Col>\r\n        <Col>{hItem.weight}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Required Tools:</Col>\r\n        <Col>\r\n          {hItem.requiredToolNames.length === 0\r\n            ? \"-\"\r\n            : hItem.requiredToolNames.join(\" and \")}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">CraftingUsage:</Col>\r\n        <Col>\r\n          {hItem.craftingUsage.length === 0\r\n            ? \"-\"\r\n            : hItem.craftingUsage\r\n                .map((cu) => props.craftableItemDict[cu].name)\r\n                .join(\" and \")}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Description:</Col>\r\n        <Col>\r\n          {hItem.description.map((para, idx) => {\r\n            return <p key={idx}>{para}</p>;\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      {hItem.useText.length !== 0 && (\r\n        <Row>\r\n          <Col className=\"col-3 font-weight-bold\">UseText:</Col>\r\n          <Col>\r\n            {hItem.useText.map((para, idx) => {\r\n              return <p key={idx}>{para}</p>;\r\n            })}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport HarvestedItemDisplay from \"../components/HarvestedItemDisplay\";\r\n\r\nimport { ModularDisplayList, MDColumn } from \"../components/ModularDisplayList\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHarvestedItemDict } from \"../redux/selectors\";\r\n\r\nconst selectors = (store) => ({\r\n  harvestedItemDict: getHarvestedItemDict(store),\r\n});\r\n\r\nexport default connect(selectors)(HarvestedItems);\r\n\r\nfunction HarvestedItems(props) {\r\n  const pathWithId = \"/harvesteditems/:id\";\r\n  let harvestedItem = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (props.harvestedItemDict[selectedId] !== undefined) {\r\n      harvestedItem = props.harvestedItemDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    new MDColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let harvestedOutput = [\"Select an item from the list\"];\r\n\r\n  if (harvestedItem !== null) {\r\n    harvestedOutput = [<HarvestedItemDisplay harvestedItem={harvestedItem} />];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          <ModularDisplayList\r\n            headers={headers}\r\n            items={Object.values(props.harvestedItemDict)}\r\n            pathRoot={props.match.path}\r\n            selectedId={selectedId}\r\n            height={600}\r\n            itemSize={25}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">{harvestedOutput}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ModularDescription(props) {\r\n  let desc = props.description;\r\n\r\n  if (typeof desc === \"string\") {\r\n    return <SimpleDescription description={desc} />;\r\n  } else {\r\n    if (!desc.type) return <>ERROR on: {JSON.stringify(desc)}</>;\r\n    switch (desc.type) {\r\n      case \"list\":\r\n        let style = desc.style;\r\n        return (\r\n          <ListDescription items={desc.lines || desc.items} style={style} />\r\n        );\r\n      case \"item\":\r\n        return <ItemDescription description={desc} />;\r\n      default:\r\n        return <UnhandledDescription description={desc} />;\r\n    }\r\n  }\r\n}\r\n\r\nfunction SimpleDescription(props) {\r\n  return <p>{props.description}</p>;\r\n}\r\n\r\nfunction ItemDescription(props) {\r\n  return (\r\n    <p>\r\n      <b>{props.description.name}</b> {props.description.entry}\r\n    </p>\r\n  );\r\n}\r\n\r\nfunction UnhandledDescription(props) {\r\n  return <p>{JSON.stringify(props.description)}</p>;\r\n}\r\n\r\nfunction ListDescription(props) {\r\n  let output = [];\r\n\r\n  for (let i = 0; i < props.items.length; ++i) {\r\n    output.push(\r\n      <li key={i}>\r\n        <ModularDescription description={props.items[i]} />\r\n      </li>\r\n    );\r\n  }\r\n\r\n  let styleObj = {};\r\n  if (props.style) {\r\n    styleObj.listStyle = props.style;\r\n  }\r\n\r\n  return <ul style={styleObj}>{output}</ul>;\r\n}\r\n","import React from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { ModularDescription } from \"../utility/descriptionUtil\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHarvestedItemDict, getCraftableItemDict } from \"../redux/selectors\";\r\n\r\nconst selector = (store) => ({\r\n  craftableItemDict: getCraftableItemDict(store),\r\n  harvestedItemDict: getHarvestedItemDict(store),\r\n});\r\n\r\nexport default connect(selector)(CraftableItemDisplay);\r\n\r\nfunction CraftableItemDisplay(props) {\r\n  let craftableItem = props.craftableItem;\r\n\r\n  let materialOutput = craftableItem.materials.map((mat, idx) => {\r\n    let matItem = props.harvestedItemDict[mat.componentId];\r\n\r\n    return (\r\n      <span key={idx}>\r\n        {matItem ? matItem.name : mat.componentId} ({mat.quantity})\r\n      </span>\r\n    );\r\n  });\r\n  let finalMaterialOutput = [];\r\n  for (let i = 0; i < materialOutput.length; ++i) {\r\n    if (finalMaterialOutput.length !== 0) {\r\n      finalMaterialOutput.push(\" \" + craftableItem.materialGrouping + \" \");\r\n    }\r\n    finalMaterialOutput.push(materialOutput[i]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"font-weight-bold\">{craftableItem.name}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <i>\r\n            {craftableItem.type},{\" \"}\r\n            {(craftableItem.rarity !== null\r\n              ? craftableItem.rarity\r\n              : \"\"\r\n            ).toLowerCase()}{\" \"}\r\n            {craftableItem.requiresAttunement && \"(requires attunement)\"}\r\n          </i>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <i>\r\n            Crafted by: {finalMaterialOutput} ({craftableItem.crafter})\r\n          </i>\r\n        </Col>\r\n      </Row>\r\n      &nbsp;\r\n      <Row>\r\n        <Col className=\"col-3 font-weight-bold\">Description:</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {craftableItem.description.length > 0 &&\r\n            craftableItem.description.map((para, idx) => {\r\n              return <ModularDescription key={idx} description={para} />;\r\n            })}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import \"../css/Columnable.css\";\r\nimport \"../css/Layout.css\";\r\n\r\nimport React from \"react\";\r\nimport { matchPath } from \"react-router\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport CraftableItemDisplay from \"../components/CraftableItemDisplay\";\r\nimport { sortAscending as sortStrAsc } from \"../utility/stringUtil\";\r\nimport { ModularDisplayList, MDColumn } from \"../components/ModularDisplayList\";\r\nimport { getCraftableItemDict } from \"../redux/selectors\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst selectors = (store) => ({\r\n  craftableItemDict: getCraftableItemDict(store),\r\n});\r\n\r\nexport default connect(selectors)(CraftableItems);\r\n\r\nfunction CraftableItems(props) {\r\n  const pathWithId = \"/craftableitems/:id\";\r\n  let craftableItem = null;\r\n\r\n  // extract monster id from the path\r\n  let match = matchPath(props.location.pathname, { path: pathWithId });\r\n  let selectedId = \"\";\r\n  if (match !== null) {\r\n    // if there is an id, search for the monster\r\n    selectedId = match.params.id;\r\n    if (props.craftableItemDict[selectedId] !== undefined) {\r\n      craftableItem = props.craftableItemDict[selectedId];\r\n    }\r\n  }\r\n\r\n  const headers = [\r\n    // new DisplayColumn(\r\n    new MDColumn(\r\n      \"Name\",\r\n      (item) => {\r\n        return <>{item[\"name\"]}</>;\r\n      },\r\n      (a, b) => {\r\n        return sortStrAsc(a.name, b.name);\r\n      }\r\n    ),\r\n  ];\r\n\r\n  let displayOutput = [\"Select an item from the list\"];\r\n\r\n  if (craftableItem !== null) {\r\n    displayOutput[0] = (\r\n      <CraftableItemDisplay craftableItem={craftableItem} key={0} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"h-100\" xs={1} md={2}>\r\n        <Col className=\"border h-100\">\r\n          <ModularDisplayList\r\n            headers={headers}\r\n            items={Object.values(props.craftableItemDict)}\r\n            pathRoot={props.match.path}\r\n            selectedId={selectedId}\r\n            height={600}\r\n            itemSize={25}\r\n          />\r\n        </Col>\r\n        <Col className=\"border scrollableColumn\">{displayOutput}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Home from \"./pages/Home\";\r\nimport Monsters from \"./pages/Monsters\";\r\nimport HarvestedItems from \"./pages/HarvestedItems\";\r\nimport CraftableItems from \"./pages/CraftableItems\";\r\n\r\nexport const MENU = [\r\n  {\r\n    className: \"\",\r\n    linkName: \"Home\",\r\n    linkTarget: \"/\",\r\n    routePaths: [\"/\"],\r\n    exact: true,\r\n    renderFunction: (props) => {\r\n      return <Home {...props} />;\r\n    },\r\n  },\r\n  {\r\n    className: \"\",\r\n    linkName: \"Monsters\",\r\n    linkTarget: \"/monsters\",\r\n    routePaths: [\"/monsters\"],\r\n    exact: false,\r\n    renderFunction: (props) => {\r\n      return <Monsters {...props} />;\r\n    },\r\n  },\r\n  {\r\n    className: \"\",\r\n    linkName: \"Harvested Items\",\r\n    linkTarget: \"/harvesteditems\",\r\n    routePaths: [\"/harvesteditems\"],\r\n    exact: false,\r\n    renderFunction: (props) => {\r\n      return <HarvestedItems {...props} />;\r\n    },\r\n  },\r\n  {\r\n    className: \"\",\r\n    linkName: \"Craftable Items\",\r\n    linkTarget: \"/craftableitems\",\r\n    routePaths: [\"/craftableitems\"],\r\n    exact: false,\r\n    renderFunction: (props) => {\r\n      return <CraftableItems {...props} />;\r\n    },\r\n  },\r\n];\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { MENU } from \"../navigationConstants\";\r\nimport { AppTheme } from \"../themeContext\";\r\n\r\nexport function NavMenu(props) {\r\n  const appTheme = useContext(AppTheme);\r\n\r\n  let navOutput = [];\r\n  for (let i = 0; i < MENU.length; ++i) {\r\n    let linkDeets = MENU[i];\r\n    navOutput.push(\r\n      <NavItem key={i} nav=\"true\">\r\n        <NavLink\r\n          tag={Link}\r\n          className={linkDeets.className + \" \" + appTheme.theme.navbarTextClass}\r\n          to={linkDeets.linkTarget}\r\n        >\r\n          {linkDeets.linkName}\r\n        </NavLink>\r\n      </NavItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar\r\n        className=\"border-bottom p-0\"\r\n        expand\r\n        {...appTheme.theme.navbarLightDark}\r\n        color={appTheme.theme.navbarColour}\r\n      >\r\n        <button onClick={() => appTheme.cycleTheme(appTheme)}>\r\n          Toggle theme\r\n        </button>\r\n        <Container>\r\n          <NavbarBrand tag={Link} to=\"/\">\r\n            Reactive RPG\r\n          </NavbarBrand>\r\n          <Nav\r\n            navbar\r\n            className=\"d-sm-inline-flex flex-sm-row\"\r\n            //className=\"mr-auto\"\r\n          >\r\n            {/* <ul className=\"navbar-nav flex-grow\"> */}\r\n            {navOutput}\r\n            {/* </ul> */}\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { NavMenu } from \"./NavMenu\";\r\nimport AppTheme from \"../themeContext\";\r\n\r\nimport \"../css/Layout.css\";\r\nimport \"../css/App.css\";\r\n\r\nexport function Layout(props) {\r\n  const context = useContext(AppTheme);\r\n\r\n  return (\r\n    <div className={`viewportWrapper ${context.theme.styleName}`}>\r\n      <NavMenu toggleTheme={props.toggleTheme} />\r\n      <Container fluid className=\"mainContentWrapper\">\r\n        {props.children}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"./LayoutControl/Layout\";\r\nimport { MENU } from \"./navigationConstants\";\r\nimport { AppTheme, themes } from \"./themeContext\";\r\n\r\nfunction App() {\r\n  const appTheme = useContext(AppTheme);\r\n  const [themeState, setThemeState] = useState(appTheme);\r\n\r\n  const toggleTheme = function (currentState) {\r\n    const newTheme = { ...currentState };\r\n    if (currentState.theme === themes.light) {\r\n      newTheme.theme = themes.dark;\r\n    } else {\r\n      newTheme.theme = themes.light;\r\n    }\r\n    setThemeState(newTheme);\r\n  };\r\n\r\n  // set the function to handle easy theme toggling\r\n  themeState.cycleTheme = toggleTheme;\r\n\r\n  let routeOpts = [];\r\n  for (let i = 0; i < MENU.length; ++i) {\r\n    let linkDeets = MENU[i];\r\n    routeOpts.push(\r\n      <Route\r\n        key={i}\r\n        path={linkDeets.routePaths[0]}\r\n        render={linkDeets.renderFunction}\r\n        exact={linkDeets.exact}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AppTheme.Provider value={themeState}>\r\n      <Layout toggleTheme={toggleTheme}>\r\n        <Switch>{routeOpts}</Switch>\r\n      </Layout>\r\n    </AppTheme.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class HarvestingTable extends BaseDataItem {\r\n  // static fromOld(oldMonster) {\r\n  //   if (!oldMonster.HarvestingTable.Rows) return null;\r\n\r\n  //   return new HarvestingTable({\r\n  //     name: oldMonster.Name,\r\n  //     rows: oldMonster.HarvestingTable.Rows.map(\r\n  //       (row) =>\r\n  //         new HarvestingTableRow({\r\n  //           difficultyClass: row.DifficultyClass,\r\n  //           itemNameReference: row.ItemNameRef,\r\n  //           quantity: row.Quantity,\r\n  //           notes: row.Notes,\r\n  //         })\r\n  //     ),\r\n  //   });\r\n  // }\r\n\r\n  constructor({ name, rows, source }) {\r\n    super(name, source);\r\n    this.rows = rows.map((r) => new HarvestingTableRow(r));\r\n  }\r\n}\r\n\r\nclass HarvestingTableRow {\r\n  constructor({ difficultyClass, itemNameReference, quantity, notes }) {\r\n    this.difficultyClass = difficultyClass;\r\n    this.itemNameReference = itemNameReference;\r\n    this.quantity = quantity;\r\n    this.notes = notes;\r\n  }\r\n}\r\n","import BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class TrinketTable extends BaseDataItem {\r\n  // static fromOld({ TrinketTableType, Rows }) {\r\n  //   return new TrinketTable({\r\n  //     trinketTableType: TrinketTableType,\r\n  //     rows: Rows.map(\r\n  //       (row) =>\r\n  //         new TrinketTableRow({\r\n  //           d8Roll: row.D8Roll,\r\n  //           descriptionLine: row.DescriptionLine,\r\n  //           value: row.ValueGP,\r\n  //           weight: row.WeightLB,\r\n  //         })\r\n  //     ),\r\n  //   });\r\n  // }\r\n\r\n  constructor({ trinketTableType, rows, source }) {\r\n    super(undefined, source);\r\n    this.trinketTableType = trinketTableType;\r\n    this.rows = rows.map((r) => new TrinketTableRow(r));\r\n  }\r\n\r\n  get id() {\r\n    return BaseDataItem.convertToId(this.trinketTableType, this.source);\r\n  }\r\n}\r\n\r\nclass TrinketTableRow {\r\n  constructor({ d8Roll, descriptionLine, value, weight }) {\r\n    this.d8Roll = d8Roll;\r\n    this.descriptionLine = descriptionLine;\r\n    this.value = value;\r\n    this.weight = weight;\r\n  }\r\n}\r\n","import BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class CraftableItem extends BaseDataItem {\r\n  constructor({\r\n    name,\r\n    crafter,\r\n    rarity,\r\n    requiresAttunement,\r\n    description,\r\n    materials,\r\n    type,\r\n    materialGrouping,\r\n    attunementNote,\r\n    source,\r\n  }) {\r\n    super(name, source);\r\n    this.crafter = crafter;\r\n    this.rarity = rarity;\r\n    this.requiresAttunement = requiresAttunement;\r\n    this.description = description;\r\n    this.materials = materials;\r\n    // this.materials = materials.map((mat) => {\r\n    //   return {\r\n    //     componentId: mat.componentId.replace(/[_-]/g, \"\") + \"_hh1\",\r\n    //     quantity: mat.quantity,\r\n    //   };\r\n    // });\r\n    this.type = type;\r\n    this.materialGrouping = materialGrouping;\r\n    this.attunementNote = attunementNote;\r\n\r\n    // check name and source\r\n    // const match = / \\((\\D?\\D?\\D?)\\)$/.exec(this.name);\r\n    // if (match) {\r\n    //   console.log(\r\n    //     `match on name [${this.name}]. Result: ${JSON.stringify(match)}`\r\n    //   );\r\n    //   this.name = this.name.substring(0, this.name.indexOf(match[0]));\r\n    //   this.source = match[1];\r\n    //   console.log(`Replaced name: ${this.name}`);\r\n    // }\r\n  }\r\n}\r\n","import BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class HarvestedItem extends BaseDataItem {\r\n  constructor({\r\n    name,\r\n    value,\r\n    weight,\r\n    craftingUsage,\r\n    description,\r\n    useText,\r\n    requiredToolNames,\r\n    source,\r\n  }) {\r\n    super(name, source);\r\n    this.value = value;\r\n    this.weight = weight;\r\n    this.craftingUsage = craftingUsage;\r\n    this.description = description;\r\n    this.useText = useText;\r\n    this.requiredToolNames = requiredToolNames;\r\n  }\r\n}\r\n","import BaseDataItem from \"./BaseDataItem\";\r\n\r\nexport class SubStateMonster extends BaseDataItem {\r\n  constructor({\r\n    name,\r\n    cardSize,\r\n    source,\r\n    trinketTableType,\r\n    harvestingTableGroup,\r\n  }) {\r\n    super(name, source);\r\n    this.cardSize = cardSize;\r\n    this.trinketTableType = trinketTableType;\r\n    this.harvestingTableGroup = harvestingTableGroup;\r\n\r\n    // if (!trinketTableType || /HH\\d$/i.test(trinketTableType)) {\r\n    //   this.trinketTableType = trinketTableType;\r\n    // } else {\r\n    //   this.trinketTableType = BaseDataItem.convertToId(trinketTableType, \"HH1\");\r\n    // }\r\n\r\n    // if (!harvestingTableGroup || /HH\\d$/i.test(harvestingTableGroup)) {\r\n    //   this.harvestingTableGroup = harvestingTableGroup;\r\n    // } else {\r\n    //   this.harvestingTableGroup = BaseDataItem.convertToId(\r\n    //     harvestingTableGroup,\r\n    //     \"HH1\"\r\n    //   );\r\n    // }\r\n  }\r\n}\r\n","import TYPES from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  monsterDict: {},\r\n  subMonsterDict: {},\r\n  selectedMonsterId: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.SELECT_MONSTER: {\r\n      let selectedMonsterId = action.payload;\r\n\r\n      if (state.selectedMonsterId === selectedMonsterId) {\r\n        return state;\r\n      }\r\n\r\n      console.log(`${TYPES.SELECT_MONSTER}: ${selectedMonsterId}`);\r\n\r\n      return {\r\n        ...state,\r\n        selectedMonsterId,\r\n      };\r\n    }\r\n    case TYPES.ADD_MONSTER: {\r\n      const { id } = action.payload;\r\n      if (state.monsterDict[id]) {\r\n        return state;\r\n      }\r\n\r\n      let monsterDict = { ...state.monsterDict };\r\n      monsterDict[id] = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        monsterDict: monsterDict,\r\n      };\r\n    }\r\n    case TYPES.ADD_MONSTERS: {\r\n      const monsters = action.payload;\r\n\r\n      let noChange = true;\r\n      let monsterDict = { ...state.monsterDict };\r\n\r\n      monsters.forEach((mon, idx) => {\r\n        if (monsterDict[mon.id] === undefined) {\r\n          monsterDict[mon.id] = mon;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          monsterDict: monsterDict,\r\n        };\r\n      }\r\n    }\r\n    case TYPES.ADD_SUB_MONSTER: {\r\n      const { id } = action.payload;\r\n      if (state.subMonsterDict[id]) {\r\n        return state;\r\n      }\r\n\r\n      let subMonsterDict = { ...state.subMonsterDict };\r\n      subMonsterDict[id] = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        subMonsterDict: subMonsterDict,\r\n      };\r\n    }\r\n    case TYPES.ADD_SUB_MONSTERS: {\r\n      const monsters = action.payload;\r\n\r\n      let noChange = true;\r\n      let subMonsterDict = { ...state.subMonsterDict };\r\n\r\n      monsters.forEach((mon, idx) => {\r\n        if (subMonsterDict[mon.id] === undefined) {\r\n          subMonsterDict[mon.id] = mon;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          subMonsterDict: subMonsterDict,\r\n        };\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import TYPES from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  harvestingTableDict: {},\r\n  trinketTableDict: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.ADD_HARVESTING_TABLE: {\r\n      // TODO: ?\r\n      return null;\r\n    }\r\n    case TYPES.ADD_HARVESTING_TABLES: {\r\n      const harvestingTables = action.payload;\r\n\r\n      let noChange = true;\r\n      let harvestingTableDict = { ...state.harvestingTableDict };\r\n\r\n      harvestingTables.forEach((hTable, idx) => {\r\n        if (harvestingTableDict[hTable.id] === undefined) {\r\n          harvestingTableDict[hTable.id] = hTable;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          harvestingTableDict: harvestingTableDict,\r\n        };\r\n      }\r\n    }\r\n    case TYPES.ADD_TRINKET_TABLE: {\r\n      // TODO: ?\r\n      return null;\r\n    }\r\n    case TYPES.ADD_TRINKET_TABLES: {\r\n      const trinketTables = action.payload;\r\n\r\n      let noChange = true;\r\n      let trinketTableDict = { ...state.trinketTableDict };\r\n\r\n      trinketTables.forEach((tTable, idx) => {\r\n        if (trinketTableDict[tTable.id] === undefined) {\r\n          trinketTableDict[tTable.id] = tTable;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          trinketTableDict: trinketTableDict,\r\n        };\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import TYPES from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  harvestedItemDict: {},\r\n  selectedHarvestedItemId: \"\",\r\n  craftableItemDict: {},\r\n  selectedCraftableItemId: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.SELECT_HARVESTED_ITEM: {\r\n      // TODO: ?\r\n      return null;\r\n    }\r\n    case TYPES.ADD_HARVESTED_ITEMS: {\r\n      const harvestedItems = action.payload;\r\n\r\n      let noChange = true;\r\n      let harvestedItemDict = { ...state.harvestedItemDict };\r\n\r\n      harvestedItems.forEach((hItem, idx) => {\r\n        if (harvestedItemDict[hItem.id] === undefined) {\r\n          harvestedItemDict[hItem.id] = hItem;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          harvestedItemDict: harvestedItemDict,\r\n        };\r\n      }\r\n    }\r\n    case TYPES.ADD_CRAFTABLE_ITEM: {\r\n      // TODO: ?\r\n      return null;\r\n    }\r\n    case TYPES.ADD_CRAFTABLE_ITEMS: {\r\n      const craftableItems = action.payload;\r\n\r\n      let noChange = true;\r\n      let craftableItemDict = { ...state.craftableItemDict };\r\n\r\n      craftableItems.forEach((cItem, idx) => {\r\n        if (craftableItemDict[cItem.id] === undefined) {\r\n          craftableItemDict[cItem.id] = cItem;\r\n          noChange = false;\r\n        }\r\n      });\r\n\r\n      if (noChange) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          craftableItemDict: craftableItemDict,\r\n        };\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport monsters from \"./monstersReducer\";\r\nimport tables from \"./tablesReducer\";\r\nimport items from \"./itemReducers\";\r\n\r\nexport default combineReducers({ monsters, tables, items });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","import Data from \"../data/system-state.json\";\r\nimport Index from \"../data/bestiary/index.json\";\r\nimport { Monster } from \"../data/Monster\";\r\nimport { HarvestingTable } from \"../data/HarvestingTable\";\r\nimport { TrinketTable } from \"../data/TrinketTable\";\r\nimport { CraftableItem } from \"../data/CraftableItem\";\r\nimport { HarvestedItem } from \"../data/HarvestedItem\";\r\nimport { SubStateMonster } from \"../data/SubStateMonster\";\r\nimport {\r\n  addCraftableItems,\r\n  addHarvestedItems,\r\n  addHarvestingTables,\r\n  addMonsters,\r\n  addSubMonsters,\r\n  addTrinketTables,\r\n} from \"../redux/actions\";\r\nimport store from \"../redux/store\";\r\n\r\nconst $ = window.$;\r\n\r\nasync function ajaxJson(fileName) {\r\n  return new Promise((resolve, reject) => {\r\n    $.getJSON(`data/bestiary/${fileName}`, (data) => {\r\n      resolve(data);\r\n    });\r\n  });\r\n}\r\n\r\nasync function Load5eMonsterFile({ key, fileName }) {\r\n  let localKey = key;\r\n\r\n  // check if already processed or already being processed\r\n  if (Storage.processedKeys.includes(localKey.toLowerCase())) {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      console.log(`[${localKey}] already done.`);\r\n    }\r\n    return;\r\n  } else if (Storage.processingKeys.includes(localKey.toLowerCase())) {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      console.log(`[${localKey}] being processed.`);\r\n    }\r\n    return;\r\n  }\r\n\r\n  Storage.processingKeys.push(localKey.toLowerCase());\r\n\r\n  console.log(`Starting on key[${localKey.toLowerCase()}]`);\r\n\r\n  var data = await ajaxJson(fileName);\r\n  if (data._meta) {\r\n    var meta = data._meta;\r\n    // await for any dependencies to be loaded in\r\n    if (meta.dependencies && meta.dependencies.monster) {\r\n      for (let jdx = 0; jdx < meta.dependencies.monster.length; ++jdx) {\r\n        var depKey = meta.dependencies.monster[jdx];\r\n        if (process.env.NODE_ENV === \"development\") {\r\n          console.log(\r\n            `Starting on key[${depKey.toLowerCase()}] required as a dependency of [${localKey.toLowerCase()}]`\r\n          );\r\n        }\r\n        await Load5eMonsterFile({\r\n          key: depKey,\r\n          fileName: `bestiary-${depKey.toLowerCase()}.json`,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let idx = 0; idx < data.monster.length; ++idx) {\r\n    let mon = data.monster[idx];\r\n\r\n    if (mon._copy) {\r\n      // console.log(\r\n      //   `For now, skipping _copy prop monsters ... on ${mon.name}`\r\n      // );\r\n      continue;\r\n    }\r\n\r\n    try {\r\n      mon = Monster.from5eSource(mon);\r\n      if (!Storage.monsterDict[mon.id]) {\r\n        Storage.monsterDict[mon.id] = mon;\r\n      }\r\n    } catch (err) {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        console.error(\r\n          `Loading on monster: ${mon.name} in file: ${fileName} failed.\\n${err}`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(`${localKey} processed.`);\r\n  Storage.processedKeys.push(localKey.toLowerCase());\r\n}\r\n\r\n// let initialised = false;\r\nconst Storage = {\r\n  _init: false,\r\n\r\n  // dictionaries\r\n  monsterDict: {},\r\n  subStateMonsterDict: {},\r\n  harvestingTableDict: {},\r\n  harvestedItemDict: {},\r\n  trinketTableDict: {},\r\n  craftableItemDict: {},\r\n\r\n  processingKeys: [],\r\n  processedKeys: [],\r\n\r\n  delayedMonsters: [],\r\n\r\n  Init: async () => {\r\n    if (Storage._init) {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        console.log(\"Storage already initialised\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.harvestingTables.length; ++idx) {\r\n      let harvestingTable = new HarvestingTable(Data.harvestingTables[idx]);\r\n      Storage.harvestingTableDict[harvestingTable.name] = harvestingTable;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.harvestedItems.length; ++idx) {\r\n      let harvestedItem = new HarvestedItem(Data.harvestedItems[idx]);\r\n      Storage.harvestedItemDict[harvestedItem.id] = harvestedItem;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.trinketTables.length; ++idx) {\r\n      let trinketTable = new TrinketTable(Data.trinketTables[idx]);\r\n      Storage.trinketTableDict[trinketTable.trinketTableType] = trinketTable;\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.craftableItems.length; ++idx) {\r\n      let craftableItem = new CraftableItem(Data.craftableItems[idx]);\r\n      Storage.craftableItemDict[craftableItem.id] = craftableItem;\r\n    }\r\n\r\n    store.dispatch(\r\n      addHarvestingTables(Object.values(Storage.harvestingTableDict))\r\n    );\r\n    store.dispatch(addHarvestedItems(Object.values(Storage.harvestedItemDict)));\r\n    store.dispatch(addTrinketTables(Object.values(Storage.trinketTableDict)));\r\n    store.dispatch(addCraftableItems(Object.values(Storage.craftableItemDict)));\r\n\r\n    // TODO: Uncomment the below to 'clean house'\r\n    // delete Storage.harvestingTableDict;\r\n    // delete Storage.harvestedItemDict;\r\n    // delete Storage.trinketTableDict;\r\n    delete Storage.craftableItemDict;\r\n\r\n    for (let key in Index) {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        console.log(`${key} :: ${Index[key]}`);\r\n      }\r\n\r\n      await Load5eMonsterFile({ key: key, fileName: Index[key] });\r\n    }\r\n\r\n    for (let idx = 0; idx < Data.monsters.length; ++idx) {\r\n      let monster = new SubStateMonster(Data.monsters[idx]);\r\n      Storage.subStateMonsterDict[monster.id] = monster;\r\n    }\r\n\r\n    store.dispatch(addSubMonsters(Object.values(Storage.subStateMonsterDict)));\r\n    store.dispatch(addMonsters(Object.values(Storage.monsterDict)));\r\n\r\n    delete Storage.monsterDict;\r\n    delete Storage.subStateMonsterDict;\r\n\r\n    Storage._init = true;\r\n  },\r\n};\r\n\r\nwindow.storage = Storage;\r\nexport default Storage;\r\n","// css-import\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/index.css\";\r\n// js-imports\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Storage from \"./utility/StorageUtil\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\n// Storage.Init().then(() => {\r\n//   ReactDOM.render(\r\n//     <React.StrictMode>\r\n//       <Provider store={store}>\r\n//         <Router basename={baseUrl}>\r\n//           <App />\r\n//         </Router>\r\n//       </Provider>\r\n//     </React.StrictMode>,\r\n//     rootElement\r\n//   );\r\n// });\r\n\r\nStorage.Init();\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router basename={baseUrl}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}